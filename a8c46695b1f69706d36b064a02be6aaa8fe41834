{
  "comments": [
    {
      "key": {
        "uuid": "baf63a44_c6f57799",
        "filename": "src/Pipeline/PixelRoutine.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1093,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-11-11T16:28:48Z",
      "side": 1,
      "message": "This means we\u0027re treating 8-bit as special, right? Is readPixel() doing the 0xFF to 0xFFFF expansion while for say 5-bit it returns 0xF800 range? Probably could use some clarification here, or we should make readPixel() return 0xFF00 range for 8-bit and do the expansion to 0xFFFF here.",
      "range": {
        "startLine": 1093,
        "startChar": 5,
        "endLine": 1093,
        "endChar": 38
      },
      "revId": "a8c46695b1f69706d36b064a02be6aaa8fe41834",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e671eaa0_c8abab6d",
        "filename": "src/Pipeline/PixelRoutine.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1131,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-11-11T16:28:48Z",
      "side": 1,
      "message": "Let\u0027s move this call to writeColor(), so we don\u0027t need it twice in alphaBlend() and have a more logical separation of responsibilities?",
      "range": {
        "startLine": 1131,
        "startChar": 3,
        "endLine": 1131,
        "endChar": 15
      },
      "revId": "a8c46695b1f69706d36b064a02be6aaa8fe41834",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "986ed0c1_68beb521",
        "filename": "src/Pipeline/PixelRoutine.hpp",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-11-11T16:28:48Z",
      "side": 1,
      "message": "Note that this parameter (and the ones below) are passed by pointer, not by value, which is slightly error prone. Should at least be made const. But I think it would be even cleaner to just retrieve the bit depths where we need them. It should be a quick calls, so no harm in calling them multiple times (and as noted in another comment it should eventually become a table entry lookup).",
      "range": {
        "startLine": 57,
        "startChar": 80,
        "endLine": 57,
        "endChar": 98
      },
      "revId": "a8c46695b1f69706d36b064a02be6aaa8fe41834",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c6f2be4_33ffb341",
        "filename": "src/Vulkan/VkFormat.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2258,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-11-11T16:28:48Z",
      "side": 1,
      "message": "note: No change required now, but we have several switch statements again for each format, and it\u0027s easy to make mistakes during refactorings. We should look into replacing this with a table that provides easier overview.",
      "range": {
        "startLine": 2258,
        "startChar": 1,
        "endLine": 2258,
        "endChar": 7
      },
      "revId": "a8c46695b1f69706d36b064a02be6aaa8fe41834",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "49a5fb0f_4035acc8",
        "filename": "src/Vulkan/VkFormat.h",
        "patchSetId": 3
      },
      "lineNbr": 74,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-11-11T16:28:48Z",
      "side": 1,
      "message": "nit: redBits etc. probably makes the code slightly more fluent to read.",
      "range": {
        "startLine": 74,
        "startChar": 9,
        "endLine": 74,
        "endChar": 14
      },
      "revId": "a8c46695b1f69706d36b064a02be6aaa8fe41834",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    }
  ]
}