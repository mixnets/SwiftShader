{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "fee324dd_a9c9f110",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 5005
      },
      "writtenOn": "2022-02-16T14:40:10Z",
      "side": 1,
      "message": "Does this fix any specific tests? If so, please mention them. Or is it just in preparation of a next CL which does the actual fixing?",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 37
      },
      "revId": "3c0780e245b61abba4853b7c8f1c0de77d54e0e4",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "99471412_9f9c38b0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 5050
      },
      "writtenOn": "2022-02-16T14:45:42Z",
      "side": 1,
      "message": "No, this is just required for VK_KHR_dynamic_rendering support (the next CL in the chain).",
      "parentUuid": "fee324dd_a9c9f110",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 37
      },
      "revId": "3c0780e245b61abba4853b7c8f1c0de77d54e0e4",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "948e539c_e1c631ea",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 5005
      },
      "writtenOn": "2022-02-16T14:40:10Z",
      "side": 1,
      "message": "Is b/177842474 related in any way? I\u0027d like to make sure we properly discern between this being either new Vulkan 1.3 functionality or a prior bug.",
      "range": {
        "startLine": 11,
        "startChar": 21,
        "endLine": 11,
        "endChar": 59
      },
      "revId": "3c0780e245b61abba4853b7c8f1c0de77d54e0e4",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d569e086_ee17f885",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 5050
      },
      "writtenOn": "2022-02-16T14:45:42Z",
      "side": 1,
      "message": "I think these are separate things. This isn\u0027t related to image resolve, but to the draw operation itself.",
      "parentUuid": "948e539c_e1c631ea",
      "range": {
        "startLine": 11,
        "startChar": 21,
        "endLine": 11,
        "endChar": 59
      },
      "revId": "3c0780e245b61abba4853b7c8f1c0de77d54e0e4",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b6f2d32_470e7d80",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 5005
      },
      "writtenOn": "2022-02-16T16:08:16Z",
      "side": 1,
      "message": "I\u0027m not so sure. `renderArea` is also a field in the `VkRenderPassBeginInfo` struct, and `VkRenderingInfo::renderArea` is defined as \"the render area that is affected by the render pass instance\" so I think they\u0027re exactly the same thing. While they don\u0027t affect draw calls directly, they affect attachment operations such as resolve but also clear which can definitely change the result of a test involving draw operations.\n\nLooks to me like the dynamic rendering tests offer some coverage for b/177842474. Let\u0027s mention it in the commit message and then this can land.",
      "parentUuid": "d569e086_ee17f885",
      "range": {
        "startLine": 11,
        "startChar": 21,
        "endLine": 11,
        "endChar": 59
      },
      "revId": "3c0780e245b61abba4853b7c8f1c0de77d54e0e4",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    }
  ]
}