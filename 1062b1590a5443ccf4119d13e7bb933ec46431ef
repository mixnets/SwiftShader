{
  "comments": [
    {
      "key": {
        "uuid": "4f5dd4f5_4affa56c",
        "filename": "src/Device/QuadRasterizer.hpp",
        "patchSetId": 6
      },
      "lineNbr": 31,
      "author": {
        "id": 6982
      },
      "writtenOn": "2019-03-20T01:06:51Z",
      "side": 1,
      "message": "Note: this is critical!\n\nTODO: Mark the override correctly; would have caught this with less headscratching",
      "revId": "1062b1590a5443ccf4119d13e7bb933ec46431ef",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4d2d155_c664f91f",
        "filename": "src/Device/QuadRasterizer.hpp",
        "patchSetId": 6
      },
      "lineNbr": 31,
      "author": {
        "id": 7183
      },
      "writtenOn": "2019-03-20T07:22:27Z",
      "side": 1,
      "message": "The reason I didn\u0027t mark this as virtual was that I didn\u0027t think it was necessary. I now see why:\n\n\tQuadRasterizer *generator \u003d new PixelProgram(state, context-\u003epipelineLayout, context-\u003epixelShader);\n\tgenerator-\u003egenerate();\n\troutine \u003d (*generator)(\"PixelRoutine_%0.8X\", state.shaderID);\n\tdelete generator;\n\nWhich seems a little... odd?\n\nI don\u0027t see any QuadRasterizer pointers being passed around, so I would opt for making the constructor and generate protected and dropping the virtuals. That or just fold QuadRasterizer into PixelProgram.",
      "parentUuid": "4f5dd4f5_4affa56c",
      "revId": "1062b1590a5443ccf4119d13e7bb933ec46431ef",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6cbc8903_6501e086",
        "filename": "src/Main/libX11.hpp",
        "patchSetId": 6
      },
      "lineNbr": 51,
      "author": {
        "id": 6982
      },
      "writtenOn": "2019-03-20T01:06:51Z",
      "side": 1,
      "message": "This was in Ben\u0027s V4 commit. Inclined to split it as we\u0027re not touching these files otherwise.",
      "revId": "1062b1590a5443ccf4119d13e7bb933ec46431ef",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "de0952c3_b91fa7e3",
        "filename": "src/Main/libX11.hpp",
        "patchSetId": 6
      },
      "lineNbr": 51,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-03-20T02:22:56Z",
      "side": 1,
      "message": "Doesn\u0027t bother me since it\u0027s a one-line change. If it\u0027s intertwined with other relevant changes it becomes distracting, but this is more efficient than starting a new change, IMO.",
      "parentUuid": "6cbc8903_6501e086",
      "revId": "1062b1590a5443ccf4119d13e7bb933ec46431ef",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c7e26f1_7a01129c",
        "filename": "src/Pipeline/PixelRoutine.cpp",
        "patchSetId": 6
      },
      "lineNbr": 67,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-03-20T02:22:56Z",
      "side": 1,
      "message": "This is hopping back and forth between generate methods. Acceptable for now but I made a note about refactoring it in the 2.0 doc.",
      "range": {
        "startLine": 57,
        "startChar": 0,
        "endLine": 67,
        "endChar": 2
      },
      "revId": "1062b1590a5443ccf4119d13e7bb933ec46431ef",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9498a7d3_d4d0d067",
        "filename": "src/Pipeline/VertexRoutine.cpp",
        "patchSetId": 6
      },
      "lineNbr": 25,
      "author": {
        "id": 7183
      },
      "writtenOn": "2019-03-20T07:22:27Z",
      "side": 1,
      "message": "Probably not needed.",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 25,
        "endChar": 38
      },
      "revId": "1062b1590a5443ccf4119d13e7bb933ec46431ef",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b3fa55e3_a11adf6a",
        "filename": "src/Pipeline/VertexRoutine.cpp",
        "patchSetId": 6
      },
      "lineNbr": 56,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-03-20T02:22:56Z",
      "side": 1,
      "message": "nit: stray newline",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 56,
        "endChar": 0
      },
      "revId": "1062b1590a5443ccf4119d13e7bb933ec46431ef",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "852aaf79_16743ccf",
        "filename": "src/Vulkan/VkCommandBuffer.cpp",
        "patchSetId": 6
      },
      "lineNbr": 276,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-03-20T02:22:56Z",
      "side": 1,
      "message": "Derive from Draw to avoid code duplication? Can be done later. Made a note about it in 2.0 doc.",
      "range": {
        "startLine": 276,
        "startChar": 7,
        "endLine": 276,
        "endChar": 18
      },
      "revId": "1062b1590a5443ccf4119d13e7bb933ec46431ef",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    }
  ]
}