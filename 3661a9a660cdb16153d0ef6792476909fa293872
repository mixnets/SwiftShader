{
  "comments": [
    {
      "key": {
        "uuid": "f677a13a_870a25ef",
        "filename": "src/Device/Blitter.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1364,
      "author": {
        "id": 9669
      },
      "writtenOn": "2019-10-10T18:49:04Z",
      "side": 1,
      "message": "I see why you changed this, but now it doesn\u0027t quite match the comment just above it anymore. Maybe add \"\u003d\u003d x \u003c\u003c 1 - (x \u0026 1)\", but the truth is, now that you factored out the *2, this comment applies less than it did before. Not sure what to do. In any case, if we keep this comment, it should go in the applyQuatLayout function template that I describe in my other comment in SamplerCore::applyQuadLayout.",
      "revId": "3661a9a660cdb16153d0ef6792476909fa293872",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09cc2764_00939ca7",
        "filename": "src/Pipeline/SamplerCore.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2077,
      "author": {
        "id": 9669
      },
      "writtenOn": "2019-10-10T18:49:04Z",
      "side": 1,
      "message": "As this code is pretty much the same as the quad layout code in Blitter::ComputeOffset, can we generalize this and have all 3 locations call the same function? Perhaps a template:\n\ntemplate \u003ctypename T\u003e\nvoid applyQuadLayout(T\u0026 x, T\u0026 y)\n{\n\tx \u003d (((y \u0026 T(1)) + x) \u003c\u003c 1) - (x \u0026 T(1));\n\ty \u0026\u003d T(~1);/\n}\n\nThe type would be automatically deduced in all three locations. In fact, we probably wouldn\u0027t need these two member functions at all - just call the function template directly. ComputeOffset would call it as well.",
      "revId": "3661a9a660cdb16153d0ef6792476909fa293872",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8532fe8c_5a333136",
        "filename": "src/Pipeline/SamplerCore.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2077,
      "author": {
        "id": 5050
      },
      "writtenOn": "2019-10-10T19:04:31Z",
      "side": 1,
      "message": "They\u0027re not exactly the same. The one in Blitter.cpp doesn\u0027t overwrite the input values, so I\u0027m not going to add temporary values to call this template. I can add the template function in this file, that will remove the need for the extra functions in the header file.",
      "parentUuid": "09cc2764_00939ca7",
      "revId": "3661a9a660cdb16153d0ef6792476909fa293872",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    }
  ]
}