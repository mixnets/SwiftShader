{
  "comments": [
    {
      "key": {
        "uuid": "81530a59_85a60739",
        "filename": "src/Pipeline/SamplerCore.hpp",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-12-03T14:16:43Z",
      "side": 1,
      "message": "Shouldn\u0027t be passed down this low. The array index is the same for all samples.",
      "range": {
        "startLine": 86,
        "startChar": 111,
        "endLine": 86,
        "endChar": 122
      },
      "revId": "ecab1aa8040c1ba0dc0108e0b5583700d6a2457a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c44fcfb5_6b32793f",
        "filename": "src/Pipeline/SamplerCore.hpp",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 5050
      },
      "writtenOn": "2019-12-03T15:22:17Z",
      "side": 1,
      "message": "Why is it the same for all samples? The array index is the last component of the vec4 coordinates passed to the texture sampling function. I see no requirement for a shader to only use a single cubemap of the cubemap array for a given texture sample operation.",
      "parentUuid": "81530a59_85a60739",
      "range": {
        "startLine": 86,
        "startChar": 111,
        "endLine": 86,
        "endChar": 122
      },
      "revId": "ecab1aa8040c1ba0dc0108e0b5583700d6a2457a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0b6838f_1a79de95",
        "filename": "src/Pipeline/SamplerCore.hpp",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-12-05T16:10:21Z",
      "side": 1,
      "message": "Sorry, I meant it\u0027s the same for all texels of a sample.\n\nAnyway, I see this is a pre-existing optimization opportunity since it also applies to 2D arrays but we pass in the array index as another generic coordinate. So this LGTM for now. I\u0027ll make a note about the future optimization potential.",
      "parentUuid": "c44fcfb5_6b32793f",
      "range": {
        "startLine": 86,
        "startChar": 111,
        "endLine": 86,
        "endChar": 122
      },
      "revId": "ecab1aa8040c1ba0dc0108e0b5583700d6a2457a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    }
  ]
}