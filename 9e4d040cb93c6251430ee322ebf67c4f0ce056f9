{
  "comments": [
    {
      "key": {
        "uuid": "ecddade9_542ae9f0",
        "filename": "src/Device/Surface.hpp",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 5005
      },
      "writtenOn": "2018-10-23T19:10:07Z",
      "side": 0,
      "message": "Keep. These are not equivalent to X8*** formats. The spec states \"specifies a three-component, 24-bit unsigned normalized format\".\n\nThey\u0027re not mandatory though.",
      "range": {
        "startLine": 82,
        "startChar": 2,
        "endLine": 83,
        "endChar": 16
      },
      "revId": "9e4d040cb93c6251430ee322ebf67c4f0ce056f9",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "891335e0_f23588e4",
        "filename": "src/Device/Surface.hpp",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 5050
      },
      "writtenOn": "2018-10-25T15:46:26Z",
      "side": 0,
      "message": "Done. This raises the question of whether we should keep any of the FORMAT_X* formats, but that can be answered later.",
      "parentUuid": "ecddade9_542ae9f0",
      "range": {
        "startLine": 82,
        "startChar": 2,
        "endLine": 83,
        "endChar": 16
      },
      "revId": "9e4d040cb93c6251430ee322ebf67c4f0ce056f9",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "be9178c2_97e0eba7",
        "filename": "src/Device/Surface.hpp",
        "patchSetId": 1
      },
      "lineNbr": 175,
      "author": {
        "id": 5005
      },
      "writtenOn": "2018-10-23T19:10:07Z",
      "side": 0,
      "message": "This is used to implement E5B9G9R9 and B10F_G11F_R11F currently. We need to figure out if it\u0027s reasonable to support all mandatory formats natively (and support other expected formats in the future), or whether we need to keep the internal/external conversion.\n\nEither way for now there seems no harm in keeping this one.",
      "range": {
        "startLine": 175,
        "startChar": 2,
        "endLine": 175,
        "endChar": 32
      },
      "revId": "9e4d040cb93c6251430ee322ebf67c4f0ce056f9",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba7f93c0_dace4e66",
        "filename": "src/Device/Surface.hpp",
        "patchSetId": 1
      },
      "lineNbr": 175,
      "author": {
        "id": 6982
      },
      "writtenOn": "2018-10-24T16:36:35Z",
      "side": 0,
      "message": "Strongly suggest we support E5B9G9R9 and B10F_G11F_R11F (and anything else we\u0027re currently missing) natively. Making sure the app can never see behind the curtain is harder than just making these work.",
      "parentUuid": "be9178c2_97e0eba7",
      "range": {
        "startLine": 175,
        "startChar": 2,
        "endLine": 175,
        "endChar": 32
      },
      "revId": "9e4d040cb93c6251430ee322ebf67c4f0ce056f9",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae984a32_a0810b1a",
        "filename": "src/Device/Surface.hpp",
        "patchSetId": 1
      },
      "lineNbr": 175,
      "author": {
        "id": 5050
      },
      "writtenOn": "2018-10-25T15:46:26Z",
      "side": 0,
      "message": "I would also prefer implementing E5B9G9R9 and B10F_G11F_R11F natively. There\u0027s no harm in keeping these formats around for now, but I\u0027ll do my beast not to use them.",
      "parentUuid": "ba7f93c0_dace4e66",
      "range": {
        "startLine": 175,
        "startChar": 2,
        "endLine": 175,
        "endChar": 32
      },
      "revId": "9e4d040cb93c6251430ee322ebf67c4f0ce056f9",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6c44ed80_3a939c95",
        "filename": "src/Device/Surface.hpp",
        "patchSetId": 1
      },
      "lineNbr": 182,
      "author": {
        "id": 5005
      },
      "writtenOn": "2018-10-23T19:10:07Z",
      "side": 0,
      "message": "same",
      "range": {
        "startLine": 182,
        "startChar": 2,
        "endLine": 182,
        "endChar": 31
      },
      "revId": "9e4d040cb93c6251430ee322ebf67c4f0ce056f9",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5527a41_f261d0b1",
        "filename": "src/Device/Surface.hpp",
        "patchSetId": 1
      },
      "lineNbr": 182,
      "author": {
        "id": 5050
      },
      "writtenOn": "2018-10-25T15:46:26Z",
      "side": 0,
      "message": "Done",
      "parentUuid": "6c44ed80_3a939c95",
      "range": {
        "startLine": 182,
        "startChar": 2,
        "endLine": 182,
        "endChar": 31
      },
      "revId": "9e4d040cb93c6251430ee322ebf67c4f0ce056f9",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b4a98651_8f22b956",
        "filename": "src/Device/Surface.hpp",
        "patchSetId": 1
      },
      "lineNbr": 395,
      "author": {
        "id": 5065
      },
      "writtenOn": "2018-10-24T09:32:32Z",
      "side": 0,
      "message": "Does this mean we won\u0027t support DXT or is it just cleanup? I think Vulkan as DXT at least as an extension, or maybe as a core optional features.",
      "revId": "9e4d040cb93c6251430ee322ebf67c4f0ce056f9",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4744718_7bc9b125",
        "filename": "src/Device/Surface.hpp",
        "patchSetId": 1
      },
      "lineNbr": 395,
      "author": {
        "id": 6982
      },
      "writtenOn": "2018-10-24T16:36:35Z",
      "side": 0,
      "message": "It\u0027s an optional core feature. The requirement is that we have to pick one family (of BC, ETC, ASTC) of compressed formats and support every format in that family.",
      "parentUuid": "b4a98651_8f22b956",
      "revId": "9e4d040cb93c6251430ee322ebf67c4f0ce056f9",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffc1debf_d1e0c19a",
        "filename": "src/Device/Surface.hpp",
        "patchSetId": 1
      },
      "lineNbr": 395,
      "author": {
        "id": 5050
      },
      "writtenOn": "2018-10-25T15:46:26Z",
      "side": 0,
      "message": "We can re-add them later, but for now, to keep this as lightweight as possible, we\u0027ll just aim for ETC2 support. We\u0027re looking into making every format natively supported by the sampler code, so getting rid of unnecessary formats simplifies the work. Most likely, if these formats get supported in Vulkan, they won\u0027t be implemented the same way they are now.",
      "parentUuid": "a4744718_7bc9b125",
      "revId": "9e4d040cb93c6251430ee322ebf67c4f0ce056f9",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    }
  ]
}