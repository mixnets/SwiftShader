{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4e85cad3_0e57f8d0",
        "filename": "src/Pipeline/ShaderCore.cpp",
        "patchSetId": 3
      },
      "lineNbr": 221,
      "author": {
        "id": 5050
      },
      "writtenOn": "2022-02-07T14:23:37Z",
      "side": 1,
      "message": "Nit: this can easily be optimized inside SinOrCos(). If you had SinOrCosOrTan(), it would look something like:\n\n        if(sin || cos)\n        {\n        \tFloat4 r \u003d Reciprocal(s2 * s2 + c2 * c2); // Only for sin or cos\n\t\tif(sin)\n\t\t{\n\t\t\treturn Float4(2.0f) * s2 * c2 * r;\n\t\t}\n\t\telse if(cos)\n\t\t{\n\t\t\treturn ((c2 * c2) - (s2 * s2)) * r;\n\t\t}\n\t}\n\telse if(tan) // Doesn\u0027t need to compute Reciprocal\n\t{\n\t\treturn (Float4(2.0f) * s2 * c2) / ((c2 * c2) - (s2 * s2));\n\t}",
      "range": {
        "startLine": 221,
        "startChar": 8,
        "endLine": 221,
        "endChar": 47
      },
      "revId": "cb03aa3e0f539a7e157c4ad9784c1ff8dc0c0e18",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bc8fcc75_0e5918ec",
        "filename": "src/Pipeline/ShaderCore.cpp",
        "patchSetId": 3
      },
      "lineNbr": 221,
      "author": {
        "id": 5005
      },
      "writtenOn": "2022-02-07T14:49:25Z",
      "side": 1,
      "message": "Sin() and Cos() won\u0027t perform any division in the newly optimized version. See https://swiftshader-review.googlesource.com/c/SwiftShader/+/61688\n\nThere\u0027s a small bit of optimization opportunity left for Tan() after that, but I think LLVM already takes care of that. Either way any further optimization should be a follow-up change.",
      "parentUuid": "4e85cad3_0e57f8d0",
      "range": {
        "startLine": 221,
        "startChar": 8,
        "endLine": 221,
        "endChar": 47
      },
      "revId": "cb03aa3e0f539a7e157c4ad9784c1ff8dc0c0e18",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5a4abad3_7a323367",
        "filename": "src/Pipeline/ShaderCore.cpp",
        "patchSetId": 3
      },
      "lineNbr": 221,
      "author": {
        "id": 5050
      },
      "writtenOn": "2022-02-07T14:59:51Z",
      "side": 1,
      "message": "At the moment. we ship Subzero with Chromium, though, so I\u0027d prefer if we didn\u0027t rely on potential compiler optimizations so much.",
      "parentUuid": "bc8fcc75_0e5918ec",
      "range": {
        "startLine": 221,
        "startChar": 8,
        "endLine": 221,
        "endChar": 47
      },
      "revId": "cb03aa3e0f539a7e157c4ad9784c1ff8dc0c0e18",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "37051e07_359cb78f",
        "filename": "src/Pipeline/ShaderCore.cpp",
        "patchSetId": 3
      },
      "lineNbr": 221,
      "author": {
        "id": 5005
      },
      "writtenOn": "2022-02-07T15:16:48Z",
      "side": 1,
      "message": "This change doesn\u0027t alter any behavior. It just copies what we already had in https://cs.opensource.google/swiftshader/SwiftShader/+/master:src/Reactor/OptimalIntrinsics.cpp;drc\u003d0b901607cad4f70bee9ca37e5fc8790b5466d674;l\u003d90\n\nAlso none of the other changes rely on the JIT to do additional optimizations. I\u0027m just optimizing Sin() and Cos() at the moment, which also improves Tan()\u0027s performance already. We can focus specifically on Tan() later.",
      "parentUuid": "5a4abad3_7a323367",
      "range": {
        "startLine": 221,
        "startChar": 8,
        "endLine": 221,
        "endChar": 47
      },
      "revId": "cb03aa3e0f539a7e157c4ad9784c1ff8dc0c0e18",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "345a9a60_7a5330f0",
        "filename": "src/Pipeline/ShaderCore.cpp",
        "patchSetId": 3
      },
      "lineNbr": 221,
      "author": {
        "id": 5005
      },
      "writtenOn": "2022-02-07T16:16:17Z",
      "side": 1,
      "message": "Noted for future reference: b/169754022#comment6",
      "parentUuid": "37051e07_359cb78f",
      "range": {
        "startLine": 221,
        "startChar": 8,
        "endLine": 221,
        "endChar": 47
      },
      "revId": "cb03aa3e0f539a7e157c4ad9784c1ff8dc0c0e18",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    }
  ]
}