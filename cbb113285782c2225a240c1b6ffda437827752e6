{
  "comments": [
    {
      "key": {
        "uuid": "0754eda0_8c78dca0",
        "filename": "src/Pipeline/PixelProgram.cpp",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-04-16T03:24:07Z",
      "side": 1,
      "message": "nit: Let\u0027s turn this into \"if(spirvShader-\u003ehasBuiltin(spv::BuiltInFrontFacing))\"\n\nDoesn\u0027t have to happen as part of this CL.",
      "range": {
        "startLine": 36,
        "startChar": 2,
        "endLine": 37,
        "endChar": 45
      },
      "revId": "cbb113285782c2225a240c1b6ffda437827752e6",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99e32cc2_a262a746",
        "filename": "src/Pipeline/PixelProgram.cpp",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 6982
      },
      "writtenOn": "2019-04-16T03:26:26Z",
      "side": 1,
      "message": "Well... this is actually a bit annoying. We need the iterator just below, not only whether the thing is declared.\n\nPerhaps I should adjust the PixelProgram/VertexProgram handling to have a lambda-based approach to binding builtins, like Ben built for ComputeProgram?",
      "parentUuid": "0754eda0_8c78dca0",
      "range": {
        "startLine": 36,
        "startChar": 2,
        "endLine": 37,
        "endChar": 45
      },
      "revId": "cbb113285782c2225a240c1b6ffda437827752e6",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a322eecd_d5f5ad77",
        "filename": "src/Pipeline/PixelProgram.cpp",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-04-16T04:05:54Z",
      "side": 1,
      "message": "Thanks for pointing that out. It was really just a minor suggestion to improve readability. I don\u0027t think lambda\u0027s would improve it.\n\nInstead we could write something like:\n\nif(spirvShader-\u003ehasBuiltIn(spv::BuiltInFrontFacing))\n{\n    auto frontFacing \u003d ...\n    routine.getBuiltIn(spv::BuiltInFrontFacing) \u003d frontFacing;\n}\n\nWhere the assignment automatically takes FirstComponent into account. Yes it\u0027s a double lookup, but it would be more elegant and better encapsulated. Anyway, let\u0027s revisit this after we\u0027ve reached the 1.0 milestone.",
      "parentUuid": "99e32cc2_a262a746",
      "range": {
        "startLine": 36,
        "startChar": 2,
        "endLine": 37,
        "endChar": 45
      },
      "revId": "cbb113285782c2225a240c1b6ffda437827752e6",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "61967727_5d68fee0",
        "filename": "src/Pipeline/SetupRoutine.cpp",
        "patchSetId": 1
      },
      "lineNbr": 110,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-04-16T03:24:07Z",
      "side": 1,
      "message": "nit: This loses the (minor) optimization that this was only being computed when (two-sided) stencil is being used. Also for BuiltInFrontFacing we only need clockwiseMask if it\u0027s being used.\n\nAgain no need to change this CL. Just noting this for later.",
      "range": {
        "startLine": 110,
        "startChar": 4,
        "endLine": 110,
        "endChar": 19
      },
      "revId": "cbb113285782c2225a240c1b6ffda437827752e6",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    }
  ]
}