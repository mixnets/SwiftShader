{
  "comments": [
    {
      "key": {
        "uuid": "acd38921_916cbd0f",
        "filename": ".gitmodules",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 7183
      },
      "writtenOn": "2020-01-08T22:17:05Z",
      "side": 1,
      "message": "Ãœbernit: Can we either remove the newlines between the other submodule definitions, or add a blank newline above this for consistency\u0027s sake.",
      "revId": "9736566ccf3d66aa9a264dc5da4b605efc9754d8",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69a07d03_89ca648a",
        "filename": ".gitmodules",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 5005
      },
      "writtenOn": "2020-01-08T22:19:33Z",
      "side": 1,
      "message": "uber-nit: separate by a blank line?",
      "revId": "9736566ccf3d66aa9a264dc5da4b605efc9754d8",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "db03f5bd_2f5526c3",
        "filename": ".gitmodules",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 9035
      },
      "writtenOn": "2020-01-09T17:23:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "acd38921_916cbd0f",
      "revId": "9736566ccf3d66aa9a264dc5da4b605efc9754d8",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "12e84fbb_d38df90b",
        "filename": ".gitmodules",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 9035
      },
      "writtenOn": "2020-01-09T17:23:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "69a07d03_89ca648a",
      "revId": "9736566ccf3d66aa9a264dc5da4b605efc9754d8",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36f046de_18ba7e94",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 5005
      },
      "writtenOn": "2020-01-08T22:19:33Z",
      "side": 1,
      "message": "I\u0027m assuming they don\u0027t run with SwiftShader unless the ICD has been configured? I wonder if we can specify a path as part of the build to avoid requiring any further setup.\n\nSomething to look into after this lands.",
      "range": {
        "startLine": 14,
        "startChar": 29,
        "endLine": 14,
        "endChar": 35
      },
      "revId": "9736566ccf3d66aa9a264dc5da4b605efc9754d8",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63e1b7b6_a811d7c7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 5005
      },
      "writtenOn": "2020-01-08T22:19:33Z",
      "side": 1,
      "message": "Can this be done automatically?\n\nAnyway, probably a topic for a follow-up change. This seems OK as a starting point.",
      "range": {
        "startLine": 16,
        "startChar": 50,
        "endLine": 18,
        "endChar": 26
      },
      "revId": "9736566ccf3d66aa9a264dc5da4b605efc9754d8",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f9e14f2e_426d78cf",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 7183
      },
      "writtenOn": "2020-01-08T22:17:05Z",
      "side": 1,
      "message": "I personally would have used the SS_ prefix, which I think is a more common abbreviation for the project. You might want to wait for Nicolas\u0027 opinion before making any changes here though.",
      "range": {
        "startLine": 20,
        "startChar": 55,
        "endLine": 20,
        "endChar": 58
      },
      "revId": "9736566ccf3d66aa9a264dc5da4b605efc9754d8",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83dd1d9f_309e1943",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 5005
      },
      "writtenOn": "2020-01-08T22:29:55Z",
      "side": 1,
      "message": "We\u0027re trying to avoid use of that abbreviation: https://en.wikipedia.org/wiki/SS\n\nHow about BUILD_SWIFTSHADER_EGL etc?\n\n(Note we\u0027re the only users of the CMake build files so we can iterate on it easily and don\u0027t have to block Sean while we\u0027re bikeshedding.)",
      "parentUuid": "f9e14f2e_426d78cf",
      "range": {
        "startLine": 20,
        "startChar": 55,
        "endLine": 20,
        "endChar": 58
      },
      "revId": "9736566ccf3d66aa9a264dc5da4b605efc9754d8",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0cf23d1b_92955796",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 7183
      },
      "writtenOn": "2020-01-08T22:36:01Z",
      "side": 1,
      "message": "\u003e Note we\u0027re the only users of the CMake build files\n\nNope, we\u0027re not.\n\nhttps://github.com/google/amber/blob/c6c570dcf0e70000d62274aa3ae75c4c76e85174/third_party/CMakeLists.txt#L68\n\n\u003e How about BUILD_SWIFTSHADER_EGL etc?\n\nI don\u0027t mind using the full name, but should we keep the project at the beginning for consistency (SWIFTSHADER_BUILD_EGL)? Marl prefixes all flags with MARL_, e.g. MARL_ASAN.",
      "parentUuid": "83dd1d9f_309e1943",
      "range": {
        "startLine": 20,
        "startChar": 55,
        "endLine": 20,
        "endChar": 58
      },
      "revId": "9736566ccf3d66aa9a264dc5da4b605efc9754d8",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07618138_8a00f987",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 9669
      },
      "writtenOn": "2020-01-09T00:44:50Z",
      "side": 1,
      "message": "yes please, git-gui groups variables by word until first underscore.",
      "parentUuid": "0cf23d1b_92955796",
      "range": {
        "startLine": 20,
        "startChar": 55,
        "endLine": 20,
        "endChar": 58
      },
      "revId": "9736566ccf3d66aa9a264dc5da4b605efc9754d8",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a178a0bb_0f62ab99",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 5005
      },
      "writtenOn": "2020-01-09T04:08:54Z",
      "side": 1,
      "message": "\u003e Nope, we\u0027re not.\n\nThanks for the heads up!\n\n\u003e should we keep the project at the beginning for consistency\n\nSounds good. I thought it would be easier to read when starting with verb, but that makes it harder to see which options belong together with which project, and we can just read the prefix as a namespace instead. In fact it appears there\u0027s support for using :: for target namespace in CMake: https://stackoverflow.com/questions/48524359/naming-convention-for-components-and-namespaces-in-cmake",
      "parentUuid": "07618138_8a00f987",
      "range": {
        "startLine": 20,
        "startChar": 55,
        "endLine": 20,
        "endChar": 58
      },
      "revId": "9736566ccf3d66aa9a264dc5da4b605efc9754d8",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aaa91a32_ac4cb927",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 9035
      },
      "writtenOn": "2020-01-09T16:21:05Z",
      "side": 1,
      "message": "I believe target namespaces only work for actual targets, and not for cache variables like options.",
      "parentUuid": "a178a0bb_0f62ab99",
      "range": {
        "startLine": 20,
        "startChar": 55,
        "endLine": 20,
        "endChar": 58
      },
      "revId": "9736566ccf3d66aa9a264dc5da4b605efc9754d8",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ae7e874_43ce8f57",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 9035
      },
      "writtenOn": "2020-01-09T17:23:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aaa91a32_ac4cb927",
      "range": {
        "startLine": 20,
        "startChar": 55,
        "endLine": 20,
        "endChar": 58
      },
      "revId": "9736566ccf3d66aa9a264dc5da4b605efc9754d8",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "763d22e5_b5f50f9a",
        "filename": "CMakeLists.txt",
        "patchSetId": 2
      },
      "lineNbr": 109,
      "author": {
        "id": 7183
      },
      "writtenOn": "2020-01-08T22:17:05Z",
      "side": 1,
      "message": "If we\u0027re prefixing options, I\u0027d probably recommend prefixing all of these. MSAN and the like especially.",
      "range": {
        "startLine": 99,
        "startChar": 0,
        "endLine": 109,
        "endChar": 65
      },
      "revId": "9736566ccf3d66aa9a264dc5da4b605efc9754d8",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "03f16997_ef5cc919",
        "filename": "CMakeLists.txt",
        "patchSetId": 2
      },
      "lineNbr": 109,
      "author": {
        "id": 9035
      },
      "writtenOn": "2020-01-09T17:23:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "763d22e5_b5f50f9a",
      "range": {
        "startLine": 99,
        "startChar": 0,
        "endLine": 109,
        "endChar": 65
      },
      "revId": "9736566ccf3d66aa9a264dc5da4b605efc9754d8",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4648b8cc_7aad321e",
        "filename": "CMakeLists.txt",
        "patchSetId": 2
      },
      "lineNbr": 155,
      "author": {
        "id": 7183
      },
      "writtenOn": "2020-01-08T23:27:15Z",
      "side": 1,
      "message": "I\u0027m not sure this works. Regres is erroring with:\n\n  CMake Warning at CMakeLists.txt:150 (message):\n  \n        third_party/googletest submodule missing.\n        Running \u0027git submodule update --init\u0027 to download it:\n          \n  fatal: Invalid path \u0027/third_party\u0027: No such file or directory\n\nIt looks like ${CMAKE_CURRECT_SOURCE_DIR} is an empty string, and so it\u0027s thinking this is an absolute path?\n\nSame with libbacktrace below.",
      "range": {
        "startLine": 155,
        "startChar": 8,
        "endLine": 155,
        "endChar": 111
      },
      "revId": "9736566ccf3d66aa9a264dc5da4b605efc9754d8",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dad785b8_3f1c005a",
        "filename": "CMakeLists.txt",
        "patchSetId": 2
      },
      "lineNbr": 155,
      "author": {
        "id": 7183
      },
      "writtenOn": "2020-01-08T23:29:08Z",
      "side": 1,
      "message": "Actually, perhaps this is just that it needs quotes around the whole path?",
      "parentUuid": "4648b8cc_7aad321e",
      "range": {
        "startLine": 155,
        "startChar": 8,
        "endLine": 155,
        "endChar": 111
      },
      "revId": "9736566ccf3d66aa9a264dc5da4b605efc9754d8",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32476729_ba9aa9a5",
        "filename": "CMakeLists.txt",
        "patchSetId": 2
      },
      "lineNbr": 155,
      "author": {
        "id": 9035
      },
      "writtenOn": "2020-01-09T16:21:05Z",
      "side": 1,
      "message": "Woops, I misspelled \"CMAKE_CURRENT_SOURCE_DIR\" so it just substituted in an empty string.",
      "parentUuid": "dad785b8_3f1c005a",
      "range": {
        "startLine": 155,
        "startChar": 8,
        "endLine": 155,
        "endChar": 111
      },
      "revId": "9736566ccf3d66aa9a264dc5da4b605efc9754d8",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99330395_2a149a90",
        "filename": "CMakeLists.txt",
        "patchSetId": 2
      },
      "lineNbr": 155,
      "author": {
        "id": 7183
      },
      "writtenOn": "2020-01-09T16:30:07Z",
      "side": 1,
      "message": "That would do it! I was too tired to even spot the typo.",
      "parentUuid": "32476729_ba9aa9a5",
      "range": {
        "startLine": 155,
        "startChar": 8,
        "endLine": 155,
        "endChar": 111
      },
      "revId": "9736566ccf3d66aa9a264dc5da4b605efc9754d8",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e9573d6_20abf2a1",
        "filename": "CMakeLists.txt",
        "patchSetId": 2
      },
      "lineNbr": 155,
      "author": {
        "id": 9035
      },
      "writtenOn": "2020-01-09T17:23:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "99330395_2a149a90",
      "range": {
        "startLine": 155,
        "startChar": 8,
        "endLine": 155,
        "endChar": 111
      },
      "revId": "9736566ccf3d66aa9a264dc5da4b605efc9754d8",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    }
  ]
}