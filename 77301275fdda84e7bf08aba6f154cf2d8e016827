{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c96d60d8_ee354734",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5005
      },
      "writtenOn": "2022-04-28T17:25:46Z",
      "side": 1,
      "message": "Thanks fr making those changes. A few more suggestions:",
      "revId": "77301275fdda84e7bf08aba6f154cf2d8e016827",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8d91359_3a5b0742",
        "filename": "src/Vulkan/VkDescriptorSet.hpp",
        "patchSetId": 4
      },
      "lineNbr": 68,
      "author": {
        "id": 5005
      },
      "writtenOn": "2022-04-28T17:25:46Z",
      "side": 1,
      "message": "I think we can just use `sizeof(DescriptorSetHeader)` instead of this function. But a `static_assert(sizeof(DescriptorSet) \u003d\u003d sizeof(DescriptorSetHeader));` would be good to have to enforce that our header starts at offset 0 as intended.",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 68,
        "endChar": 1
      },
      "revId": "77301275fdda84e7bf08aba6f154cf2d8e016827",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "58dc7aba_accb46b3",
        "filename": "src/Vulkan/VkDescriptorSet.hpp",
        "patchSetId": 4
      },
      "lineNbr": 68,
      "author": {
        "id": 78381
      },
      "writtenOn": "2022-04-29T06:02:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d8d91359_3a5b0742",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 68,
        "endChar": 1
      },
      "revId": "77301275fdda84e7bf08aba6f154cf2d8e016827",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "392c45e7_b26a0b00",
        "filename": "src/Vulkan/VkDescriptorSet.hpp",
        "patchSetId": 4
      },
      "lineNbr": 70,
      "author": {
        "id": 5005
      },
      "writtenOn": "2022-04-28T17:25:46Z",
      "side": 1,
      "message": "This can be a member function.",
      "range": {
        "startLine": 70,
        "startChar": 16,
        "endLine": 70,
        "endChar": 43
      },
      "revId": "77301275fdda84e7bf08aba6f154cf2d8e016827",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "17d77e35_375a26b6",
        "filename": "src/Vulkan/VkDescriptorSet.hpp",
        "patchSetId": 4
      },
      "lineNbr": 70,
      "author": {
        "id": 78381
      },
      "writtenOn": "2022-04-29T06:02:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "392c45e7_b26a0b00",
      "range": {
        "startLine": 70,
        "startChar": 16,
        "endLine": 70,
        "endChar": 43
      },
      "revId": "77301275fdda84e7bf08aba6f154cf2d8e016827",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19de9ed1_fbeb555f",
        "filename": "src/Vulkan/VkDescriptorSet.hpp",
        "patchSetId": 4
      },
      "lineNbr": 72,
      "author": {
        "id": 5005
      },
      "writtenOn": "2022-04-28T17:25:46Z",
      "side": 1,
      "message": "`size_t` is not guaranteed to be the same width as a pointer, so this unsafe. `intptr_t` can be used where integer arithmetic is required, but in this case on can just use `reinterpretcast\u003cuint8_t*\u003e(set)` and not need a second cast.",
      "range": {
        "startLine": 72,
        "startChar": 22,
        "endLine": 72,
        "endChar": 28
      },
      "revId": "77301275fdda84e7bf08aba6f154cf2d8e016827",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b449d9e1_f7c69784",
        "filename": "src/Vulkan/VkDescriptorSet.hpp",
        "patchSetId": 4
      },
      "lineNbr": 72,
      "author": {
        "id": 78381
      },
      "writtenOn": "2022-04-29T06:02:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "19de9ed1_fbeb555f",
      "range": {
        "startLine": 72,
        "startChar": 22,
        "endLine": 72,
        "endChar": 28
      },
      "revId": "77301275fdda84e7bf08aba6f154cf2d8e016827",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    }
  ]
}