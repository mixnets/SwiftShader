{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "cdf546f9_b1cdef0d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 7183
      },
      "writtenOn": "2020-10-14T16:35:13Z",
      "side": 1,
      "message": "+2 because less is always more. One question about prior logic.",
      "revId": "5827f09d4161fc8950fa1f402ee49ea03da781f4",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76eff956_407927d0",
        "filename": "src/Vulkan/VkCommandPool.cpp",
        "patchSetId": 3
      },
      "lineNbr": 96,
      "author": {
        "id": 7183
      },
      "writtenOn": "2020-10-14T16:35:13Z",
      "side": 1,
      "message": "Aren\u0027t we missing calls to vk::destroy() here?",
      "range": {
        "startLine": 96,
        "startChar": 1,
        "endLine": 96,
        "endChar": 24
      },
      "revId": "5827f09d4161fc8950fa1f402ee49ea03da781f4",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "609786bc_908bfa09",
        "filename": "src/Vulkan/VkCommandPool.cpp",
        "patchSetId": 3
      },
      "lineNbr": 96,
      "author": {
        "id": 5050
      },
      "writtenOn": "2020-10-14T16:54:12Z",
      "side": 1,
      "message": "I think the correct workflow is to release command buffers using vkFreeCommandBuffers().\nIn that case, the erase() call at line 77 simply fails to remove any object from the std::set object (commandBuffers) if they were removed here, but still releases the command buffer objects.",
      "parentUuid": "76eff956_407927d0",
      "range": {
        "startLine": 96,
        "startChar": 1,
        "endLine": 96,
        "endChar": 24
      },
      "revId": "5827f09d4161fc8950fa1f402ee49ea03da781f4",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6a8c9397_59c20e32",
        "filename": "src/Vulkan/VkCommandPool.cpp",
        "patchSetId": 3
      },
      "lineNbr": 96,
      "author": {
        "id": 5050
      },
      "writtenOn": "2020-10-14T17:13:04Z",
      "side": 1,
      "message": "Hum, vkDestroyCommandPool() does mention \"When a pool is destroyed, all command buffers allocated from the pool are freed.\" and we\u0027re losing track of those command buffers here, we probably shouldn\u0027t call clear() here.",
      "parentUuid": "609786bc_908bfa09",
      "range": {
        "startLine": 96,
        "startChar": 1,
        "endLine": 96,
        "endChar": 24
      },
      "revId": "5827f09d4161fc8950fa1f402ee49ea03da781f4",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c7ff8f6a_202f799e",
        "filename": "src/Vulkan/VkCommandPool.cpp",
        "patchSetId": 3
      },
      "lineNbr": 96,
      "author": {
        "id": 7183
      },
      "writtenOn": "2020-10-14T17:17:41Z",
      "side": 1,
      "message": "Right, regardless of the spec behavior, once you\u0027ve clear()ed the set, there\u0027s no way to call vk::destroy() on the CommandBuffers - so something seems wonky.",
      "parentUuid": "6a8c9397_59c20e32",
      "range": {
        "startLine": 96,
        "startChar": 1,
        "endLine": 96,
        "endChar": 24
      },
      "revId": "5827f09d4161fc8950fa1f402ee49ea03da781f4",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    }
  ]
}