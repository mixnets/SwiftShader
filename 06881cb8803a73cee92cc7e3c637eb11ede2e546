{
  "comments": [
    {
      "key": {
        "uuid": "dc52f153_e5b5feba",
        "filename": "src/System/Synchronization.hpp",
        "patchSetId": 3
      },
      "lineNbr": 28,
      "author": {
        "id": 5050
      },
      "writtenOn": "2019-05-21T15:06:27Z",
      "side": 1,
      "message": "Could we have a name less generic than Event? Maybe ThreadEvent or SyncEvent. Any name will do, as long as it can\u0027t easily be confused with something else.\nI know you kept the old name, but now, we have vk::Event as well.",
      "range": {
        "startLine": 28,
        "startChar": 6,
        "endLine": 28,
        "endChar": 11
      },
      "revId": "06881cb8803a73cee92cc7e3c637eb11ede2e546",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "acaa5eb2_d1efddf0",
        "filename": "src/System/Synchronization.hpp",
        "patchSetId": 3
      },
      "lineNbr": 28,
      "author": {
        "id": 7183
      },
      "writtenOn": "2019-05-21T15:11:21Z",
      "side": 1,
      "message": "If we wanted to do this, perhaps all these types should go in a sw::sync:: namespace?",
      "parentUuid": "dc52f153_e5b5feba",
      "range": {
        "startLine": 28,
        "startChar": 6,
        "endLine": 28,
        "endChar": 11
      },
      "revId": "06881cb8803a73cee92cc7e3c637eb11ede2e546",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6669e7fd_2692ec99",
        "filename": "src/System/Synchronization.hpp",
        "patchSetId": 3
      },
      "lineNbr": 28,
      "author": {
        "id": 5050
      },
      "writtenOn": "2019-05-21T15:29:58Z",
      "side": 1,
      "message": "As long as it\u0027s not easily confused with vk::Event, I\u0027m ok with any name/namespace change. You just need to get Nicolas to agree with the name you pick :)",
      "parentUuid": "acaa5eb2_d1efddf0",
      "range": {
        "startLine": 28,
        "startChar": 6,
        "endLine": 28,
        "endChar": 11
      },
      "revId": "06881cb8803a73cee92cc7e3c637eb11ede2e546",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01e81f09_6f2e9e5c",
        "filename": "src/System/Synchronization.hpp",
        "patchSetId": 3
      },
      "lineNbr": 43,
      "author": {
        "id": 9669
      },
      "writtenOn": "2019-05-21T14:41:38Z",
      "side": 1,
      "message": "I see that ManualReset is a new type compared to what this class used to offer beforehand. Did you have an actual use-case for this? I can imagine it being useful, for sure, but just wondering if it\u0027s speculative design?",
      "revId": "06881cb8803a73cee92cc7e3c637eb11ede2e546",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "22323d7f_bfded17f",
        "filename": "src/System/Synchronization.hpp",
        "patchSetId": 3
      },
      "lineNbr": 43,
      "author": {
        "id": 7183
      },
      "writtenOn": "2019-05-21T14:45:58Z",
      "side": 1,
      "message": "It\u0027s used by vk::Fence in a later change.",
      "parentUuid": "01e81f09_6f2e9e5c",
      "revId": "06881cb8803a73cee92cc7e3c637eb11ede2e546",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01419e0d_9c263551",
        "filename": "src/System/Synchronization.hpp",
        "patchSetId": 3
      },
      "lineNbr": 43,
      "author": {
        "id": 9669
      },
      "writtenOn": "2019-05-21T15:19:36Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "22323d7f_bfded17f",
      "revId": "06881cb8803a73cee92cc7e3c637eb11ede2e546",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5baa1021_1ec5942e",
        "filename": "src/System/Synchronization.hpp",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 9669
      },
      "writtenOn": "2019-05-21T14:41:38Z",
      "side": 1,
      "message": "According to cppreference (https://en.cppreference.com/w/cpp/thread/condition_variable), it\u0027s not necessary to hold the lock when invoking notify, so you could scope the lock and signaled \u003d true here. This can be a pessimization, as explained in the first couple lines here: https://stackoverflow.com/a/17102100/4039972",
      "revId": "06881cb8803a73cee92cc7e3c637eb11ede2e546",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b71c2aa_dc2eac18",
        "filename": "src/System/Synchronization.hpp",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 7183
      },
      "writtenOn": "2019-05-21T14:45:58Z",
      "side": 1,
      "message": "https://b.corp.google.com/issues/133135427",
      "parentUuid": "5baa1021_1ec5942e",
      "revId": "06881cb8803a73cee92cc7e3c637eb11ede2e546",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "35dfdb90_3b83add8",
        "filename": "src/System/Synchronization.hpp",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 9669
      },
      "writtenOn": "2019-05-21T15:19:36Z",
      "side": 1,
      "message": "Ack. As discussed, a comment here will help avoid a future attempt to optimize this.",
      "parentUuid": "6b71c2aa_dc2eac18",
      "revId": "06881cb8803a73cee92cc7e3c637eb11ede2e546",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c16d6ed5_6ac2f35d",
        "filename": "src/System/Synchronization.hpp",
        "patchSetId": 3
      },
      "lineNbr": 65,
      "author": {
        "id": 9669
      },
      "writtenOn": "2019-05-21T14:41:38Z",
      "side": 1,
      "message": "Wouldn\u0027t \"reset\" be a better name, given that Event::Type determines how the event is reset?",
      "revId": "06881cb8803a73cee92cc7e3c637eb11ede2e546",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "668879b1_186b8522",
        "filename": "src/System/Synchronization.hpp",
        "patchSetId": 3
      },
      "lineNbr": 65,
      "author": {
        "id": 7183
      },
      "writtenOn": "2019-05-21T14:45:58Z",
      "side": 1,
      "message": "signal(), wait(), clear() are a common trio for events: https://en.wikipedia.org/wiki/Event_(synchronization_primitive)\n\nThe type names we picked to match Window\u0027s terminology: https://docs.microsoft.com/en-us/windows/desktop/api/synchapi/nf-synchapi-createeventa",
      "parentUuid": "c16d6ed5_6ac2f35d",
      "revId": "06881cb8803a73cee92cc7e3c637eb11ede2e546",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cba0220e_2764e2bc",
        "filename": "src/System/Synchronization.hpp",
        "patchSetId": 3
      },
      "lineNbr": 65,
      "author": {
        "id": 9669
      },
      "writtenOn": "2019-05-21T15:19:36Z",
      "side": 1,
      "message": "Okay, but then AutoClear and ManualClear for the types?",
      "parentUuid": "668879b1_186b8522",
      "revId": "06881cb8803a73cee92cc7e3c637eb11ede2e546",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b61c2470_532497f2",
        "filename": "src/System/Synchronization.hpp",
        "patchSetId": 3
      },
      "lineNbr": 65,
      "author": {
        "id": 7183
      },
      "writtenOn": "2019-05-21T15:22:51Z",
      "side": 1,
      "message": "See \u0027bManualReset\u0027 in the second link",
      "parentUuid": "cba0220e_2764e2bc",
      "revId": "06881cb8803a73cee92cc7e3c637eb11ede2e546",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc2cbd24_8f1b7bf6",
        "filename": "src/System/Synchronization.hpp",
        "patchSetId": 3
      },
      "lineNbr": 65,
      "author": {
        "id": 9669
      },
      "writtenOn": "2019-05-21T15:24:19Z",
      "side": 1,
      "message": "Microsoft sucks at naming things, but okay!",
      "parentUuid": "b61c2470_532497f2",
      "revId": "06881cb8803a73cee92cc7e3c637eb11ede2e546",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3918fe41_cbd920f5",
        "filename": "src/System/Synchronization.hpp",
        "patchSetId": 3
      },
      "lineNbr": 65,
      "author": {
        "id": 7183
      },
      "writtenOn": "2019-05-21T15:25:09Z",
      "side": 1,
      "message": "How about:\n\n enum class ClearMode\n {\n    Auto,\n    Manual\n };\n\nAlso, for the sake of not taking out regres for the rest of the day, can I apply stylistic preference changes to the end of the stack?",
      "parentUuid": "b61c2470_532497f2",
      "revId": "06881cb8803a73cee92cc7e3c637eb11ede2e546",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    }
  ]
}