{
  "comments": [
    {
      "key": {
        "uuid": "580c8ea2_2cbd539c",
        "filename": "src/Device/LRUCache.hpp",
        "patchSetId": 6
      },
      "lineNbr": 51,
      "author": {
        "id": 9669
      },
      "writtenOn": "2020-03-23T22:33:54Z",
      "side": 1,
      "message": "I agree with removing the virtual function; however, I would consider doing this differently:\n\nMake an LRUCacheBase that contains the current LRUCache, minus it\u0027s \u0027add\u0027 function. Then derive (publicly) LRUCache and LRUSnapshotCache from LRUCacheBase, and implement \u0027add\u0027 in each of them. To make sure LRUCacheBase is not used as a polymorphic base class, simply make the constructor protected in that class.\n\nThis is a better approach for a few reasons:\n1. The two types are unrelated, except for their common base, which is really just a mixin.\n2. You won\u0027t have to do the weird redefining of \u0027query\u0027 in LRUSnapshotCache to jump the version in the base class. LRUCache overrides (hides) the base one, but that\u0027s fine, since we can\u0027t use the base polymorphically.",
      "revId": "7bd0899a9e0ec757a0084ef9c34386a344a9df5a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    }
  ]
}