{
  "comments": [
    {
      "key": {
        "uuid": "b30a309d_f7758a64",
        "filename": "src/Vulkan/VkShaderModule.cpp",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 5050
      },
      "writtenOn": "2020-06-05T11:58:57Z",
      "side": 1,
      "message": "Nit: is there a way to distinguish between completely bad SPIR-V and just SPIR-V using unsupported features?",
      "range": {
        "startLine": 35,
        "startChar": 1,
        "endLine": 35,
        "endChar": 7
      },
      "revId": "4fc9ff17058da65b98fe63d0e784d493ebd9d4d5",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79f62d73_45bd9d5b",
        "filename": "src/Vulkan/VkShaderModule.cpp",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 5005
      },
      "writtenOn": "2020-06-05T13:15:25Z",
      "side": 1,
      "message": "Yes, SpirvShader validates that the OpCapability instructions don\u0027t declare use of an unsupported feature, while SpirvTools::Validate ensures that features which are used have been properly declared.\n\nThere could be bugs in the latter, but we have various checks in place at the instruction implementations, like the ones that caught b/151213403. So I think we have ample coverage.",
      "parentUuid": "b30a309d_f7758a64",
      "range": {
        "startLine": 35,
        "startChar": 1,
        "endLine": 35,
        "endChar": 7
      },
      "revId": "4fc9ff17058da65b98fe63d0e784d493ebd9d4d5",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b3b16401_0d23f385",
        "filename": "src/Vulkan/VkShaderModule.cpp",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 5050
      },
      "writtenOn": "2020-06-05T13:49:49Z",
      "side": 1,
      "message": "ok, then could we have an UNSUPPORTED instead of an ASSERT?",
      "parentUuid": "79f62d73_45bd9d5b",
      "range": {
        "startLine": 35,
        "startChar": 1,
        "endLine": 35,
        "endChar": 7
      },
      "revId": "4fc9ff17058da65b98fe63d0e784d493ebd9d4d5",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "43ebcc56_7afee4b6",
        "filename": "src/Vulkan/VkShaderModule.cpp",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 5005
      },
      "writtenOn": "2020-06-05T14:07:58Z",
      "side": 1,
      "message": "There\u0027s an UNSUPPORTED() for the features: https://swiftshader.googlesource.com/SwiftShader/+/e3eb327e8c3c724a415fa4d5f4805f2e281f4760/src/Pipeline/SpirvShader.cpp#360\n\nHere it\u0027s an ASSERT() since it \"should\" never trigger, not even when an unsupported feature is used.",
      "parentUuid": "b3b16401_0d23f385",
      "range": {
        "startLine": 35,
        "startChar": 1,
        "endLine": 35,
        "endChar": 7
      },
      "revId": "4fc9ff17058da65b98fe63d0e784d493ebd9d4d5",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3d8318a_1ccc6aca",
        "filename": "src/Vulkan/VkShaderModule.cpp",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 5050
      },
      "writtenOn": "2020-06-05T15:20:45Z",
      "side": 1,
      "message": "ok, so this can only be reached if the optimizer somehow uses an unsupported feature, like in this case, I suppose",
      "parentUuid": "43ebcc56_7afee4b6",
      "range": {
        "startLine": 35,
        "startChar": 1,
        "endLine": 35,
        "endChar": 7
      },
      "revId": "4fc9ff17058da65b98fe63d0e784d493ebd9d4d5",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    }
  ]
}