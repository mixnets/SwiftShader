{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9c8220e8_90a034bd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 5050
      },
      "writtenOn": "2022-01-26T16:27:57Z",
      "side": 1,
      "message": "Update to ToT. PTAL.",
      "revId": "546a14a60e90bfde6f4c5eca362de1eb3f48b6c0",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93ccb1cf_04cfa8a9",
        "filename": "src/Vulkan/libVulkan.cpp",
        "patchSetId": 14
      },
      "lineNbr": 430,
      "author": {
        "id": 5005
      },
      "writtenOn": "2022-01-26T16:51:55Z",
      "side": 1,
      "message": "I think we should omit declaring VK_KHR_synchronization2 support as an extension, and only implement the Core 1.3 functions. Few if any applications will look for this extension in isolation, and just use the Core functions if they target 1.3 as a minimum. Applications that support Vulkan 1.2 or less must be able to fall back to using the old synchronization primitives anyway.",
      "range": {
        "startLine": 430,
        "startChar": 1,
        "endLine": 430,
        "endChar": 88
      },
      "revId": "546a14a60e90bfde6f4c5eca362de1eb3f48b6c0",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89400848_62d70140",
        "filename": "src/Vulkan/libVulkan.cpp",
        "patchSetId": 14
      },
      "lineNbr": 430,
      "author": {
        "id": 5050
      },
      "writtenOn": "2022-01-26T19:37:05Z",
      "side": 1,
      "message": "If we do that, we\u0027re landing these changes blindly, with no test coverage. I\u0027m fine with any solution, but I think landing multiple, possibly interacting extensions without test coverage isn\u0027t the best for us. I don\u0027t think dEQP will exercise this path unless we expose the extension. I\u0027m not sure what we\u0027re losing by exposing the extension, since it\u0027ll be supported as is in Vulkan 1.3 and we already have VkPromotedExtensions.cpp to make promoting extensions easy.",
      "parentUuid": "93ccb1cf_04cfa8a9",
      "range": {
        "startLine": 430,
        "startChar": 1,
        "endLine": 430,
        "endChar": 88
      },
      "revId": "546a14a60e90bfde6f4c5eca362de1eb3f48b6c0",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dca94cdb_f2344184",
        "filename": "src/Vulkan/libVulkan.cpp",
        "patchSetId": 14
      },
      "lineNbr": 949,
      "author": {
        "id": 5005
      },
      "writtenOn": "2022-01-26T16:51:55Z",
      "side": 1,
      "message": "I assume there\u0027s a non-KHR version of this after updating the headers?",
      "range": {
        "startLine": 949,
        "startChar": 67,
        "endLine": 949,
        "endChar": 71
      },
      "revId": "546a14a60e90bfde6f4c5eca362de1eb3f48b6c0",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "10ec8ca3_481e1d38",
        "filename": "src/Vulkan/libVulkan.cpp",
        "patchSetId": 14
      },
      "lineNbr": 949,
      "author": {
        "id": 5050
      },
      "writtenOn": "2022-01-26T19:37:05Z",
      "side": 1,
      "message": "Yes, but:\n    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES_KHR \u003d VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES,\n\nso it has the same value, so you can use either one of them.",
      "parentUuid": "dca94cdb_f2344184",
      "range": {
        "startLine": 949,
        "startChar": 67,
        "endLine": 949,
        "endChar": 71
      },
      "revId": "546a14a60e90bfde6f4c5eca362de1eb3f48b6c0",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    }
  ]
}