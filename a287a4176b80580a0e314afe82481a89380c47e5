{
  "comments": [
    {
      "key": {
        "uuid": "749ef82f_ba182cc2",
        "filename": "src/Vulkan/VkDescriptorSetLayout.cpp",
        "patchSetId": 3
      },
      "lineNbr": 122,
      "author": {
        "id": 7183
      },
      "writtenOn": "2019-04-26T12:15:05Z",
      "side": 1,
      "message": "Shouldn\u0027t we be telling the backend that these are now 16 byte aligned? I think we specify 4 byte alignment at the moment.",
      "range": {
        "startLine": 122,
        "startChar": 4,
        "endLine": 122,
        "endChar": 82
      },
      "revId": "a287a4176b80580a0e314afe82481a89380c47e5",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db85684a_e985e2cf",
        "filename": "src/Vulkan/VkDescriptorSetLayout.cpp",
        "patchSetId": 3
      },
      "lineNbr": 122,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-04-26T13:03:48Z",
      "side": 1,
      "message": "You mean LLVM? We only assume natural alignment of scalars for now. In a few select places vector loads specify 16 byte alignment, e.g.: https://swiftshader.googlesource.com/SwiftShader/+/64da4ae84db22545e72b8bd1f732bd358899380a/src/Pipeline/SamplerCore.cpp#933\n\nOn modern x86 CPUs, movups is as efficient as movaps iff the address is aligned, so it\u0027s not crucial for performance to aggressively enforce alignment. For ARM it greatly depends on the implementation, so I\u0027ll make a note about checking the impact later.",
      "parentUuid": "749ef82f_ba182cc2",
      "range": {
        "startLine": 122,
        "startChar": 4,
        "endLine": 122,
        "endChar": 82
      },
      "revId": "a287a4176b80580a0e314afe82481a89380c47e5",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca638bdd_03154f41",
        "filename": "src/Vulkan/VkDescriptorSetLayout.cpp",
        "patchSetId": 3
      },
      "lineNbr": 122,
      "author": {
        "id": 7183
      },
      "writtenOn": "2019-04-26T16:28:06Z",
      "side": 1,
      "message": "Yes LLVM. The alignment on the loads can affect the instructions picked when lowering.\nFor example, if you are lowering a vector load with a smaller specified alignment than the minimum allowed alignment for a vector load, LLVM will quite happily do scalar loads and insert.\nWhile I\u0027m aware x86 now supports 4 byte alignment, I\u0027m not sure this will be performant on other architectures.",
      "parentUuid": "db85684a_e985e2cf",
      "range": {
        "startLine": 122,
        "startChar": 4,
        "endLine": 122,
        "endChar": 82
      },
      "revId": "a287a4176b80580a0e314afe82481a89380c47e5",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    }
  ]
}