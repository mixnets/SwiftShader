{
  "comments": [
    {
      "key": {
        "uuid": "2d006bce_a01144b2",
        "filename": "src/Device/Blitter.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1915,
      "author": {
        "id": 5050
      },
      "writtenOn": "2020-08-27T20:50:23Z",
      "side": 1,
      "message": "Shouldn\u0027t this be:\n!\u003d VkOffset3D{ 0, 0, 0 })",
      "range": {
        "startLine": 1915,
        "startChar": 23,
        "endLine": 1915,
        "endChar": 82
      },
      "revId": "2fbfa4c382db1322a7302391b5ddffb6080505ce",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98707bd5_51ff97ee",
        "filename": "src/Device/Blitter.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1915,
      "author": {
        "id": 5005
      },
      "writtenOn": "2020-08-28T15:15:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2d006bce_a01144b2",
      "range": {
        "startLine": 1915,
        "startChar": 23,
        "endLine": 1915,
        "endChar": 82
      },
      "revId": "2fbfa4c382db1322a7302391b5ddffb6080505ce",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a1bd972_c96e0de3",
        "filename": "src/Device/Blitter.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1971,
      "author": {
        "id": 5050
      },
      "writtenOn": "2020-08-27T20:50:23Z",
      "side": 1,
      "message": "Would an inlined function really be slower than a MACRO? This isn\u0027t very pretty.",
      "range": {
        "startLine": 1971,
        "startChar": 0,
        "endLine": 1971,
        "endChar": 100
      },
      "revId": "2fbfa4c382db1322a7302391b5ddffb6080505ce",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "baf99820_f648433f",
        "filename": "src/Device/Blitter.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1971,
      "author": {
        "id": 5005
      },
      "writtenOn": "2020-08-28T15:15:32Z",
      "side": 1,
      "message": "I copied this from the decade-old code used by the legacy GLES implementation. I think back then this provided the best guarantee that it would effectively be inlined. Anyway, I checked and found no difference in performance using an inline function with MSVC. Also, at least on x86, the next patch uses SSE2 intrinsics so this pure C++ path is of lesser importance. Done.",
      "parentUuid": "2a1bd972_c96e0de3",
      "range": {
        "startLine": 1971,
        "startChar": 0,
        "endLine": 1971,
        "endChar": 100
      },
      "revId": "2fbfa4c382db1322a7302391b5ddffb6080505ce",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5be3bead_7ebbd98f",
        "filename": "src/Device/Blitter.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1984,
      "author": {
        "id": 5050
      },
      "writtenOn": "2020-08-27T20:50:23Z",
      "side": 1,
      "message": "Probably not important, but you could save 1 temporary unsigned int variable by doing this average at line 1981",
      "range": {
        "startLine": 1984,
        "startChar": 5,
        "endLine": 1984,
        "endChar": 26
      },
      "revId": "2fbfa4c382db1322a7302391b5ddffb6080505ce",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5328463_08d44b9e",
        "filename": "src/Device/Blitter.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1984,
      "author": {
        "id": 5005
      },
      "writtenOn": "2020-08-28T15:15:32Z",
      "side": 1,
      "message": "I don\u0027t think that has any net effect, due to the dependency graph remaining the same.",
      "parentUuid": "5be3bead_7ebbd98f",
      "range": {
        "startLine": 1984,
        "startChar": 5,
        "endLine": 1984,
        "endChar": 26
      },
      "revId": "2fbfa4c382db1322a7302391b5ddffb6080505ce",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    }
  ]
}