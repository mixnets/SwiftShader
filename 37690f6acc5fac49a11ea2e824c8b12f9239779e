{
  "comments": [
    {
      "key": {
        "uuid": "52bb072a_bb0b0974",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 10,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-08-09T19:08:24Z",
      "side": 1,
      "message": "Is this due to division by zero? Any chance we can stop them from happening beforehand? I don\u0027t think there\u0027s any guarantee that floating-point division by zero doesn\u0027t throw an exception. Just happens to be the default on most platforms that integer division throws and fp does not.\n\nAnyway, seems reasonable for silencing ClusterFuzz.",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 4
      },
      "revId": "37690f6acc5fac49a11ea2e824c8b12f9239779e",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "845c9621_fc5bb237",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 10,
      "author": {
        "id": 9035
      },
      "writtenOn": "2019-08-12T14:13:28Z",
      "side": 1,
      "message": "Division by 0 is well defined for floating point: if the numerator is non-zero then it results in infinite with the sign matching the numerator. Otherwise it results in NaN.",
      "parentUuid": "52bb072a_bb0b0974",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 4
      },
      "revId": "37690f6acc5fac49a11ea2e824c8b12f9239779e",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5be1ae37_88610d4f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 10,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-08-13T20:54:03Z",
      "side": 1,
      "message": "Right, but are these NaNs the result of 0/0 or something else? Also I\u0027m not sure if we really would want to handle cases that result in Inf?",
      "parentUuid": "845c9621_fc5bb237",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 4
      },
      "revId": "37690f6acc5fac49a11ea2e824c8b12f9239779e",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bc45f104_0dcb028d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 10,
      "author": {
        "id": 9035
      },
      "writtenOn": "2019-08-14T14:40:50Z",
      "side": 1,
      "message": "From everything I\u0027ve seen they\u0027re the result of 0/0. And inf is also probably bad, I can create a follow up patch for that.",
      "parentUuid": "5be1ae37_88610d4f",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 4
      },
      "revId": "37690f6acc5fac49a11ea2e824c8b12f9239779e",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27efe66d_9315225f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 10,
      "author": {
        "id": 9035
      },
      "writtenOn": "2019-08-14T14:41:42Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "bc45f104_0dcb028d",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 4
      },
      "revId": "37690f6acc5fac49a11ea2e824c8b12f9239779e",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1dd7304e_3897d162",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 10,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-08-14T19:07:52Z",
      "side": 1,
      "message": "Thanks for confirming that. Let\u0027s first create a dEQP test for the cases that led to NaN.",
      "parentUuid": "27efe66d_9315225f",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 4
      },
      "revId": "37690f6acc5fac49a11ea2e824c8b12f9239779e",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "73ef6be1_ff98fae0",
        "filename": "src/OpenGL/libGLESv2/Device.cpp",
        "patchSetId": 5
      },
      "lineNbr": 537,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-08-09T19:08:24Z",
      "side": 1,
      "message": "nit: Extra blank line?",
      "revId": "37690f6acc5fac49a11ea2e824c8b12f9239779e",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fcaf9e6e_6eccfe46",
        "filename": "src/OpenGL/libGLESv2/Device.cpp",
        "patchSetId": 5
      },
      "lineNbr": 537,
      "author": {
        "id": 9035
      },
      "writtenOn": "2019-08-14T14:41:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "73ef6be1_ff98fae0",
      "revId": "37690f6acc5fac49a11ea2e824c8b12f9239779e",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3059df23_02276cdb",
        "filename": "src/OpenGL/libGLESv2/Device.cpp",
        "patchSetId": 5
      },
      "lineNbr": 543,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-08-09T19:08:24Z",
      "side": 1,
      "message": "nit: Note that the return value is used for indicating an internal error only (glBlitFramebuffer doesn\u0027t have any error associated with bad rectangle parameters). So if we encounter a NaN with an ordinary application (not a fuzzer looking for edge cases) we\u0027d probably want to know about it as it indicates an app bug or SwiftShader bug.\n\nAnyway, no big deal, but something ANGLE may want to discern between.",
      "range": {
        "startLine": 538,
        "startChar": 2,
        "endLine": 543,
        "endChar": 3
      },
      "revId": "37690f6acc5fac49a11ea2e824c8b12f9239779e",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a77dfa3_c7f53aac",
        "filename": "src/OpenGL/libGLESv2/Device.cpp",
        "patchSetId": 5
      },
      "lineNbr": 543,
      "author": {
        "id": 9035
      },
      "writtenOn": "2019-08-14T14:41:42Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "3059df23_02276cdb",
      "range": {
        "startLine": 538,
        "startChar": 2,
        "endLine": 543,
        "endChar": 3
      },
      "revId": "37690f6acc5fac49a11ea2e824c8b12f9239779e",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    }
  ]
}