{
  "comments": [
    {
      "key": {
        "uuid": "662e8196_822f1cf9",
        "filename": "src/Pipeline/SpirvShader.cpp",
        "patchSetId": 3
      },
      "lineNbr": 579,
      "author": {
        "id": 5065
      },
      "writtenOn": "2019-02-22T13:06:54Z",
      "side": 1,
      "message": "What wouldn\u0027t be a literalAccessChain? A constantAccessChain?\n\nAlso this could have a more explicit name such as \"AccessChainOffsetFromBase\"?",
      "revId": "cc3615384663b04b6065b2006fea030623665c0c",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c397725_11b5ccca",
        "filename": "src/Pipeline/SpirvShader.cpp",
        "patchSetId": 3
      },
      "lineNbr": 579,
      "author": {
        "id": 6982
      },
      "writtenOn": "2019-02-22T15:55:49Z",
      "side": 1,
      "message": "The difference is whether you walk the type tree according to literal indices, or indices stored in spirv objects (constant and otherwise).",
      "parentUuid": "662e8196_822f1cf9",
      "revId": "cc3615384663b04b6065b2006fea030623665c0c",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "240e3432_f94223be",
        "filename": "src/Pipeline/SpirvShader.cpp",
        "patchSetId": 3
      },
      "lineNbr": 615,
      "author": {
        "id": 5065
      },
      "writtenOn": "2019-02-22T13:06:54Z",
      "side": 1,
      "message": "The rest of the code looks like it is handling accesses into aggregates by value because we are computing an offset. Accessing a pointer seems wrong because it isn\u0027t clear how the offset should be updated. Maybe I\u0027m missing something about how pointers are implemented though.",
      "revId": "cc3615384663b04b6065b2006fea030623665c0c",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c316b985_289d83f1",
        "filename": "src/Pipeline/SpirvShader.cpp",
        "patchSetId": 3
      },
      "lineNbr": 615,
      "author": {
        "id": 6982
      },
      "writtenOn": "2019-02-22T15:55:49Z",
      "side": 1,
      "message": "This can\u0027t happen. Leftover from id-driven version. Removed.",
      "parentUuid": "240e3432_f94223be",
      "revId": "cc3615384663b04b6065b2006fea030623665c0c",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "60530ff9_09674efa",
        "filename": "src/Pipeline/SpirvShader.cpp",
        "patchSetId": 3
      },
      "lineNbr": 619,
      "author": {
        "id": 7183
      },
      "writtenOn": "2019-02-22T10:22:37Z",
      "side": 1,
      "message": "WalkLiteralAccessChain",
      "range": {
        "startLine": 619,
        "startChar": 38,
        "endLine": 619,
        "endChar": 53
      },
      "revId": "cc3615384663b04b6065b2006fea030623665c0c",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8b14f3e_b52097ec",
        "filename": "src/Pipeline/SpirvShader.cpp",
        "patchSetId": 3
      },
      "lineNbr": 619,
      "author": {
        "id": 6982
      },
      "writtenOn": "2019-02-22T15:55:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "60530ff9_09674efa",
      "range": {
        "startLine": 619,
        "startChar": 38,
        "endLine": 619,
        "endChar": 53
      },
      "revId": "cc3615384663b04b6065b2006fea030623665c0c",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    }
  ]
}