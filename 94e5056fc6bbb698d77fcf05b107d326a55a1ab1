{
  "comments": [
    {
      "key": {
        "uuid": "127d9666_c0511b0c",
        "filename": "CMakeLists.txt",
        "patchSetId": 6
      },
      "lineNbr": 2167,
      "author": {
        "id": 7183
      },
      "writtenOn": "2020-01-29T21:43:12Z",
      "side": 1,
      "message": "nope.",
      "range": {
        "startLine": 2167,
        "startChar": 79,
        "endLine": 2167,
        "endChar": 83
      },
      "revId": "94e5056fc6bbb698d77fcf05b107d326a55a1ab1",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67b57d96_4721c5a6",
        "filename": "CMakeLists.txt",
        "patchSetId": 6
      },
      "lineNbr": 2167,
      "author": {
        "id": 5005
      },
      "writtenOn": "2020-01-29T22:39:33Z",
      "side": 1,
      "message": "For posterity: This caused Regres to use it as the build output directory, expecting vk_swiftshader.json to be in that directory as well. https://swiftshader-review.googlesource.com/40649 makes it always use build/ instead, and has some checks for ensuring the .json and .so are where they\u0027re expected to be.\n\nTotally forgot that I made copying the \"loader\" lib to out/ part of this change. O:-) Still makes sense I think, and I intent to have more build products copied in here.\n\nLet me know when you\u0027ve updated and restarted Regres, and I\u0027ll rebase this.",
      "parentUuid": "127d9666_c0511b0c",
      "range": {
        "startLine": 2167,
        "startChar": 79,
        "endLine": 2167,
        "endChar": 83
      },
      "revId": "94e5056fc6bbb698d77fcf05b107d326a55a1ab1",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "903a3df3_00fe6348",
        "filename": "CMakeLists.txt",
        "patchSetId": 6
      },
      "lineNbr": 2167,
      "author": {
        "id": 7183
      },
      "writtenOn": "2020-01-30T00:39:46Z",
      "side": 1,
      "message": "I would much prefer to avoid dumping build artifacts into the source tree.\nYes, we currently have a bit of a convention to build into `${CMAKE_CURRENT_SOURCE_DIR}/build`, but it\u0027s far more hygienic to allow the build artifacts to be placed out-of-tree and have the build not touch the source tree at all.\n\nWhat I\u0027d suggest is that we copy these to `${CMAKE_BINARY_DIR}/out`. You\u0027ll then still get your out directory, and we\u0027re keeping the git checkout clean.",
      "parentUuid": "67b57d96_4721c5a6",
      "range": {
        "startLine": 2167,
        "startChar": 79,
        "endLine": 2167,
        "endChar": 83
      },
      "revId": "94e5056fc6bbb698d77fcf05b107d326a55a1ab1",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "75000e99_12146ede",
        "filename": "CMakeLists.txt",
        "patchSetId": 6
      },
      "lineNbr": 2167,
      "author": {
        "id": 5005
      },
      "writtenOn": "2020-01-30T02:28:23Z",
      "side": 1,
      "message": "Note that /out/ is (still) in .gitignore, so the git checkout is kept clean. /build/ is checked in, but that will be changed back to being ignored when b/139189696 is completed, which this CL is blocking.",
      "parentUuid": "903a3df3_00fe6348",
      "range": {
        "startLine": 2167,
        "startChar": 79,
        "endLine": 2167,
        "endChar": 83
      },
      "revId": "94e5056fc6bbb698d77fcf05b107d326a55a1ab1",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2fe813fc_d0f6c55b",
        "filename": "CMakeLists.txt",
        "patchSetId": 6
      },
      "lineNbr": 2167,
      "author": {
        "id": 7183
      },
      "writtenOn": "2020-01-30T09:07:40Z",
      "side": 1,
      "message": "\u003e Note that /out/ is (still) in .gitignore, so the git checkout is kept clean.\n\nI\u0027m aware it is still in the .gitignore (and I\u0027d like it removed), but I still wouldn\u0027t consider this \u0027clean\u0027.\n\nSome more reasons:\n• Dumping stuff into the source tree makes it impossible to use multiple build directories. ccache helps here, but if you have the disk space, it is sometimes *really* convenient to have multiple build output directories with different configs (debug vs release, LLVM vs subzero). This is especially useful when trying to identify a bug that only affects one flavour, and requires continual hopping and testing between build types.\n• Dumping stuff into the source tree also means you cannot \"go nuclear\" and `rm -fr` the build directory to ensure you have a clean build. To point: I\u0027m fairly certain that these lines we\u0027re discussing will not delete the copied files if you `make clean`.\n\nAs I said, copy these to `${CMAKE_BINARY_DIR}/out`, you\u0027ll get what you want at `{swiftshader}/build/out`, and we get the ability to do builds completely out-of-tree. We\u0027re all winners.",
      "parentUuid": "75000e99_12146ede",
      "range": {
        "startLine": 2167,
        "startChar": 79,
        "endLine": 2167,
        "endChar": 83
      },
      "revId": "94e5056fc6bbb698d77fcf05b107d326a55a1ab1",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "18606a8e_4ba0e4bf",
        "filename": "CMakeLists.txt",
        "patchSetId": 6
      },
      "lineNbr": 2167,
      "author": {
        "id": 5005
      },
      "writtenOn": "2020-01-30T11:21:55Z",
      "side": 1,
      "message": "I\u0027m not arguing against the benefits of multiple build directories. We can have this copied to ${CMAKE_BINARY_DIR}/out/ as well. Heck, no reason not to copy it to ${CMAKE_BINARY_DIR}/ directly.\n\nThe benefit of having it in /out/ is knowing where your last build output is, or someone else\u0027s.",
      "parentUuid": "2fe813fc_d0f6c55b",
      "range": {
        "startLine": 2167,
        "startChar": 79,
        "endLine": 2167,
        "endChar": 83
      },
      "revId": "94e5056fc6bbb698d77fcf05b107d326a55a1ab1",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6329b65_9bab1cb6",
        "filename": "CMakeLists.txt",
        "patchSetId": 6
      },
      "lineNbr": 2167,
      "author": {
        "id": 7183
      },
      "writtenOn": "2020-01-30T11:58:51Z",
      "side": 1,
      "message": "Then you\u0027re actively encouraging people to use the binaries out of the source tree instead of the build folder, which encourages people to use a process that suffers from the problems I\u0027ve listed above.\nI just don\u0027t understand why {SwiftShader}/build/out is any worse to you than {SwiftShader}/out. I honestly cannot think of a single compelling argument.\n\nIf you\u0027re strongly objecting to changing this, I recommend getting a second opinion here.",
      "parentUuid": "18606a8e_4ba0e4bf",
      "range": {
        "startLine": 2167,
        "startChar": 79,
        "endLine": 2167,
        "endChar": 83
      },
      "revId": "94e5056fc6bbb698d77fcf05b107d326a55a1ab1",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7e4e619_5255bffa",
        "filename": "CMakeLists.txt",
        "patchSetId": 6
      },
      "lineNbr": 2167,
      "author": {
        "id": 5005
      },
      "writtenOn": "2020-01-30T16:16:49Z",
      "side": 1,
      "message": "I\u0027ve split it off into a separate change so we don\u0027t have to block this on it.",
      "parentUuid": "d6329b65_9bab1cb6",
      "range": {
        "startLine": 2167,
        "startChar": 79,
        "endLine": 2167,
        "endChar": 83
      },
      "revId": "94e5056fc6bbb698d77fcf05b107d326a55a1ab1",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    }
  ]
}