{
  "comments": [
    {
      "key": {
        "uuid": "3bea4009_d88020ef",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-02-20T15:15:02Z",
      "side": 1,
      "message": "nit: Since SwiftShader is in its own repo, this is probably redundant.",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 12
      },
      "revId": "555c742f9460c7b6f227621011a93fb5c67c57a1",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9822df44_2113bbca",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 6725
      },
      "writtenOn": "2019-02-20T15:19:09Z",
      "side": 1,
      "message": "Yes, but bugdroid will (hopefully) copy the CL description to the mentioned bug, and without this I\u0027d have to click through to every \"Remove semicolons\" cl to see which repo it was in.",
      "parentUuid": "3bea4009_d88020ef",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 12
      },
      "revId": "555c742f9460c7b6f227621011a93fb5c67c57a1",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9265bdc1_6261ccc5",
        "filename": "src/OpenGL/compiler/ConstantUnion.h",
        "patchSetId": 3
      },
      "lineNbr": 26,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-02-20T15:02:37Z",
      "side": 1,
      "message": "nit: Since this inserts new and delete operator declarations, it\u0027s a bit weird not to end the statement(s) with a semicolon. That said, it\u0027s weird to have a function-style macro here as well...\n\nIt\u0027s legacy code that will be deprecated at some point, so I don\u0027t care too much either way. FWIW the equivalent ANGLE code uses just \"POOL_ALLOCATOR_NEW_DELETE\". I wonder if there\u0027s an elegant way to require adding a semicolon, without causing confusing errors when it\u0027s forgotten.\n\nProbably the most elegant solution is to eliminate the macro altogether by using the \u0027curiously recurring template pattern\u0027.",
      "range": {
        "startLine": 26,
        "startChar": 1,
        "endLine": 26,
        "endChar": 28
      },
      "revId": "555c742f9460c7b6f227621011a93fb5c67c57a1",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83602d70_bf8630a9",
        "filename": "src/OpenGL/compiler/ConstantUnion.h",
        "patchSetId": 3
      },
      "lineNbr": 26,
      "author": {
        "id": 6725
      },
      "writtenOn": "2019-02-20T15:08:12Z",
      "side": 1,
      "message": "This expands to function definitions, so this expands to\n\n   void foo() {};\n\nessentially, which is not a statement. The semicolon here will warn (see bug).\n\nThe macro might be a function-style macro because that gives you a better error message when the macro is not defined for some reason (.h that defines it not included).",
      "parentUuid": "9265bdc1_6261ccc5",
      "range": {
        "startLine": 26,
        "startChar": 1,
        "endLine": 26,
        "endChar": 28
      },
      "revId": "555c742f9460c7b6f227621011a93fb5c67c57a1",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    }
  ]
}