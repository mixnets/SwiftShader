{
  "comments": [
    {
      "key": {
        "uuid": "1cb4219e_0404f497",
        "filename": "src/OpenGL/libGLESv2/Context.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3023,
      "author": {
        "id": 5005
      },
      "writtenOn": "2018-02-23T18:46:56Z",
      "side": 1,
      "message": "Should we even be making it this far when there\u0027s no program? What are the conditions that make this happen? Also, if this returns GL_NO_ERROR then the calling function is just going to continue (and assume the vertex buffers have been applied), which also seems fragile. So it seems to me that this check should happen earlier.",
      "range": {
        "startLine": 3020,
        "startChar": 1,
        "endLine": 3023,
        "endChar": 2
      },
      "revId": "142f5ea0f2bc36260da7a326b6d531cc66a20392",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47f9afde_eaa344c0",
        "filename": "src/OpenGL/libGLESv2/Context.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3023,
      "author": {
        "id": 5050
      },
      "writtenOn": "2018-02-26T11:56:49Z",
      "side": 1,
      "message": "AFAIK, we go this far in order to test for as many gl errors as possible before returning (negative API stuff), but we can most likely return earlier. The failing tests were dEQP-GLES3.performance.buffer.data_upload.function_call.",
      "parentUuid": "1cb4219e_0404f497",
      "range": {
        "startLine": 3020,
        "startChar": 1,
        "endLine": 3023,
        "endChar": 2
      },
      "revId": "142f5ea0f2bc36260da7a326b6d531cc66a20392",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8caee221_f1671720",
        "filename": "src/OpenGL/libGLESv2/Context.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3023,
      "author": {
        "id": 5545
      },
      "writtenOn": "2018-03-05T19:25:09Z",
      "side": 1,
      "message": "Spec says this should not generate an error, and otherwise behavior is undefined.\n\nThe condition to make this happen is fairly easy to do in user apps; just bind program 0 and try to draw.",
      "parentUuid": "47f9afde_eaa344c0",
      "range": {
        "startLine": 3020,
        "startChar": 1,
        "endLine": 3023,
        "endChar": 2
      },
      "revId": "142f5ea0f2bc36260da7a326b6d531cc66a20392",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0fe312d_b82f0e1c",
        "filename": "src/OpenGL/libGLESv2/Context.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3023,
      "author": {
        "id": 5005
      },
      "writtenOn": "2018-03-06T14:54:30Z",
      "side": 1,
      "message": "This check can be moved to the start of the method, since the first thing VertexDataManager::prepareVertexData() does, in the new code, if there\u0027s no program, is return GL_NO_ERROR. Moving it then also allows to eliminate that check from VertexDataManager::prepareVertexData().",
      "parentUuid": "8caee221_f1671720",
      "range": {
        "startLine": 3020,
        "startChar": 1,
        "endLine": 3023,
        "endChar": 2
      },
      "revId": "142f5ea0f2bc36260da7a326b6d531cc66a20392",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    }
  ]
}