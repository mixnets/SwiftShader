{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c177d22b_6dfc287f",
        "filename": "src/Vulkan/VkDeviceMemory.cpp",
        "patchSetId": 2
      },
      "lineNbr": 245,
      "author": {
        "id": 5005
      },
      "writtenOn": "2021-08-24T20:24:55Z",
      "side": 1,
      "message": "Is this fallthrough path still reached now that non-external memory is treated separately? If yes, I think we should make sure there are no unexpected extension structs (assert only in Debug build). If no, please use UNREACHABLE() here.",
      "revId": "6b0f8b6dfb8216a5085e6ca1715302796be76644",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9cb8f9b0_9d0cce42",
        "filename": "src/Vulkan/VkDeviceMemory.cpp",
        "patchSetId": 2
      },
      "lineNbr": 245,
      "author": {
        "id": 5050
      },
      "writtenOn": "2021-08-25T13:33:32Z",
      "side": 1,
      "message": "Yes, this is reached when there\u0027s no external memory source, so most of the time.\n\nAbout the assert, it\u0027s not that easy to do it with the current way the code is structured. Either we re-parse the pAllocateInfo again and duplicate the logic in each existing external memory structure above OR we refactor the whole thing to remove parseCreateInfo and only parse pAllocateInfo once and create the appropriate structure from the result of a single parsing. Maybe this should be done in a separate CL.",
      "parentUuid": "c177d22b_6dfc287f",
      "revId": "6b0f8b6dfb8216a5085e6ca1715302796be76644",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d9029fd_fb7daff5",
        "filename": "src/Vulkan/VkDeviceMemory.cpp",
        "patchSetId": 2
      },
      "lineNbr": 245,
      "author": {
        "id": 5005
      },
      "writtenOn": "2021-08-25T14:00:31Z",
      "side": 1,
      "message": "Yes, lets do the refactoring, as a separate change.",
      "parentUuid": "9cb8f9b0_9d0cce42",
      "revId": "6b0f8b6dfb8216a5085e6ca1715302796be76644",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cceed473_082313b3",
        "filename": "src/Vulkan/VkDeviceMemory.cpp",
        "patchSetId": 2
      },
      "lineNbr": 245,
      "author": {
        "id": 5050
      },
      "writtenOn": "2021-09-03T18:43:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0d9029fd_fb7daff5",
      "revId": "6b0f8b6dfb8216a5085e6ca1715302796be76644",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81bef299_d855d1db",
        "filename": "src/Vulkan/VkDeviceMemory.cpp",
        "patchSetId": 2
      },
      "lineNbr": 257,
      "author": {
        "id": 5005
      },
      "writtenOn": "2021-08-24T20:24:55Z",
      "side": 1,
      "message": "This is only non-null for external memory? Let\u0027s rename it to \"externalMemory\" ?",
      "range": {
        "startLine": 257,
        "startChar": 4,
        "endLine": 257,
        "endChar": 7
      },
      "revId": "6b0f8b6dfb8216a5085e6ca1715302796be76644",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c44c1dd_8bb56ab6",
        "filename": "src/Vulkan/VkDeviceMemory.cpp",
        "patchSetId": 2
      },
      "lineNbr": 257,
      "author": {
        "id": 5050
      },
      "writtenOn": "2021-08-25T13:33:32Z",
      "side": 1,
      "message": "It might be confusing, I think. It\u0027s not the external memory buffer, it\u0027s the memory reserved for the object we use to store information about the external memory.",
      "parentUuid": "81bef299_d855d1db",
      "range": {
        "startLine": 257,
        "startChar": 4,
        "endLine": 257,
        "endChar": 7
      },
      "revId": "6b0f8b6dfb8216a5085e6ca1715302796be76644",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88aa416c_0eeb86ab",
        "filename": "src/Vulkan/VkDeviceMemory.cpp",
        "patchSetId": 2
      },
      "lineNbr": 257,
      "author": {
        "id": 5005
      },
      "writtenOn": "2021-08-25T14:00:31Z",
      "side": 1,
      "message": "Ah, I see, this is the regular \"additional\" memory. This code is not very intuitive and appears to try to achieve polymorphism through the DeviceMemory constructor. Like you said above, we should probably parse the chain of creation info once, and then pass that into a factory function which creates the expected derived class?\n\nIt\u0027s a fair bit of work but I\u0027m afraid this code would continue to haunt us if we don\u0027t tackle this now and bolt on more complexity for the IOSurface external memory.",
      "parentUuid": "9c44c1dd_8bb56ab6",
      "range": {
        "startLine": 257,
        "startChar": 4,
        "endLine": 257,
        "endChar": 7
      },
      "revId": "6b0f8b6dfb8216a5085e6ca1715302796be76644",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "97bd64db_57eff630",
        "filename": "src/Vulkan/VkDeviceMemory.cpp",
        "patchSetId": 2
      },
      "lineNbr": 257,
      "author": {
        "id": 5050
      },
      "writtenOn": "2021-09-03T18:43:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "88aa416c_0eeb86ab",
      "range": {
        "startLine": 257,
        "startChar": 4,
        "endLine": 257,
        "endChar": 7
      },
      "revId": "6b0f8b6dfb8216a5085e6ca1715302796be76644",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    }
  ]
}