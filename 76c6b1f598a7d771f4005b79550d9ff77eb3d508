{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "fd084317_3b515273",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5050
      },
      "writtenOn": "2021-03-18T23:25:32Z",
      "side": 1,
      "message": "Just double checked the spec text. All dimensions must be checked the same way, BUT dimensions are allowed to be a multiple of block sizes OR exactly equal to the image\u0027s size, which is why it\u0027s allowed to be 1 for 1D images, but this is also true for other sizes, apparently.\n\nHere\u0027s the actual text:\n\nCopying to or from block-compressed images is typically done in multiples of the compressed texel block size. For this reason the imageExtent must be a multiple of the compressed texel block dimension. There is one exception to this rule which is required to handle compressed images created with dimensions that are not a multiple of the compressed texel block dimensions:\n\nIf imageExtent.width is not a multiple of the compressed texel block width, then (imageExtent.width + imageOffset.x) must equal the image subresource width.\n\nIf imageExtent.height is not a multiple of the compressed texel block height, then (imageExtent.height + imageOffset.y) must equal the image subresource height.\n\nIf imageExtent.depth is not a multiple of the compressed texel block depth, then (imageExtent.depth + imageOffset.z) must equal the image subresource depth.\n\nThis allows the last compressed texel block of the image in each non-multiple dimension to be included as a source or destination of the copy.",
      "revId": "76c6b1f598a7d771f4005b79550d9ff77eb3d508",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    }
  ]
}