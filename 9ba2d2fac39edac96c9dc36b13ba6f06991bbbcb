{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "fb94a879_a112552c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5050
      },
      "writtenOn": "2021-11-01T20:23:10Z",
      "side": 1,
      "message": "This could be implemented by adding arrays to each object, but it seems more centralized to just use a map inside the device. We also currently don\u0027t have a direct way of mapping an object handle + type to an object pointer of that type (although that\u0027s probably not hard to do).",
      "revId": "9ba2d2fac39edac96c9dc36b13ba6f06991bbbcb",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b275c7a4_1fbcf5b9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5005
      },
      "writtenOn": "2021-11-01T20:51:28Z",
      "side": 1,
      "message": "\u003e This could be implemented by adding arrays to each object, but it seems more centralized to just use a map inside the device.\n\nThe latter seems pointless to me. That can just be done application-side, which is what engines probably do anyway when this extension isn\u0027t available.\n\nNote that attaching data to the actual objects could complicate things like project Bunker. So I\u0027m inclined to wait and see if this becomes necessary or useful for us.",
      "parentUuid": "fb94a879_a112552c",
      "revId": "9ba2d2fac39edac96c9dc36b13ba6f06991bbbcb",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "492e580a_ca8eae55",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5005
      },
      "writtenOn": "2021-11-01T20:51:28Z",
      "side": 1,
      "message": "Thanks for the prototype, but I think we have to hold off landing this until it\u0027s clearer what\u0027s strictly necessary, what an optimal implementation would look like, and how we can balance that against other requirements.",
      "revId": "9ba2d2fac39edac96c9dc36b13ba6f06991bbbcb",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87914159_a157b468",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5005
      },
      "writtenOn": "2022-01-28T05:45:47Z",
      "side": 1,
      "message": "So we\u0027ve now learned that we definitely need this functionality as part of Vulkan 1.3, and there are different design options: b/204502114#comment2. We must ensure it\u0027s thread safe, which the current CL doesn\u0027t seem to take into account, and it appears a sparse array per object would help performance.",
      "parentUuid": "b275c7a4_1fbcf5b9",
      "revId": "9ba2d2fac39edac96c9dc36b13ba6f06991bbbcb",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8a98602a_4e1456ee",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5050
      },
      "writtenOn": "2022-01-28T13:10:49Z",
      "side": 1,
      "message": "Discussion moves to b/204502114",
      "parentUuid": "87914159_a157b468",
      "revId": "9ba2d2fac39edac96c9dc36b13ba6f06991bbbcb",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    }
  ]
}