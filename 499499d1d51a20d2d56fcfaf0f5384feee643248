{
  "comments": [
    {
      "key": {
        "uuid": "4604a31b_67fbe3d7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5050
      },
      "writtenOn": "2020-07-21T18:40:05Z",
      "side": 1,
      "message": "If you want to test cases that aren\u0027t already in the PASS list, you need to add them in your cl description.\n\nIf you have no idea which tests get triggered by your feature, you can add:\n\nTests: dEQP-VK.*\n\nBut that will take over 50 minutes instead of about 22 minutes.",
      "revId": "499499d1d51a20d2d56fcfaf0f5384feee643248",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "94176f2a_46de9f35",
        "filename": "src/Pipeline/SetupRoutine.cpp",
        "patchSetId": 1
      },
      "lineNbr": 462,
      "author": {
        "id": 5050
      },
      "writtenOn": "2020-07-21T18:34:34Z",
      "side": 1,
      "message": "Just curious, is something like this possible?\n\nFloat4 clamp4 \u003d Float4(clamp);\nC \u003d IfThenElse(clamp \u003e 0.0f, Min(clamp4, C), Max(clamp4, C));",
      "range": {
        "startLine": 449,
        "startChar": 0,
        "endLine": 462,
        "endChar": 5
      },
      "revId": "499499d1d51a20d2d56fcfaf0f5384feee643248",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47367998_6ca369bb",
        "filename": "src/Vulkan/VkPipeline.cpp",
        "patchSetId": 1
      },
      "lineNbr": 268,
      "author": {
        "id": 5050
      },
      "writtenOn": "2020-07-21T18:34:34Z",
      "side": 1,
      "message": "Is this in the spec? If so, it would be nice to quote the spec regarding this.",
      "range": {
        "startLine": 265,
        "startChar": 0,
        "endLine": 268,
        "endChar": 2
      },
      "revId": "499499d1d51a20d2d56fcfaf0f5384feee643248",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83723338_4e079f6b",
        "filename": "src/Vulkan/VkPipeline.cpp",
        "patchSetId": 1
      },
      "lineNbr": 268,
      "author": {
        "id": 9035
      },
      "writtenOn": "2020-07-21T18:56:01Z",
      "side": 1,
      "message": "The spec states:\n\nthe bias value O for a polygon is: O \u003d dbclamp(...)\nwhere dbclamp(x) \u003d\n   * x (if depthBiasClamp \u003d 0 or NaN)\n   * min(x, depthBiasClamp) (if depthBiasClamp \u003e 0)\n   * max(x, depthBiasClamp) (if depthBiasClamp \u003c 0)\n\nwhich I figured meant it was safe to preemptively turn NaN values into 0 rather than handle that logic later. I\u0027ll add a comment citing this portion of the spec if this is indeed safe, or I\u0027ll handle NaNs at a different point in the code.",
      "parentUuid": "47367998_6ca369bb",
      "range": {
        "startLine": 265,
        "startChar": 0,
        "endLine": 268,
        "endChar": 2
      },
      "revId": "499499d1d51a20d2d56fcfaf0f5384feee643248",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    }
  ]
}