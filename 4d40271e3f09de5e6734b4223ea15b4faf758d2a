{
  "comments": [
    {
      "key": {
        "uuid": "d77f1dc1_c368bf80",
        "filename": "src/Vulkan/VkPipelineCache.cpp",
        "patchSetId": 2
      },
      "lineNbr": 96,
      "author": {
        "id": 5050
      },
      "writtenOn": "2020-02-27T14:55:05Z",
      "side": 0,
      "message": "I just remembered why this was here. We still need a test in the case where only \"info\" or \"specializationInfo.info\" is not null.\n\nYou probably need something like:\nelse if(info || specializationInfo.info)\n{\n\treturn (info \u003c specializationInfo.info);\n}\n\nreturn false;",
      "range": {
        "startLine": 96,
        "startChar": 8,
        "endLine": 96,
        "endChar": 41
      },
      "revId": "4d40271e3f09de5e6734b4223ea15b4faf758d2a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9752cf81_8863a20f",
        "filename": "src/Vulkan/VkPipelineCache.cpp",
        "patchSetId": 2
      },
      "lineNbr": 96,
      "author": {
        "id": 5050
      },
      "writtenOn": "2020-02-27T14:58:32Z",
      "side": 0,
      "message": "Although I\u0027m wondering if this case is even possible. If we do have specialization info, the SPIR-V code must have code to handle it, so it may not be possible to have the same SPIR-V code with and without specialization info.",
      "parentUuid": "d77f1dc1_c368bf80",
      "range": {
        "startLine": 96,
        "startChar": 8,
        "endLine": 96,
        "endChar": 41
      },
      "revId": "4d40271e3f09de5e6734b4223ea15b4faf758d2a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4ac3312_b5f98fd0",
        "filename": "src/Vulkan/VkPipelineCache.cpp",
        "patchSetId": 2
      },
      "lineNbr": 96,
      "author": {
        "id": 5005
      },
      "writtenOn": "2020-02-27T15:07:54Z",
      "side": 0,
      "message": "Thanks for remembering why this was added!\n\nWould it make sense to make the `!info || !specializationInfo.info` case early-out and add an assert that `!info \u003d\u003d !specializationInfo.info` inside of it? Worth checking the spec on what\u0027s allowed and how things should behave.",
      "parentUuid": "9752cf81_8863a20f",
      "range": {
        "startLine": 96,
        "startChar": 8,
        "endLine": 96,
        "endChar": 41
      },
      "revId": "4d40271e3f09de5e6734b4223ea15b4faf758d2a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "23289015_482100e1",
        "filename": "src/Vulkan/VkPipelineCache.cpp",
        "patchSetId": 2
      },
      "lineNbr": 96,
      "author": {
        "id": 29190
      },
      "writtenOn": "2020-02-27T15:59:23Z",
      "side": 0,
      "message": "Spec:\n\nIt is legal for a SPIR-V module with specializations to be compiled into a pipeline where no specialization info was provided. SPIR-V specialization constants contain default values such that if a specialization is not provided\n\nhttps://renderdoc.org/vkspec_chunked/chap9.html#pipelines-specialization-constants\n\nI\u0027ll make a CL.",
      "parentUuid": "e4ac3312_b5f98fd0",
      "range": {
        "startLine": 96,
        "startChar": 8,
        "endLine": 96,
        "endChar": 41
      },
      "revId": "4d40271e3f09de5e6734b4223ea15b4faf758d2a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f5508482_eba6b81d",
        "filename": "src/Vulkan/VkPipelineCache.cpp",
        "patchSetId": 2
      },
      "lineNbr": 96,
      "author": {
        "id": 5005
      },
      "writtenOn": "2020-02-27T18:03:27Z",
      "side": 0,
      "message": "Thank you!\n\nSince this change introduce a bug which wasn\u0027t caught by dEQP, would you mind filing a bug with Khronos to request a test?",
      "parentUuid": "23289015_482100e1",
      "range": {
        "startLine": 96,
        "startChar": 8,
        "endLine": 96,
        "endChar": 41
      },
      "revId": "4d40271e3f09de5e6734b4223ea15b4faf758d2a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1cf6a549_75edef51",
        "filename": "src/Vulkan/VkPipelineCache.cpp",
        "patchSetId": 2
      },
      "lineNbr": 96,
      "author": {
        "id": 46365
      },
      "writtenOn": "2020-02-27T19:01:55Z",
      "side": 0,
      "message": "\u003e Although I\u0027m wondering if this case is even possible. If we do have specialization info, the SPIR-V code must have code to handle it ...\n\nThis is not necessarily true. Currently ANGLE always provides info, even if the SPIR-V doesn\u0027t have any specialization constants (because there is no emulation necessary).\n\nIn other words, the application is free to provide specialization values for many ids, even if a subset of them are declared in the SPIR-V.\n\n\u003e ... so it may not be possible to have the same SPIR-V code with and without specialization info\n\nAlso not true; the above + what Jamie said.",
      "parentUuid": "f5508482_eba6b81d",
      "range": {
        "startLine": 96,
        "startChar": 8,
        "endLine": 96,
        "endChar": 41
      },
      "revId": "4d40271e3f09de5e6734b4223ea15b4faf758d2a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    }
  ]
}