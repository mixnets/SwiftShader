{
  "comments": [
    {
      "key": {
        "uuid": "2306ea00_816a362b",
        "filename": "src/Pipeline/SpirvShaderGroup.cpp",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 7183
      },
      "writtenOn": "2019-12-05T11:58:05Z",
      "side": 1,
      "message": "What\u0027s the purpose of this struct? If it\u0027s just to hold the template function, there\u0027s no problem with keeping the implementation and use within the same .cpp (I do this in https://swiftshader-review.googlesource.com/c/SwiftShader/+/38915).\n\nFor the cases where we do need cross-cpp use of the template functions, I\u0027ve just started using std::function - the performance hit here is negligible, and at least you get a proper signature you can read.",
      "range": {
        "startLine": 23,
        "startChar": 7,
        "endLine": 23,
        "endChar": 26
      },
      "revId": "97cd477753456937a4074528d8ea4af2db9ddf78",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4158afb2_1fb82fba",
        "filename": "src/Pipeline/SpirvShaderGroup.cpp",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-12-05T14:03:14Z",
      "side": 1,
      "message": "This is needed because the template function needs to use SpirvShader-private types (e.g. EmitState) and I didn\u0027t want to place it in the private section in the header (since this is really an implementation detail that may change in the future).\n\nUsing a friend struct as a \"friendly namespace\" for the template function is the simplest way to achieve this. I\u0027ve added some comments to better explain the issue.",
      "parentUuid": "2306ea00_816a362b",
      "range": {
        "startLine": 23,
        "startChar": 7,
        "endLine": 23,
        "endChar": 26
      },
      "revId": "97cd477753456937a4074528d8ea4af2db9ddf78",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe8d78b2_3d970198",
        "filename": "src/Pipeline/SpirvShaderGroup.cpp",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 7183
      },
      "writtenOn": "2019-12-05T14:21:29Z",
      "side": 1,
      "message": "You could forward declare the class in the hpp, and then privately implement it in the cpp:\n\n  // hpp\n  class SpirvShader\n  {\n  private:\n      struct GroupOps;\n  };\n\n  // cpp\n  struct SpirvShader::GroupOps {\n     // can access SpirvShader private fields without friend.\n  };\n\n\nThen you\u0027re not going near the smell of \u0027friend\u0027, the GroupOps class is private of the SpirvShader class and does not pollute the sw namespace.",
      "parentUuid": "4158afb2_1fb82fba",
      "range": {
        "startLine": 23,
        "startChar": 7,
        "endLine": 23,
        "endChar": 26
      },
      "revId": "97cd477753456937a4074528d8ea4af2db9ddf78",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b04c251c_9ae8cf0a",
        "filename": "src/Pipeline/SpirvShaderGroup.cpp",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 7183
      },
      "writtenOn": "2019-12-05T14:32:03Z",
      "side": 1,
      "message": "If you went with this suggested pattern, perhaps the struct should be called \u0027Group\u0027 struct to match the \u0027SpirvShader\u0027 filename suffix, within a new inner \u0027Impl\u0027 struct:\n\n\n  class SpirvShader {\n  ...\n  private:\n    // Impl holds private forward declaration structs that are implemented \n    // in the corresponding SpirvShaderXXX.cpp files.\n    // This allows access to the private members of the SpirvShader, without\n    // littering the header with implementation details.\n    struct Impl {\n      struct Debug; // Privately implemented in SpirvShaderDebug.cpp\n      struct Group; // Privately implemented in SpirvShaderGroup.cpp\n      ... etc\n    };\n  };",
      "parentUuid": "fe8d78b2_3d970198",
      "range": {
        "startLine": 23,
        "startChar": 7,
        "endLine": 23,
        "endChar": 26
      },
      "revId": "97cd477753456937a4074528d8ea4af2db9ddf78",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d07a1e5_b854c33b",
        "filename": "src/Pipeline/SpirvShaderGroup.cpp",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-12-05T15:06:08Z",
      "side": 1,
      "message": "Yet another suggestion. I\u0027ve applied the first one (using a private struct GroupOps) because the second one seems appropriate for a future refactor CL. Thanks.",
      "parentUuid": "b04c251c_9ae8cf0a",
      "range": {
        "startLine": 23,
        "startChar": 7,
        "endLine": 23,
        "endChar": 26
      },
      "revId": "97cd477753456937a4074528d8ea4af2db9ddf78",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "acab496f_08fca4e1",
        "filename": "src/Pipeline/SpirvShaderGroup.cpp",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 7183
      },
      "writtenOn": "2019-12-05T15:12:26Z",
      "side": 1,
      "message": "Sure. I\u0027m happy to tackle this as a followup, assuming you\u0027re happy with me changing this to the \u0027Impl\u0027 approach later.",
      "parentUuid": "8d07a1e5_b854c33b",
      "range": {
        "startLine": 23,
        "startChar": 7,
        "endLine": 23,
        "endChar": 26
      },
      "revId": "97cd477753456937a4074528d8ea4af2db9ddf78",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "252d1f5c_0b9ef823",
        "filename": "src/Pipeline/SpirvShaderGroup.cpp",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 7183
      },
      "writtenOn": "2019-12-05T11:58:05Z",
      "side": 1,
      "message": "Nit: alignment is done via whitespace after using tabs for indent.",
      "range": {
        "startLine": 36,
        "startChar": 1,
        "endLine": 36,
        "endChar": 8
      },
      "revId": "97cd477753456937a4074528d8ea4af2db9ddf78",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d70430db_6ba88681",
        "filename": "src/Pipeline/SpirvShaderGroup.cpp",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-12-05T14:03:14Z",
      "side": 1,
      "message": "Yes, this was not ready for review yet, but I\u0027ve fixed the formatting in the next patch. Let me know if you still see some issues.",
      "parentUuid": "252d1f5c_0b9ef823",
      "range": {
        "startLine": 36,
        "startChar": 1,
        "endLine": 36,
        "endChar": 8
      },
      "revId": "97cd477753456937a4074528d8ea4af2db9ddf78",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "231f2258_0e50375f",
        "filename": "src/Pipeline/SpirvShaderGroup.cpp",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 7183
      },
      "writtenOn": "2019-12-05T14:21:29Z",
      "side": 1,
      "message": "Sure, sorry, I just had questions on the struct, and got carried away.",
      "parentUuid": "d70430db_6ba88681",
      "range": {
        "startLine": 36,
        "startChar": 1,
        "endLine": 36,
        "endChar": 8
      },
      "revId": "97cd477753456937a4074528d8ea4af2db9ddf78",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7a765ba_4c6a73dc",
        "filename": "src/Pipeline/SpirvShaderGroup.cpp",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-12-05T01:00:00Z",
      "side": 1,
      "message": "NOTE: This is not correct yet, though curiously dEQP doesn\u0027t complain. Will fix this.",
      "revId": "97cd477753456937a4074528d8ea4af2db9ddf78",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3263a723_023adfc9",
        "filename": "src/Pipeline/SpirvShaderGroup.cpp",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-12-05T14:03:14Z",
      "side": 1,
      "message": "And the reason why was simply that my setup was wrong. It was testing my NVidia vulkan driver, not my Swiftshader build. Of course running it with SW showed plenty of errors, fixed in the next patch :)",
      "parentUuid": "e7a765ba_4c6a73dc",
      "revId": "97cd477753456937a4074528d8ea4af2db9ddf78",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b952d62_e869f09a",
        "filename": "src/Pipeline/SpirvShaderGroup.cpp",
        "patchSetId": 1
      },
      "lineNbr": 330,
      "author": {
        "id": 7183
      },
      "writtenOn": "2019-12-05T11:58:05Z",
      "side": 1,
      "message": "Nit: What you have is great, but a bit on the verbose side. FWIW, you could do:\n\n  template \u003ctypename T, typename F\u003e\n  void SpirvShader::ShaderGroupBinOp(const SpirvShader::InsnIterator\u0026 insn,\n                                     const SpirvShader::EmitState*    state,\n                                     Intermediate\u0026                    dst,\n                                     const T\u0026                         identity,\n                                     F\u0026\u0026                              apply);\n\n\n  ShaderGroupBinOp(insn, state, dst, SIMD::Int(0), [](RValue\u003cSIMD::Int\u003e a, RValue\u003cSIMD::Int\u003e b) { a + b });\n\nMeans you can then drop all the structs, and brackets from each case statement.",
      "range": {
        "startLine": 323,
        "startChar": 2,
        "endLine": 330,
        "endChar": 8
      },
      "revId": "97cd477753456937a4074528d8ea4af2db9ddf78",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9be2f2fb_a64a90ee",
        "filename": "src/Pipeline/SpirvShaderGroup.cpp",
        "patchSetId": 1
      },
      "lineNbr": 330,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-12-05T14:03:14Z",
      "side": 1,
      "message": "Wow, excellent suggestion, thanks a ton. I\u0027ve applied it, and this indeed makes the code more readable.",
      "parentUuid": "9b952d62_e869f09a",
      "range": {
        "startLine": 323,
        "startChar": 2,
        "endLine": 330,
        "endChar": 8
      },
      "revId": "97cd477753456937a4074528d8ea4af2db9ddf78",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    }
  ]
}