{
  "comments": [
    {
      "key": {
        "uuid": "b96b6530_4ccf13c5",
        "filename": "src/OpenGL/libGLESv2/Shader.cpp",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 5005
      },
      "writtenOn": "2016-06-02T16:46:27Z",
      "side": 1,
      "message": "Won\u0027t be needed if we have them defined in the es2:: namespace in Context.h",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 23,
        "endChar": 26
      },
      "revId": "5ac7cdb00f9deffffb2b1745f1eb8c6cccbd17ae",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b96b6530_8cc82bbb",
        "filename": "src/OpenGL/libGLESv2/Shader.cpp",
        "patchSetId": 3
      },
      "lineNbr": 179,
      "author": {
        "id": 5005
      },
      "writtenOn": "2016-06-02T16:46:27Z",
      "side": 1,
      "message": "Use the ones from Context.h instead (no need for explicit namespace).",
      "range": {
        "startLine": 178,
        "startChar": 0,
        "endLine": 179,
        "endChar": 64
      },
      "revId": "5ac7cdb00f9deffffb2b1745f1eb8c6cccbd17ae",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b96b6530_0c5b5bed",
        "filename": "src/Shader/PixelProgram.hpp",
        "patchSetId": 3
      },
      "lineNbr": 85,
      "author": {
        "id": 5005
      },
      "writtenOn": "2016-06-02T16:46:27Z",
      "side": 1,
      "message": "nit: I\u0027d prefer to make this the last argument. That\u0027s more in line with the GLSL function name\u0027s suffix order.",
      "range": {
        "startLine": 85,
        "startChar": 160,
        "endLine": 85,
        "endChar": 174
      },
      "revId": "5ac7cdb00f9deffffb2b1745f1eb8c6cccbd17ae",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b96b6530_8c458b0d",
        "filename": "src/Shader/PixelProgram.hpp",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 5005
      },
      "writtenOn": "2016-06-02T16:46:27Z",
      "side": 1,
      "message": "Programmable pixel processing doesn\u0027t have texture stages, so I\u0027d prefer to use \"samplerIndex\" here. I noticed the definition currently uses \"stage\", so make that \"samplerIndex\" as well.",
      "range": {
        "startLine": 86,
        "startChar": 38,
        "endLine": 86,
        "endChar": 43
      },
      "revId": "5ac7cdb00f9deffffb2b1745f1eb8c6cccbd17ae",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b96b6530_57387c29",
        "filename": "src/Shader/SamplerCore.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1645,
      "author": {
        "id": 5005
      },
      "writtenOn": "2016-06-02T16:46:27Z",
      "side": 1,
      "message": "The spec says that it\u0027s undefined when offset exceeds the limits. Also, since it has to be a constant, we could check it in the compiler (OutputASM.cpp) instead. Either way we can eliminate the cost of clamping it here.",
      "range": {
        "startLine": 1645,
        "startChar": 17,
        "endLine": 1645,
        "endChar": 24
      },
      "revId": "5ac7cdb00f9deffffb2b1745f1eb8c6cccbd17ae",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b96b6530_b79a9071",
        "filename": "src/Shader/SamplerCore.hpp",
        "patchSetId": 3
      },
      "lineNbr": 37,
      "author": {
        "id": 5005
      },
      "writtenOn": "2016-06-02T16:46:27Z",
      "side": 1,
      "message": "Also please move these to the last parameter.",
      "range": {
        "startLine": 37,
        "startChar": 150,
        "endLine": 37,
        "endChar": 164
      },
      "revId": "5ac7cdb00f9deffffb2b1745f1eb8c6cccbd17ae",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b96b6530_f7bde8bd",
        "filename": "src/Shader/SamplerCore.hpp",
        "patchSetId": 3
      },
      "lineNbr": 59,
      "author": {
        "id": 5005
      },
      "writtenOn": "2016-06-02T16:46:27Z",
      "side": 1,
      "message": "Pass these by reference. Otherwise Reactor will call the assignment operator and LLVM has more work to eliminate moves.",
      "range": {
        "startLine": 59,
        "startChar": 21,
        "endLine": 59,
        "endChar": 59
      },
      "revId": "5ac7cdb00f9deffffb2b1745f1eb8c6cccbd17ae",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    }
  ]
}