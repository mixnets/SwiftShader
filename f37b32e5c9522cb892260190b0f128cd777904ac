{
  "comments": [
    {
      "key": {
        "uuid": "ac953f02_c16fb0b2",
        "filename": "src/Device/Renderer.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1040,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-09-11T13:16:09Z",
      "side": 1,
      "message": "Can this be done unconditionally? It\u0027s never wrong to do robust buffer accesses even when the feature is disabled, and in this case the cost probably equals doing the tests.",
      "range": {
        "startLine": 1040,
        "startChar": 50,
        "endLine": 1040,
        "endChar": 68
      },
      "revId": "f37b32e5c9522cb892260190b0f128cd777904ac",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82155b28_993250a8",
        "filename": "src/Device/Renderer.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1043,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-09-11T13:16:09Z",
      "side": 1,
      "message": "What about cases where part of the stride is inside the buffer and part outside?",
      "range": {
        "startLine": 1043,
        "startChar": 60,
        "endLine": 1043,
        "endChar": 83
      },
      "revId": "f37b32e5c9522cb892260190b0f128cd777904ac",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "942b04f9_8bdde0a3",
        "filename": "src/Pipeline/VertexProgram.cpp",
        "patchSetId": 5
      },
      "lineNbr": 85,
      "author": {
        "id": 6982
      },
      "writtenOn": "2019-09-10T22:08:01Z",
      "side": 1,
      "message": "We only added the indices to the batch if they missed in the cache, so this should *always* fail. If you\u0027re seeing something else, what explains that?",
      "revId": "f37b32e5c9522cb892260190b0f128cd777904ac",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b8426ed_602f6f8b",
        "filename": "src/Pipeline/VertexProgram.cpp",
        "patchSetId": 5
      },
      "lineNbr": 85,
      "author": {
        "id": 5050
      },
      "writtenOn": "2019-09-11T01:39:17Z",
      "side": 1,
      "message": "This is only true for the first element, for which the comparison is unnecessary.\nIf you look at:\nhttps://cs.chromium.org/chromium/src/third_party/swiftshader/src/Pipeline/VertexRoutine.cpp?l\u003d60\nyou will see that the cache hit/miss is ONLY for batch[0]! batch[x] (where x is 1,2,3) is not checked against the cache, so each element may hit or miss individually.",
      "parentUuid": "942b04f9_8bdde0a3",
      "revId": "f37b32e5c9522cb892260190b0f128cd777904ac",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8efe0ce2_fcd4064b",
        "filename": "src/Pipeline/VertexProgram.cpp",
        "patchSetId": 5
      },
      "lineNbr": 91,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-09-11T13:16:09Z",
      "side": 1,
      "message": "Please add a TODO here quoting the spec to clarify that this is perfectly valid and this code is only a temporary workaround to be removed asap.\n\nActually it\u0027s worth checking if the tests are not too hard to fix instead, since hacks like this tend to be forgotten about quickly.",
      "range": {
        "startLine": 91,
        "startChar": 5,
        "endLine": 91,
        "endChar": 65
      },
      "revId": "f37b32e5c9522cb892260190b0f128cd777904ac",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa440daf_d84b20b4",
        "filename": "src/Pipeline/VertexRoutine.cpp",
        "patchSetId": 5
      },
      "lineNbr": 506,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-09-11T13:16:09Z",
      "side": 1,
      "message": "We don\u0027t have to zero the data for robust buffer access.",
      "range": {
        "startLine": 506,
        "startChar": 35,
        "endLine": 506,
        "endChar": 36
      },
      "revId": "f37b32e5c9522cb892260190b0f128cd777904ac",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    }
  ]
}