{
  "comments": [
    {
      "key": {
        "uuid": "235700b5_8a823df5",
        "filename": "src/Reactor/LLVMReactor.cpp",
        "patchSetId": 2
      },
      "lineNbr": 3444,
      "author": {
        "id": 9669
      },
      "writtenOn": "2020-07-23T17:55:15Z",
      "side": 1,
      "message": "I think for consistency, we should name this \"createIntrinsic\". Also, I think the second parameter should be an llvm::Value* to match that of CreateUnary/BinaryInstrinsic.\n\nI have some more ideas for making this code even clearer and easier to use:\n\n1. We could name these two overloads \"createNativeIntrinsic\", and add a new set of overloads named \"createInstrinsic\" that simply forward to CreateUnaryInstrinsic and CreateBinaryIntrinsic. This way, all the code below would look uniform, and we\u0027d get some idea of which one we should use.\n\nOR\n\n2. Have just the \"createIntrinsic\" overloads here, and check if \u0027id\u0027 is within the range of \u0027native\u0027 intrinsics, in which case, you do the CreateCall(), otherwise, you do the CreateUnary/BinaryIntrinsic. That would result in the simplest code below, assuming id range checking is easy enough (it might not be).",
      "revId": "2d224c2da87bc3f53061f1dde146ae5f8022b1a9",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    }
  ]
}