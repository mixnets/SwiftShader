{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "67ced4bc_553dd24d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 5005
      },
      "writtenOn": "2021-05-20T03:01:08Z",
      "side": 1,
      "message": "I\u0027m a bit skeptical about this test-driven development. Is there any spec text to support this behavior? Does the test that checks for clamping at 0 leave VK_EXT_depth_range_unrestricted disabled, while that one that doesn\u0027t expect clamping at 1, enable this extension?",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 59
      },
      "revId": "b38dd1a26293fd5cf1ee09720a59c7753176b4a7",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b6d559ed_16e11ccd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 9035
      },
      "writtenOn": "2021-05-20T14:46:16Z",
      "side": 1,
      "message": "All the fragdepth tests enable VK_EXT_depth_range_unrestricted.\n\nAnd yeah, I\u0027ve been looking through the spec trying to find text that supports this expected behavior. Alexis pointed to the primitive depth clipping test that says it removes primitives with Zc values outside the range [0, Wc]. But primitive clipping seems unrelated to fragment shader behavior.",
      "parentUuid": "67ced4bc_553dd24d",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 59
      },
      "revId": "b38dd1a26293fd5cf1ee09720a59c7753176b4a7",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c34160a1_92185960",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 5005
      },
      "writtenOn": "2021-05-20T16:56:38Z",
      "side": 1,
      "message": "The line of code that was changes, performs clamping of a depth value (over)written by the shader. So yes it should be unrelated to primitive clipping (unless it eliminated the fragment, or the fragDepth value that was written depends on fragCoord.z).\n\nI found this piece of spec text that could be relevant:\n\n\"If VkPipelineRasterizationStateCreateInfo::depthClampEnable is enabled, before the sampleâ€™s zf is compared to za, zf is clamped to [min(n,f),max(n,f)], where n and f are the minDepth and maxDepth depth range values of the viewport used by this fragment, respectively.\"\n\nIt definitely looks like we shouldn\u0027t unconditionally clamp to [0, 1].",
      "parentUuid": "b6d559ed_16e11ccd",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 59
      },
      "revId": "b38dd1a26293fd5cf1ee09720a59c7753176b4a7",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "79ff31ce_089c8783",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 9035
      },
      "writtenOn": "2021-05-20T18:41:14Z",
      "side": 1,
      "message": "Ok, yeah, it being contingent on depthClampEnable explains it. Thanks for finding that bit of the spec!",
      "parentUuid": "c34160a1_92185960",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 59
      },
      "revId": "b38dd1a26293fd5cf1ee09720a59c7753176b4a7",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    }
  ]
}