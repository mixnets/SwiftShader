{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "98695f19_9b8955f9",
        "filename": "src/Main/FrameBufferFactoryOzone.cpp",
        "patchSetId": 6
      },
      "lineNbr": 27,
      "author": {
        "id": 5885
      },
      "writtenOn": "2021-07-09T13:53:21Z",
      "side": 1,
      "message": "reinterpret_cast doesn\u0027t do any type checking. This line just checks if display is non-nullptr. Is that what you wanted? You can omit the reinterpret_cast, it has no effect here.",
      "revId": "aba65a8e1ce1123268e346230e5307c97e174c19",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "697d9929_bff3c91c",
        "filename": "src/Main/FrameBufferFactoryOzone.cpp",
        "patchSetId": 6
      },
      "lineNbr": 27,
      "author": {
        "id": 100916
      },
      "writtenOn": "2021-07-19T05:57:58Z",
      "side": 1,
      "message": "It\u0027s indeed required to check type of the display.",
      "parentUuid": "98695f19_9b8955f9",
      "revId": "aba65a8e1ce1123268e346230e5307c97e174c19",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3142c3c7_ca336b13",
        "filename": "src/Main/FrameBufferFactoryOzone.cpp",
        "patchSetId": 6
      },
      "lineNbr": 27,
      "author": {
        "id": 6725
      },
      "writtenOn": "2021-07-19T12:06:34Z",
      "side": 1,
      "message": "well, the code currently doesn\u0027t do that.",
      "parentUuid": "697d9929_bff3c91c",
      "revId": "aba65a8e1ce1123268e346230e5307c97e174c19",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2fba4973_1ed6feea",
        "filename": "src/Main/FrameBufferFactoryOzone.cpp",
        "patchSetId": 6
      },
      "lineNbr": 27,
      "author": {
        "id": 5005
      },
      "writtenOn": "2021-07-19T15:14:31Z",
      "side": 1,
      "message": "Note that this code is part of the legacy SwiftShader OpenGL ES implementation, which will soon be deleted. It is superseded by ANGLE + SwiftShader Vulkan (\"SwANGLE\"), so it might be worth checking that ANGLE doesn\u0027t have this issue, instead.",
      "parentUuid": "3142c3c7_ca336b13",
      "revId": "aba65a8e1ce1123268e346230e5307c97e174c19",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    }
  ]
}