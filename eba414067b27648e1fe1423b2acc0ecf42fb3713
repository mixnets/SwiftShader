{
  "comments": [
    {
      "key": {
        "uuid": "0174b578_c15e001a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-07-03T14:47:44Z",
      "side": 1,
      "message": "Bug?",
      "revId": "eba414067b27648e1fe1423b2acc0ecf42fb3713",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84bce158_fdc60329",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-07-03T14:50:10Z",
      "side": 1,
      "message": "Probably b/132280877\n\nAs discussed, it might not be terrible to keep sw::Context, as long as it becomes just a block of state to be used by the pipeline and/or command buffer execution.",
      "parentUuid": "0174b578_c15e001a",
      "revId": "eba414067b27648e1fe1423b2acc0ecf42fb3713",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fbfb5b90_ad2a3f86",
        "filename": "src/Device/SetupProcessor.hpp",
        "patchSetId": 2
      },
      "lineNbr": 46,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-07-03T14:47:28Z",
      "side": 1,
      "message": "note: Kinda overkill since this will force it to be 32-bit while there\u0027s only clockwise and counter-clockwise, but let\u0027s try to tackle this issue together with the other Vulkan enums stored as a bitfield at a later point.",
      "range": {
        "startLine": 46,
        "startChar": 36,
        "endLine": 46,
        "endChar": 64
      },
      "revId": "eba414067b27648e1fe1423b2acc0ecf42fb3713",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bcaef2ad_67ff268b",
        "filename": "src/Device/SetupProcessor.hpp",
        "patchSetId": 2
      },
      "lineNbr": 46,
      "author": {
        "id": 5050
      },
      "writtenOn": "2019-07-03T17:13:49Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "fbfb5b90_ad2a3f86",
      "range": {
        "startLine": 46,
        "startChar": 36,
        "endLine": 46,
        "endChar": 64
      },
      "revId": "eba414067b27648e1fe1423b2acc0ecf42fb3713",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "67d57cd5_e7810f64",
        "filename": "src/Pipeline/PixelRoutine.cpp",
        "patchSetId": 2
      },
      "lineNbr": 268,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-07-03T14:47:28Z",
      "side": 1,
      "message": "note: Apparently vkCmdSetStencilCompareMask takes a uint32. There\u0027s no stencil format with more than 8 bits at the moment, but we may want to check that if the application passes 0xFFFFFFFF we do the right thing.",
      "range": {
        "startLine": 268,
        "startChar": 23,
        "endLine": 268,
        "endChar": 42
      },
      "revId": "eba414067b27648e1fe1423b2acc0ecf42fb3713",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "822ebd3f_9fcb35fe",
        "filename": "src/Pipeline/PixelRoutine.cpp",
        "patchSetId": 2
      },
      "lineNbr": 268,
      "author": {
        "id": 5050
      },
      "writtenOn": "2019-07-03T17:13:49Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "67d57cd5_e7810f64",
      "range": {
        "startLine": 268,
        "startChar": 23,
        "endLine": 268,
        "endChar": 42
      },
      "revId": "eba414067b27648e1fe1423b2acc0ecf42fb3713",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    }
  ]
}