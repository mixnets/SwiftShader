{
  "comments": [
    {
      "key": {
        "uuid": "a555fc0b_319a58e9",
        "filename": "CMakeLists.txt",
        "patchSetId": 3
      },
      "lineNbr": 657,
      "author": {
        "id": 5005
      },
      "writtenOn": "2020-03-28T21:19:06Z",
      "side": 1,
      "message": "Should be able to use Reactor/ExecutableMemory.cpp ?",
      "range": {
        "startLine": 654,
        "startChar": 0,
        "endLine": 657,
        "endChar": 1
      },
      "revId": "6081a1649a7e5fafd4e20f56db32f4c6abbae56a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d104eaea_2e29abe1",
        "filename": "CMakeLists.txt",
        "patchSetId": 3
      },
      "lineNbr": 657,
      "author": {
        "id": 9669
      },
      "writtenOn": "2020-03-29T00:24:46Z",
      "side": 1,
      "message": "I\u0027m not sure, this was there before. Do you want me to try? Should we delete Common/Memory.cpp?",
      "parentUuid": "a555fc0b_319a58e9",
      "range": {
        "startLine": 654,
        "startChar": 0,
        "endLine": 657,
        "endChar": 1
      },
      "revId": "6081a1649a7e5fafd4e20f56db32f4c6abbae56a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "733ff827_339934b1",
        "filename": "CMakeLists.txt",
        "patchSetId": 3
      },
      "lineNbr": 657,
      "author": {
        "id": 5005
      },
      "writtenOn": "2020-03-29T03:00:58Z",
      "side": 1,
      "message": "I see. Yes, please give that a try. The Common directory is from the legacy OpenGL stack, not Vulkan, and while Reactor is shared between both stacks, it shouldn\u0027t depend on anything from either at this point. Sorry for not spotting this sooner. This seems a good time to clean that up if it doesn\u0027t cause complications. Thanks!",
      "parentUuid": "d104eaea_2e29abe1",
      "range": {
        "startLine": 654,
        "startChar": 0,
        "endLine": 657,
        "endChar": 1
      },
      "revId": "6081a1649a7e5fafd4e20f56db32f4c6abbae56a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f37606c1_e772695a",
        "filename": "CMakeLists.txt",
        "patchSetId": 3
      },
      "lineNbr": 657,
      "author": {
        "id": 9669
      },
      "writtenOn": "2020-03-29T04:37:57Z",
      "side": 1,
      "message": "Will definitely give it a try.",
      "parentUuid": "733ff827_339934b1",
      "range": {
        "startLine": 654,
        "startChar": 0,
        "endLine": 657,
        "endChar": 1
      },
      "revId": "6081a1649a7e5fafd4e20f56db32f4c6abbae56a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa06d5f7_b02726b6",
        "filename": "CMakeLists.txt",
        "patchSetId": 3
      },
      "lineNbr": 657,
      "author": {
        "id": 9669
      },
      "writtenOn": "2020-03-30T12:54:25Z",
      "side": 1,
      "message": "I removed this altogether, as Reactor/ExecutableMemory.cpp was already added, and it all seems to build and link, so I guess we\u0027re good.",
      "parentUuid": "f37606c1_e772695a",
      "range": {
        "startLine": 654,
        "startChar": 0,
        "endLine": 657,
        "endChar": 1
      },
      "revId": "6081a1649a7e5fafd4e20f56db32f4c6abbae56a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "422df8b1_66130379",
        "filename": "third_party/subzero/CMakeLists.txt",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 5005
      },
      "writtenOn": "2020-03-28T21:19:06Z",
      "side": 1,
      "message": "What\u0027s the use of this indirection?",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 24
      },
      "revId": "6081a1649a7e5fafd4e20f56db32f4c6abbae56a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "378d92a8_24b5794a",
        "filename": "third_party/subzero/CMakeLists.txt",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 9669
      },
      "writtenOn": "2020-03-29T00:24:46Z",
      "side": 1,
      "message": "It\u0027s a common practice for sub-project CMakeLists files, because:\n1. It shows you the name of the module at the top (the root one has the project() directive for that). Otherwise, you need to find the add_library() directive somewhere in the file.\n2, It makes it clear that this file is to define a single module.\n3. It\u0027s easier to copy relevant parts from one script to another.\n\nI like it, but if you\u0027re really against it, I can remove it and put the name directly in all the places below.",
      "parentUuid": "422df8b1_66130379",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 24
      },
      "revId": "6081a1649a7e5fafd4e20f56db32f4c6abbae56a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fdef7f3b_25ba7d8e",
        "filename": "third_party/subzero/CMakeLists.txt",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 5005
      },
      "writtenOn": "2020-03-29T03:00:58Z",
      "side": 1,
      "message": "I see good value in 1. but it\u0027s seems like something a comment could address as well. Regarding 2. I\u0027m not sure that\u0027s completely clear. Took me a scan through the file to figure that out, and again a comment could work as well or even better. As for 3. that sounds like it makes things prone to copy-paste mistakes (e.g. something like adding \u0027llvm-dependencies\u0027 whouldn\u0027t stand out if the module name was ${MODULE_NAME} but would be easy to spot if it was \u0027subzero\u0027). And reversely, it looks a bit weird to see something highly Subzero-specific be declared for a target that looks generic.\n\nI think things should only be an abstract variable if they\u0027re expected to be changed/overridden. Otherwise it just obfuscates. A variable would make sense if instead of copy-pasting between between the files we\u0027d have common utility macros.",
      "parentUuid": "378d92a8_24b5794a",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 24
      },
      "revId": "6081a1649a7e5fafd4e20f56db32f4c6abbae56a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75ae9e97_5d9ab019",
        "filename": "third_party/subzero/CMakeLists.txt",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 9669
      },
      "writtenOn": "2020-03-29T04:37:57Z",
      "side": 1,
      "message": "I don\u0027t agree that a comment is as good, as comments tend to lie over time. As I said, this is fairly common practice in modern cmake, where each module is in its own CMakeLists, and only one module. We can think of MODULE_NAME as similar to CMAKE_CURRENT_SOURCE and the like - they are different depending on the file it\u0027s in. I would prefer to leave it this way, unless you\u0027re really against it.",
      "parentUuid": "fdef7f3b_25ba7d8e",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 24
      },
      "revId": "6081a1649a7e5fafd4e20f56db32f4c6abbae56a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6023df7_797274ab",
        "filename": "third_party/subzero/CMakeLists.txt",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 9669
      },
      "writtenOn": "2020-03-30T12:54:25Z",
      "side": 1,
      "message": "I decided to go ahead and remove MODULE_NAME, because I realized that it\u0027s not always true that a CMakeLists.txt will add a single target. For example, the one I started writing for Reactor adds ReactorLLVM and ReactorSubzero.",
      "parentUuid": "75ae9e97_5d9ab019",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 24
      },
      "revId": "6081a1649a7e5fafd4e20f56db32f4c6abbae56a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4a977b7_20835374",
        "filename": "third_party/subzero/CMakeLists.txt",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 5005
      },
      "writtenOn": "2020-03-29T03:00:58Z",
      "side": 1,
      "message": "nit: SUBZERO_SRC_FILES ?\n\nIt might help prevent people from adding non-Subzero source file dependencies directly to this list.",
      "range": {
        "startLine": 22,
        "startChar": 4,
        "endLine": 22,
        "endChar": 13
      },
      "revId": "6081a1649a7e5fafd4e20f56db32f4c6abbae56a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae8ecc12_0a18eb3d",
        "filename": "third_party/subzero/CMakeLists.txt",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 9669
      },
      "writtenOn": "2020-03-29T04:37:57Z",
      "side": 1,
      "message": "Again, in modern cmake, each CMakeLists is for exactly one module, so there should never be more than one set of source files for this file. This would be like having a class Subzero with data member m_subzeroSourceFiles. The prefix is redundant. It\u0027s actually quite freeing not to be forced to prefix every variable. In old CMake, where everything is in one file, we had no choice.",
      "parentUuid": "e4a977b7_20835374",
      "range": {
        "startLine": 22,
        "startChar": 4,
        "endLine": 22,
        "endChar": 13
      },
      "revId": "6081a1649a7e5fafd4e20f56db32f4c6abbae56a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fd3b371_429a7aa9",
        "filename": "third_party/subzero/CMakeLists.txt",
        "patchSetId": 3
      },
      "lineNbr": 58,
      "author": {
        "id": 5005
      },
      "writtenOn": "2020-03-29T03:00:58Z",
      "side": 1,
      "message": "nit: SUBZERO_TARGET_CPU ?\n\nOtherwise could be confused for being the actual build target.",
      "range": {
        "startLine": 58,
        "startChar": 8,
        "endLine": 58,
        "endChar": 23
      },
      "revId": "6081a1649a7e5fafd4e20f56db32f4c6abbae56a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    }
  ]
}