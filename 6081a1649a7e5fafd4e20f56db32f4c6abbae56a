{
  "comments": [
    {
      "key": {
        "uuid": "a555fc0b_319a58e9",
        "filename": "CMakeLists.txt",
        "patchSetId": 3
      },
      "lineNbr": 657,
      "author": {
        "id": 5005
      },
      "writtenOn": "2020-03-28T21:19:06Z",
      "side": 1,
      "message": "Should be able to use Reactor/ExecutableMemory.cpp ?",
      "range": {
        "startLine": 654,
        "startChar": 0,
        "endLine": 657,
        "endChar": 1
      },
      "revId": "6081a1649a7e5fafd4e20f56db32f4c6abbae56a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d104eaea_2e29abe1",
        "filename": "CMakeLists.txt",
        "patchSetId": 3
      },
      "lineNbr": 657,
      "author": {
        "id": 9669
      },
      "writtenOn": "2020-03-29T00:24:46Z",
      "side": 1,
      "message": "I\u0027m not sure, this was there before. Do you want me to try? Should we delete Common/Memory.cpp?",
      "parentUuid": "a555fc0b_319a58e9",
      "range": {
        "startLine": 654,
        "startChar": 0,
        "endLine": 657,
        "endChar": 1
      },
      "revId": "6081a1649a7e5fafd4e20f56db32f4c6abbae56a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "733ff827_339934b1",
        "filename": "CMakeLists.txt",
        "patchSetId": 3
      },
      "lineNbr": 657,
      "author": {
        "id": 5005
      },
      "writtenOn": "2020-03-29T03:00:58Z",
      "side": 1,
      "message": "I see. Yes, please give that a try. The Common directory is from the legacy OpenGL stack, not Vulkan, and while Reactor is shared between both stacks, it shouldn\u0027t depend on anything from either at this point. Sorry for not spotting this sooner. This seems a good time to clean that up if it doesn\u0027t cause complications. Thanks!",
      "parentUuid": "d104eaea_2e29abe1",
      "range": {
        "startLine": 654,
        "startChar": 0,
        "endLine": 657,
        "endChar": 1
      },
      "revId": "6081a1649a7e5fafd4e20f56db32f4c6abbae56a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f37606c1_e772695a",
        "filename": "CMakeLists.txt",
        "patchSetId": 3
      },
      "lineNbr": 657,
      "author": {
        "id": 9669
      },
      "writtenOn": "2020-03-29T04:37:57Z",
      "side": 1,
      "message": "Will definitely give it a try.",
      "parentUuid": "733ff827_339934b1",
      "range": {
        "startLine": 654,
        "startChar": 0,
        "endLine": 657,
        "endChar": 1
      },
      "revId": "6081a1649a7e5fafd4e20f56db32f4c6abbae56a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa06d5f7_b02726b6",
        "filename": "CMakeLists.txt",
        "patchSetId": 3
      },
      "lineNbr": 657,
      "author": {
        "id": 9669
      },
      "writtenOn": "2020-03-30T12:54:25Z",
      "side": 1,
      "message": "I removed this altogether, as Reactor/ExecutableMemory.cpp was already added, and it all seems to build and link, so I guess we\u0027re good.",
      "parentUuid": "f37606c1_e772695a",
      "range": {
        "startLine": 654,
        "startChar": 0,
        "endLine": 657,
        "endChar": 1
      },
      "revId": "6081a1649a7e5fafd4e20f56db32f4c6abbae56a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "422df8b1_66130379",
        "filename": "third_party/subzero/CMakeLists.txt",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 5005
      },
      "writtenOn": "2020-03-28T21:19:06Z",
      "side": 1,
      "message": "What\u0027s the use of this indirection?",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 24
      },
      "revId": "6081a1649a7e5fafd4e20f56db32f4c6abbae56a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "378d92a8_24b5794a",
        "filename": "third_party/subzero/CMakeLists.txt",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 9669
      },
      "writtenOn": "2020-03-29T00:24:46Z",
      "side": 1,
      "message": "It\u0027s a common practice for sub-project CMakeLists files, because:\n1. It shows you the name of the module at the top (the root one has the project() directive for that). Otherwise, you need to find the add_library() directive somewhere in the file.\n2, It makes it clear that this file is to define a single module.\n3. It\u0027s easier to copy relevant parts from one script to another.\n\nI like it, but if you\u0027re really against it, I can remove it and put the name directly in all the places below.",
      "parentUuid": "422df8b1_66130379",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 24
      },
      "revId": "6081a1649a7e5fafd4e20f56db32f4c6abbae56a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fdef7f3b_25ba7d8e",
        "filename": "third_party/subzero/CMakeLists.txt",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 5005
      },
      "writtenOn": "2020-03-29T03:00:58Z",
      "side": 1,
      "message": "I see good value in 1. but it\u0027s seems like something a comment could address as well. Regarding 2. I\u0027m not sure that\u0027s completely clear. Took me a scan through the file to figure that out, and again a comment could work as well or even better. As for 3. that sounds like it makes things prone to copy-paste mistakes (e.g. something like adding \u0027llvm-dependencies\u0027 whouldn\u0027t stand out if the module name was ${MODULE_NAME} but would be easy to spot if it was \u0027subzero\u0027). And reversely, it looks a bit weird to see something highly Subzero-specific be declared for a target that looks generic.\n\nI think things should only be an abstract variable if they\u0027re expected to be changed/overridden. Otherwise it just obfuscates. A variable would make sense if instead of copy-pasting between between the files we\u0027d have common utility macros.",
      "parentUuid": "378d92a8_24b5794a",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 24
      },
      "revId": "6081a1649a7e5fafd4e20f56db32f4c6abbae56a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75ae9e97_5d9ab019",
        "filename": "third_party/subzero/CMakeLists.txt",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 9669
      },
      "writtenOn": "2020-03-29T04:37:57Z",
      "side": 1,
      "message": "I don\u0027t agree that a comment is as good, as comments tend to lie over time. As I said, this is fairly common practice in modern cmake, where each module is in its own CMakeLists, and only one module. We can think of MODULE_NAME as similar to CMAKE_CURRENT_SOURCE and the like - they are different depending on the file it\u0027s in. I would prefer to leave it this way, unless you\u0027re really against it.",
      "parentUuid": "fdef7f3b_25ba7d8e",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 24
      },
      "revId": "6081a1649a7e5fafd4e20f56db32f4c6abbae56a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6023df7_797274ab",
        "filename": "third_party/subzero/CMakeLists.txt",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 9669
      },
      "writtenOn": "2020-03-30T12:54:25Z",
      "side": 1,
      "message": "I decided to go ahead and remove MODULE_NAME, because I realized that it\u0027s not always true that a CMakeLists.txt will add a single target. For example, the one I started writing for Reactor adds ReactorLLVM and ReactorSubzero.",
      "parentUuid": "75ae9e97_5d9ab019",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 24
      },
      "revId": "6081a1649a7e5fafd4e20f56db32f4c6abbae56a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1b632d26_b6139fec",
        "filename": "third_party/subzero/CMakeLists.txt",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 5005
      },
      "writtenOn": "2020-03-30T13:57:52Z",
      "side": 1,
      "message": "Thanks. I think it does illustrate that a comment is as good, if not better. While I fully agree comments can lie over time, there\u0027s an equal risk of the module name not being the only one.\n\nI don\u0027t think it\u0027s comparable to CMAKE_CURRENT_SOURCE, since that one is controlled by CMake itself to be what it claims to be.",
      "parentUuid": "d6023df7_797274ab",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 24
      },
      "revId": "6081a1649a7e5fafd4e20f56db32f4c6abbae56a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "770e369f_e7bbf55d",
        "filename": "third_party/subzero/CMakeLists.txt",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 9669
      },
      "writtenOn": "2020-03-30T14:38:42Z",
      "side": 1,
      "message": "I still don\u0027t agree that a comment would be better in the case of a single module. A live variable cannot lie, as it just would do the right thing.\n\nThe truth is, for these third_party modules, they should be completely independent of the root CMakeLists, since they are \"third party\" libraries, and should be usable outside of SwiftShader. That means, they\u0027d have a \"project()\" directive, and their own build options (like marl, for e.g.). However, I\u0027m not going to do that just yet, as it\u0027s much easier to incrementally split out CMakeLists.txt this way, as we\u0027re doing. If we decide we really don\u0027t need these to be standalone third party libs, they should be moved into a separate location (src/ or better yet, a libs/ folder).",
      "parentUuid": "1b632d26_b6139fec",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 24
      },
      "revId": "6081a1649a7e5fafd4e20f56db32f4c6abbae56a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4a977b7_20835374",
        "filename": "third_party/subzero/CMakeLists.txt",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 5005
      },
      "writtenOn": "2020-03-29T03:00:58Z",
      "side": 1,
      "message": "nit: SUBZERO_SRC_FILES ?\n\nIt might help prevent people from adding non-Subzero source file dependencies directly to this list.",
      "range": {
        "startLine": 22,
        "startChar": 4,
        "endLine": 22,
        "endChar": 13
      },
      "revId": "6081a1649a7e5fafd4e20f56db32f4c6abbae56a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae8ecc12_0a18eb3d",
        "filename": "third_party/subzero/CMakeLists.txt",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 9669
      },
      "writtenOn": "2020-03-29T04:37:57Z",
      "side": 1,
      "message": "Again, in modern cmake, each CMakeLists is for exactly one module, so there should never be more than one set of source files for this file. This would be like having a class Subzero with data member m_subzeroSourceFiles. The prefix is redundant. It\u0027s actually quite freeing not to be forced to prefix every variable. In old CMake, where everything is in one file, we had no choice.",
      "parentUuid": "e4a977b7_20835374",
      "range": {
        "startLine": 22,
        "startChar": 4,
        "endLine": 22,
        "endChar": 13
      },
      "revId": "6081a1649a7e5fafd4e20f56db32f4c6abbae56a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3e45df02_e9bb6d84",
        "filename": "third_party/subzero/CMakeLists.txt",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 5005
      },
      "writtenOn": "2020-03-30T13:57:52Z",
      "side": 1,
      "message": "It\u0027s great that CMake is being modernized with new features and practices, but I feel like it\u0027s a bit fragile and my argument still holds. The prefix is only redundant if it can be guaranteed that it will only contain subzero source files. Otherwise, it\u0027s useful information about the intent of this list, without having to check a bunch of context.\n\nMaybe one day CMake will add true support for modules that act like a namespace in which these variables become unambiguous. Until then, the prefix feels like a small price to improve clarity.\n\nJust my 2 cents though.",
      "parentUuid": "ae8ecc12_0a18eb3d",
      "range": {
        "startLine": 22,
        "startChar": 4,
        "endLine": 22,
        "endChar": 13
      },
      "revId": "6081a1649a7e5fafd4e20f56db32f4c6abbae56a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "de372d33_312fb82e",
        "filename": "third_party/subzero/CMakeLists.txt",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 9669
      },
      "writtenOn": "2020-03-30T14:38:42Z",
      "side": 1,
      "message": "Okay, I\u0027ll add the prefix. Your comment about namespacing reminded me that variables have \"directory\" scope, which is fine for leaf CMakeLists.txt like these... until they are no longer leaf nodes (e.g. we add_subdirectory another subdirectory from within).",
      "parentUuid": "3e45df02_e9bb6d84",
      "range": {
        "startLine": 22,
        "startChar": 4,
        "endLine": 22,
        "endChar": 13
      },
      "revId": "6081a1649a7e5fafd4e20f56db32f4c6abbae56a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fd3b371_429a7aa9",
        "filename": "third_party/subzero/CMakeLists.txt",
        "patchSetId": 3
      },
      "lineNbr": 58,
      "author": {
        "id": 5005
      },
      "writtenOn": "2020-03-29T03:00:58Z",
      "side": 1,
      "message": "nit: SUBZERO_TARGET_CPU ?\n\nOtherwise could be confused for being the actual build target.",
      "range": {
        "startLine": 58,
        "startChar": 8,
        "endLine": 58,
        "endChar": 23
      },
      "revId": "6081a1649a7e5fafd4e20f56db32f4c6abbae56a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0801988f_f38b4dfd",
        "filename": "third_party/subzero/CMakeLists.txt",
        "patchSetId": 3
      },
      "lineNbr": 58,
      "author": {
        "id": 5005
      },
      "writtenOn": "2020-03-30T13:57:52Z",
      "side": 1,
      "message": "Any opinion on this? It\u0027s a nit, but I just wanted to make sure you\u0027ve considered it.",
      "parentUuid": "5fd3b371_429a7aa9",
      "range": {
        "startLine": 58,
        "startChar": 8,
        "endLine": 58,
        "endChar": 23
      },
      "revId": "6081a1649a7e5fafd4e20f56db32f4c6abbae56a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45441e54_1cf1712d",
        "filename": "third_party/subzero/CMakeLists.txt",
        "patchSetId": 3
      },
      "lineNbr": 58,
      "author": {
        "id": 9669
      },
      "writtenOn": "2020-03-30T14:38:42Z",
      "side": 1,
      "message": "I had replied, but looks like my comment didn\u0027t get pushed through for whatever reason. Anyway, what I had said was: This was the name of the variable beforehand. It\u0027s used to set the SZ_TARGET macro. I agree with you that adding _CPU makes it more clear, so I\u0027ll do that.",
      "parentUuid": "0801988f_f38b4dfd",
      "range": {
        "startLine": 58,
        "startChar": 8,
        "endLine": 58,
        "endChar": 23
      },
      "revId": "6081a1649a7e5fafd4e20f56db32f4c6abbae56a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    }
  ]
}