{
  "comments": [
    {
      "key": {
        "uuid": "db71ebae_c777def9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 9669
      },
      "writtenOn": "2020-04-16T20:22:30Z",
      "side": 1,
      "message": "s/unusued/unused/",
      "revId": "23055b8c3cd96267d7b9d29f009c443eb59fb6b1",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d78555d_5da39491",
        "filename": "src/Vulkan/VkCommandBuffer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1058,
      "author": {
        "id": 9669
      },
      "writtenOn": "2020-04-16T19:27:07Z",
      "side": 1,
      "message": "This comment without \"VkPipelineStageFlags stageMask;\" seems to make little sense, right? Maybe put it back in commented?\n\n// FIXME(b/117835459) : We currently ignore the flags and reset the event at the last stage\n// VkPipelineStageFlags stageMask;",
      "revId": "23055b8c3cd96267d7b9d29f009c443eb59fb6b1",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d45e5456_86106a4c",
        "filename": "src/Vulkan/VkCommandBuffer.hpp",
        "patchSetId": 2
      },
      "lineNbr": 208,
      "author": {
        "id": 9669
      },
      "writtenOn": "2020-04-16T19:27:07Z",
      "side": 1,
      "message": "Have to be very careful with if-defing fields as you can get into ODR violations if ever you link libs with and without this defined. I think we\u0027re okay here because ENABLE_VK_DEBUGGER is defined at the compiler level, but maybe we should just (void) cast it in the constructor.",
      "revId": "23055b8c3cd96267d7b9d29f009c443eb59fb6b1",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b366f9fa_9be7c15c",
        "filename": "src/Vulkan/VkCommandBuffer.hpp",
        "patchSetId": 2
      },
      "lineNbr": 208,
      "author": {
        "id": 5050
      },
      "writtenOn": "2020-04-17T14:12:58Z",
      "side": 1,
      "message": "Not a huge fan of this either. Suggestion:\nMaybe create a private function in vk::CommandBuffer like this:\nstd::shared_ptr\u003cvk::dbg::Context\u003e getDebuggerContext() const\n{\n  return device-\u003egetDebuggerContext();\n}\nAnd the use it within VkCommandBuffer.cpp\nWould that get rid of the warning?",
      "parentUuid": "d45e5456_86106a4c",
      "revId": "23055b8c3cd96267d7b9d29f009c443eb59fb6b1",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0947674d_d51a384c",
        "filename": "src/Vulkan/VkCommandBuffer.hpp",
        "patchSetId": 2
      },
      "lineNbr": 208,
      "author": {
        "id": 7183
      },
      "writtenOn": "2020-04-17T14:21:14Z",
      "side": 1,
      "message": "I think the (void) approach is the easiest. No real need to make new accessors just to satisfy a compiler warning.\nWill fix.",
      "parentUuid": "b366f9fa_9be7c15c",
      "revId": "23055b8c3cd96267d7b9d29f009c443eb59fb6b1",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    }
  ]
}