{
  "comments": [
    {
      "key": {
        "uuid": "2e07b0da_0cda778d",
        "filename": "src/OpenGL/libGLESv2/Context.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1587,
      "author": {
        "id": 5050
      },
      "writtenOn": "2019-10-11T03:56:33Z",
      "side": 1,
      "message": "Nit: why is this no longer using ComputePitch? Seems like it would be safer to use the same function everywhere.",
      "range": {
        "startLine": 1587,
        "startChar": 23,
        "endLine": 1587,
        "endChar": 98
      },
      "revId": "0b5d1908b2ee21436a8dfc5febf465d2205cf93c",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca763543_b29c4215",
        "filename": "src/OpenGL/libGLESv2/Context.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1587,
      "author": {
        "id": 9035
      },
      "writtenOn": "2019-10-11T19:55:34Z",
      "side": 1,
      "message": "It seems weird to me to call ComputePitch if we also need to get bytesPerPixel. It felt like I would be double calculating stuff. And I personally have an easier time reading this code as it is now than I do when I replace that with a call to ComputePitch. It\u0027s easier to tell what this is intending to do and how it\u0027s accomplishing that when all the multiplies are kept next to each other.",
      "parentUuid": "2e07b0da_0cda778d",
      "range": {
        "startLine": 1587,
        "startChar": 23,
        "endLine": 1587,
        "endChar": 98
      },
      "revId": "0b5d1908b2ee21436a8dfc5febf465d2205cf93c",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "23e17ec6_35f563b6",
        "filename": "src/OpenGL/libGLESv2/Context.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1587,
      "author": {
        "id": 5050
      },
      "writtenOn": "2019-10-11T20:24:23Z",
      "side": 1,
      "message": "Even if it looks like we compute the same thing twice, remember that a slight mathematical difference between the logic in this function and the logic used in ComputePitch can cause failures. Since this is an API function, performance isn\u0027t an issue and I\u0027d go for safety. Calling ComputePitch here will also restore the assert that the alignment is valid.",
      "parentUuid": "ca763543_b29c4215",
      "range": {
        "startLine": 1587,
        "startChar": 23,
        "endLine": 1587,
        "endChar": 98
      },
      "revId": "0b5d1908b2ee21436a8dfc5febf465d2205cf93c",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "737d05f3_6759a64f",
        "filename": "src/OpenGL/libGLESv2/Context.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1587,
      "author": {
        "id": 9035
      },
      "writtenOn": "2019-10-15T15:00:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "23e17ec6_35f563b6",
      "range": {
        "startLine": 1587,
        "startChar": 23,
        "endLine": 1587,
        "endChar": 98
      },
      "revId": "0b5d1908b2ee21436a8dfc5febf465d2205cf93c",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    }
  ]
}