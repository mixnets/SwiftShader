{
  "comments": [
    {
      "key": {
        "uuid": "99774bf7_94891b57",
        "filename": "src/Pipeline/SpirvShader.cpp",
        "patchSetId": 5
      },
      "lineNbr": 554,
      "author": {
        "id": 7183
      },
      "writtenOn": "2019-02-14T09:31:12Z",
      "side": 1,
      "message": "Is it ever expected for ApplyDecorationsForId and ApplyDecorationsForIdMember to be handed an id / member index that is not recognised, or is this just playing safe with invalid SPIR-V input?\n\nIf it is not expected, maybe we should have a debug-only warning?\n\nIf it is expected, please can we have a comment here explaining when this can occur?",
      "range": {
        "startLine": 554,
        "startChar": 6,
        "endLine": 554,
        "endChar": 29
      },
      "revId": "fbcedf6974eeee7ac66f628f5cf365b7a5ef8df6",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd721bfb_9ab6815f",
        "filename": "src/Pipeline/SpirvShader.cpp",
        "patchSetId": 5
      },
      "lineNbr": 554,
      "author": {
        "id": 6982
      },
      "writtenOn": "2019-02-15T16:09:27Z",
      "side": 1,
      "message": "This can occur all the time. Decorations are sparse. This is \"apply any decorations you happen to have for this id\" and occurs at multiple levels in variable/type walking etc.",
      "parentUuid": "99774bf7_94891b57",
      "range": {
        "startLine": 554,
        "startChar": 6,
        "endLine": 554,
        "endChar": 29
      },
      "revId": "fbcedf6974eeee7ac66f628f5cf365b7a5ef8df6",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb8b5e05_e6fc3102",
        "filename": "src/Pipeline/SpirvShader.cpp",
        "patchSetId": 5
      },
      "lineNbr": 554,
      "author": {
        "id": 6982
      },
      "writtenOn": "2019-02-15T16:13:39Z",
      "side": 1,
      "message": "Will add comments here to describe what is expected.",
      "parentUuid": "cd721bfb_9ab6815f",
      "range": {
        "startLine": 554,
        "startChar": 6,
        "endLine": 554,
        "endChar": 29
      },
      "revId": "fbcedf6974eeee7ac66f628f5cf365b7a5ef8df6",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8eac201a_da345756",
        "filename": "src/Pipeline/SpirvShader.cpp",
        "patchSetId": 5
      },
      "lineNbr": 554,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-02-15T16:25:12Z",
      "side": 1,
      "message": "The SPIR-V spec\u0027s validation rules state that: \"Each \u003cid\u003e must appear exactly once as the Result \u003cid\u003e of an instruction.\" also \"The definition of an SSA \u003cid\u003e should dominate all uses of it\"\n\nSo we shouldn\u0027t encounter any unknown id\u0027s. The spec lists a couple of exceptions, but as far as I can tell you can\u0027t decorate id\u0027s that haven\u0027t been declared yet.\n\nSo an assert indeed seems much better than dropping it on the floor silently.",
      "parentUuid": "99774bf7_94891b57",
      "range": {
        "startLine": 554,
        "startChar": 6,
        "endLine": 554,
        "endChar": 29
      },
      "revId": "fbcedf6974eeee7ac66f628f5cf365b7a5ef8df6",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb8b92d9_06128309",
        "filename": "src/Pipeline/SpirvShader.cpp",
        "patchSetId": 5
      },
      "lineNbr": 554,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-02-15T16:41:17Z",
      "side": 1,
      "message": "Missed your earlier comment (had to reload). Makes sense now, thanks! Clarification can be added to the code later if you prefer.",
      "parentUuid": "8eac201a_da345756",
      "range": {
        "startLine": 554,
        "startChar": 6,
        "endLine": 554,
        "endChar": 29
      },
      "revId": "fbcedf6974eeee7ac66f628f5cf365b7a5ef8df6",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    }
  ]
}