{
  "comments": [
    {
      "key": {
        "uuid": "bc5a7e0a_6dcc0d41",
        "filename": "src/Vulkan/VkFramebuffer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 5050
      },
      "writtenOn": "2019-01-25T23:03:19Z",
      "side": 1,
      "message": "Do the RenderPass attachment definitions and the Framebuffer attachments match? I\u0027m not sure about this part.",
      "range": {
        "startLine": 43,
        "startChar": 59,
        "endLine": 43,
        "endChar": 109
      },
      "revId": "f3c2bbfbb2f1c52ab907e76e9c6624e5170157a0",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1cccf27_6e1fb544",
        "filename": "src/Vulkan/VkFramebuffer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 6982
      },
      "writtenOn": "2019-01-25T23:06:01Z",
      "side": 1,
      "message": "if attachmentCount !\u003d renderPass-\u003egetAttachmentCount() something is very wrong...",
      "revId": "f3c2bbfbb2f1c52ab907e76e9c6624e5170157a0",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b224636_6541e986",
        "filename": "src/Vulkan/VkFramebuffer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 6982
      },
      "writtenOn": "2019-01-25T23:14:43Z",
      "side": 1,
      "message": "Yes. the framebuffer contains exactly one VkImageView for each attachment in the renderpass. Spec (VU for VkFramebufferCreateInfo):\n\n`attachmentCount must be equal to the attachment count specified in renderPass`",
      "parentUuid": "bc5a7e0a_6dcc0d41",
      "range": {
        "startLine": 43,
        "startChar": 59,
        "endLine": 43,
        "endChar": 109
      },
      "revId": "f3c2bbfbb2f1c52ab907e76e9c6624e5170157a0",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef9a79fd_e8503c08",
        "filename": "src/Vulkan/VkFramebuffer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 6982
      },
      "writtenOn": "2019-01-25T23:06:01Z",
      "side": 1,
      "message": "This is still not really right.\n\nIf there\u0027s a color aspect or a depth aspect, and attachment.loadOp \u003d\u003d VK_ATTACHMENT_LOAD_OP_CLEAR, then we should clear the color aspect or depth aspect.\n\nAlso, if there\u0027s a stencil aspect, and attachment.stencilLoadOp \u003d\u003d VK_ATTACHMENT_LOAD_OP_CLEAR, then we should clear the stencil aspect.",
      "revId": "f3c2bbfbb2f1c52ab907e76e9c6624e5170157a0",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aacf7bac_01b0e815",
        "filename": "src/Vulkan/VkFramebuffer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 5050
      },
      "writtenOn": "2019-01-26T00:27:02Z",
      "side": 1,
      "message": "That\u0027s not what the spec says:\n\"if the attachment uses a loadOp value of VK_ATTACHMENT_LOAD_OP_CLEAR or if the attachment has a depth/stencil format and uses a stencilLoadOp value of VK_ATTACHMENT_LOAD_OP_CLEAR\"\n\nThe way I wrote it is how I interpret it, but the way it\u0027s written would literally be:\nif((loadOp \u003d\u003d VK...) || (isDepthStencil \u0026\u0026 stencilLoadOp \u003d\u003d VK...))\n\nBut I don\u0027t think that\u0027s what they meant.",
      "parentUuid": "ef9a79fd_e8503c08",
      "revId": "f3c2bbfbb2f1c52ab907e76e9c6624e5170157a0",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    }
  ]
}