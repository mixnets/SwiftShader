{
  "comments": [
    {
      "key": {
        "uuid": "ade41943_86f47944",
        "filename": "src/Reactor/LLVMReactor.cpp",
        "patchSetId": 8
      },
      "lineNbr": 110,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-07-02T19:26:49Z",
      "side": 1,
      "message": "typo",
      "range": {
        "startLine": 110,
        "startChar": 11,
        "endLine": 110,
        "endChar": 22
      },
      "revId": "478b6ae1f4c7ba29c21ffacafa9bc2c01c82f34a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d849e35_633bbbb4",
        "filename": "src/Reactor/LLVMReactor.cpp",
        "patchSetId": 8
      },
      "lineNbr": 110,
      "author": {
        "id": 7183
      },
      "writtenOn": "2019-07-02T20:21:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ade41943_86f47944",
      "range": {
        "startLine": 110,
        "startChar": 11,
        "endLine": 110,
        "endChar": 22
      },
      "revId": "478b6ae1f4c7ba29c21ffacafa9bc2c01c82f34a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9246c7c8_3304c966",
        "filename": "src/Reactor/LLVMReactor.cpp",
        "patchSetId": 8
      },
      "lineNbr": 252,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-07-02T19:26:49Z",
      "side": 1,
      "message": "I\u0027m not sure why this is reference counted. If I\u0027m not mistaken, each LLVMRoutine was/is associated with a session, and when it\u0027s deleted it frees the session data.",
      "range": {
        "startLine": 251,
        "startChar": 4,
        "endLine": 252,
        "endChar": 36
      },
      "revId": "478b6ae1f4c7ba29c21ffacafa9bc2c01c82f34a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "200b3c91_83ab655e",
        "filename": "src/Reactor/LLVMReactor.cpp",
        "patchSetId": 8
      },
      "lineNbr": 252,
      "author": {
        "id": 7183
      },
      "writtenOn": "2019-07-02T19:33:01Z",
      "side": 1,
      "message": "It did occur to me that JITSession and LLVMRoutine is now a 1:1 relationship with this change, and I can fold them together. If you think it is worthwhile for me to pursue this path, I will do this.",
      "parentUuid": "9246c7c8_3304c966",
      "range": {
        "startLine": 251,
        "startChar": 4,
        "endLine": 252,
        "endChar": 36
      },
      "revId": "478b6ae1f4c7ba29c21ffacafa9bc2c01c82f34a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68011195_7ee0539d",
        "filename": "src/Reactor/LLVMReactor.cpp",
        "patchSetId": 8
      },
      "lineNbr": 252,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-07-02T19:54:02Z",
      "side": 1,
      "message": "Thanks for confirming they\u0027re 1:1. Let\u0027s clean up later.",
      "parentUuid": "200b3c91_83ab655e",
      "range": {
        "startLine": 251,
        "startChar": 4,
        "endLine": 252,
        "endChar": 36
      },
      "revId": "478b6ae1f4c7ba29c21ffacafa9bc2c01c82f34a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4ea515e9_84c6e971",
        "filename": "src/Reactor/LLVMReactor.cpp",
        "patchSetId": 8
      },
      "lineNbr": 252,
      "author": {
        "id": 7183
      },
      "writtenOn": "2019-07-02T20:21:17Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "68011195_7ee0539d",
      "range": {
        "startLine": 251,
        "startChar": 4,
        "endLine": 252,
        "endChar": 36
      },
      "revId": "478b6ae1f4c7ba29c21ffacafa9bc2c01c82f34a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "feebb841_d2af4a43",
        "filename": "src/Reactor/LLVMReactor.cpp",
        "patchSetId": 8
      },
      "lineNbr": 252,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-07-02T21:30:25Z",
      "side": 1,
      "message": "It just occurred to me that since the upgrade to LLVM 7.0 our Routine objects are no longer light-weight blocks of executable memory that can exist stand-alone from LLVM. :-(",
      "parentUuid": "4ea515e9_84c6e971",
      "range": {
        "startLine": 251,
        "startChar": 4,
        "endLine": 252,
        "endChar": 36
      },
      "revId": "478b6ae1f4c7ba29c21ffacafa9bc2c01c82f34a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c814520e_242ed9c4",
        "filename": "src/Reactor/LLVMReactor.cpp",
        "patchSetId": 8
      },
      "lineNbr": 496,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-07-02T19:26:49Z",
      "side": 1,
      "message": "nit: builder is used a lot, so it might be preferable to avoid this pointer hop.",
      "range": {
        "startLine": 496,
        "startChar": 6,
        "endLine": 496,
        "endChar": 18
      },
      "revId": "478b6ae1f4c7ba29c21ffacafa9bc2c01c82f34a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ae883fa_3d8c5f8e",
        "filename": "src/Reactor/LLVMReactor.cpp",
        "patchSetId": 8
      },
      "lineNbr": 496,
      "author": {
        "id": 7183
      },
      "writtenOn": "2019-07-02T19:33:01Z",
      "side": 1,
      "message": "Are you suggesting storing jit-\u003ebuilder into a local, or flattening out the structure into globals again? If it\u0027s the latter, it\u0027s certainly something I\u0027m trying to avoid. The former I\u0027m happy to do.",
      "parentUuid": "c814520e_242ed9c4",
      "range": {
        "startLine": 496,
        "startChar": 6,
        "endLine": 496,
        "endChar": 18
      },
      "revId": "478b6ae1f4c7ba29c21ffacafa9bc2c01c82f34a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "62829213_8afde60d",
        "filename": "src/Reactor/LLVMReactor.cpp",
        "patchSetId": 8
      },
      "lineNbr": 496,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-07-02T19:54:02Z",
      "side": 1,
      "message": "I\u0027m merely suggesting making builder global again. The other members of JITBuilder are accessed far less often. In fact the context can be retrieved from IRBuilder\u003c\u003e as well, and the module can be obtained as the current basic block\u0027s parent function\u0027s parent.\n\nOr perhaps JITBuilder could be derived from IRBuilder\u003c\u003e ? Just spitballing, we can look into this micro-optimization later.",
      "parentUuid": "0ae883fa_3d8c5f8e",
      "range": {
        "startLine": 496,
        "startChar": 6,
        "endLine": 496,
        "endChar": 18
      },
      "revId": "478b6ae1f4c7ba29c21ffacafa9bc2c01c82f34a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7a8cbc1_c5347731",
        "filename": "src/Reactor/LLVMReactor.cpp",
        "patchSetId": 8
      },
      "lineNbr": 496,
      "author": {
        "id": 7183
      },
      "writtenOn": "2019-07-02T20:21:17Z",
      "side": 1,
      "message": "There are two reasons why I strongly oppose these as globals:\n\n (1) The llvm context, module and builder all share the same life time (currently, module may outlive the other two in the future). They belong grouped together, so that you do not end up with bugs where one or more is not cleared between reactor function builds. This is particularly important for coroutines where there are an additional 8 fields that also have the same lifetimes.\n\n (2) When we finally kill the reactor mutex (https://swiftshader-review.googlesource.com/c/SwiftShader/+/33484), it gives us a single thing to TLS.",
      "parentUuid": "62829213_8afde60d",
      "range": {
        "startLine": 496,
        "startChar": 6,
        "endLine": 496,
        "endChar": 18
      },
      "revId": "478b6ae1f4c7ba29c21ffacafa9bc2c01c82f34a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4dc7d29_a09f8e4d",
        "filename": "src/Reactor/LLVMReactor.cpp",
        "patchSetId": 8
      },
      "lineNbr": 497,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-07-02T19:26:49Z",
      "side": 1,
      "message": "nit: While redundant, I liked the :: in front of globals to make the stand out more.",
      "range": {
        "startLine": 497,
        "startChar": 6,
        "endLine": 497,
        "endChar": 9
      },
      "revId": "478b6ae1f4c7ba29c21ffacafa9bc2c01c82f34a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "28ebe019_593015b6",
        "filename": "src/Reactor/LLVMReactor.cpp",
        "patchSetId": 8
      },
      "lineNbr": 497,
      "author": {
        "id": 7183
      },
      "writtenOn": "2019-07-02T19:33:01Z",
      "side": 1,
      "message": "Okay, I\u0027m not particularly fussed either way. I noticed that there was an almost even split of :: prefixing or not, and I went for the one that reduced noise. Can fix though.",
      "parentUuid": "a4dc7d29_a09f8e4d",
      "range": {
        "startLine": 497,
        "startChar": 6,
        "endLine": 497,
        "endChar": 9
      },
      "revId": "478b6ae1f4c7ba29c21ffacafa9bc2c01c82f34a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f2b872a_e4b08261",
        "filename": "src/Reactor/LLVMReactor.cpp",
        "patchSetId": 8
      },
      "lineNbr": 497,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-07-02T19:54:02Z",
      "side": 1,
      "message": "No worries, just a style nit we can address later.",
      "parentUuid": "28ebe019_593015b6",
      "range": {
        "startLine": 497,
        "startChar": 6,
        "endLine": 497,
        "endChar": 9
      },
      "revId": "478b6ae1f4c7ba29c21ffacafa9bc2c01c82f34a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e9a152f3_db5b8feb",
        "filename": "src/Reactor/LLVMReactor.cpp",
        "patchSetId": 8
      },
      "lineNbr": 497,
      "author": {
        "id": 7183
      },
      "writtenOn": "2019-07-02T20:21:17Z",
      "side": 1,
      "message": "Ack. Happy to append a change on the end that unifies the code style.",
      "parentUuid": "7f2b872a_e4b08261",
      "range": {
        "startLine": 497,
        "startChar": 6,
        "endLine": 497,
        "endChar": 9
      },
      "revId": "478b6ae1f4c7ba29c21ffacafa9bc2c01c82f34a",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    }
  ]
}