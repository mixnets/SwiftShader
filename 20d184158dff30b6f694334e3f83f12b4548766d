{
  "comments": [
    {
      "key": {
        "uuid": "fbe0ab0f_5c0261b4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 5005
      },
      "writtenOn": "2020-04-03T20:56:05Z",
      "side": 1,
      "message": "Hack",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 9
      },
      "revId": "20d184158dff30b6f694334e3f83f12b4548766d",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05e4fab7_34de47e5",
        "filename": "src/Reactor/Reactor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4376,
      "author": {
        "id": 5005
      },
      "writtenOn": "2020-04-03T20:56:05Z",
      "side": 1,
      "message": "The reason this hasn\u0027t been added before is that you can get different results based on whether Min or Max is done first, if the input isn\u0027t a finite value. At one point we had an out-of-buffer access because a clamp produced a value outside of the range. I\u0027ll try to dig up the specifics (might have involved conversion to integer too)...",
      "range": {
        "startLine": 4376,
        "startChar": 15,
        "endLine": 4376,
        "endChar": 20
      },
      "revId": "20d184158dff30b6f694334e3f83f12b4548766d",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e68482d_7d6157e8",
        "filename": "src/Reactor/Reactor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4376,
      "author": {
        "id": 9669
      },
      "writtenOn": "2020-04-06T13:32:41Z",
      "side": 1,
      "message": "Are you saying you don\u0027t want me to add this? This isn\u0027t the only Clamp function in Reactor, there\u0027s also:\n\nhttps://cs.corp.google.com/piper///depot/google3/third_party/swiftshader/src/Reactor/Reactor.hpp?dr\u003dC\u0026g\u003d0\u0026l\u003d1145\n\nand\n\nhttps://cs.corp.google.com/piper///depot/google3/third_party/swiftshader/src/Reactor/Reactor.hpp?dr\u003dC\u0026g\u003d0\u0026l\u003d1282",
      "parentUuid": "05e4fab7_34de47e5",
      "range": {
        "startLine": 4376,
        "startChar": 15,
        "endLine": 4376,
        "endChar": 20
      },
      "revId": "20d184158dff30b6f694334e3f83f12b4548766d",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2a07ca1_b0e072f0",
        "filename": "src/Reactor/Reactor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4376,
      "author": {
        "id": 5005
      },
      "writtenOn": "2020-04-06T13:36:29Z",
      "side": 1,
      "message": "Not quite what I was looking for, but definitely related: https://swiftshader-review.googlesource.com/c/SwiftShader/+/21708\n\nAlso note that while GLSL defines clamp() as min(max(x, minVal), maxVal), SPIR-V and LLVM IR don\u0027t define it, so I think we should define it only where needed, when well-defined how it should behave.",
      "parentUuid": "05e4fab7_34de47e5",
      "range": {
        "startLine": 4376,
        "startChar": 15,
        "endLine": 4376,
        "endChar": 20
      },
      "revId": "20d184158dff30b6f694334e3f83f12b4548766d",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "963ee2d5_000c0c86",
        "filename": "src/Shader/ShaderCore.cpp",
        "patchSetId": 1
      },
      "lineNbr": 314,
      "author": {
        "id": 5005
      },
      "writtenOn": "2020-04-03T20:56:05Z",
      "side": 1,
      "message": "I\u0027d prefer if this described what we need to-do, not what\u0027s done now (or separate those two).",
      "range": {
        "startLine": 314,
        "startChar": 24,
        "endLine": 314,
        "endChar": 29
      },
      "revId": "20d184158dff30b6f694334e3f83f12b4548766d",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    }
  ]
}