{
  "comments": [
    {
      "key": {
        "uuid": "28079202_f56ed538",
        "filename": "CMakeLists.txt",
        "patchSetId": 5
      },
      "lineNbr": 2046,
      "author": {
        "id": 5065
      },
      "writtenOn": "2019-02-25T18:56:34Z",
      "side": 1,
      "message": "nit: Could be in an SI/ folder as there are system-specific extensions for sharing memory and fences too.",
      "range": {
        "startLine": 2046,
        "startChar": 18,
        "endLine": 2046,
        "endChar": 21
      },
      "revId": "5c52a65838418f067e507d3f203fa9b1b527b845",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed9eeb0c_5d7122bf",
        "filename": "CMakeLists.txt",
        "patchSetId": 5
      },
      "lineNbr": 2046,
      "author": {
        "id": 7146
      },
      "writtenOn": "2019-02-25T21:18:14Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "28079202_f56ed538",
      "range": {
        "startLine": 2046,
        "startChar": 18,
        "endLine": 2046,
        "endChar": 21
      },
      "revId": "5c52a65838418f067e507d3f203fa9b1b527b845",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2fdc6f90_af0bff71",
        "filename": "CMakeLists.txt",
        "patchSetId": 5
      },
      "lineNbr": 2086,
      "author": {
        "id": 5065
      },
      "writtenOn": "2019-02-25T18:56:34Z",
      "side": 1,
      "message": "This file wasn\u0027t added.",
      "revId": "5c52a65838418f067e507d3f203fa9b1b527b845",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "731b964f_4f4d9f32",
        "filename": "CMakeLists.txt",
        "patchSetId": 5
      },
      "lineNbr": 2086,
      "author": {
        "id": 7146
      },
      "writtenOn": "2019-02-25T21:18:14Z",
      "side": 1,
      "message": "I am not entirely sure what you mean. That file should already be in master. I got it from my initial clone.",
      "parentUuid": "2fdc6f90_af0bff71",
      "revId": "5c52a65838418f067e507d3f203fa9b1b527b845",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00845aa6_97d8a4d8",
        "filename": "CMakeLists.txt",
        "patchSetId": 5
      },
      "lineNbr": 2086,
      "author": {
        "id": 5065
      },
      "writtenOn": "2019-02-26T08:42:29Z",
      "side": 1,
      "message": "Whoops I didn\u0027t realize this was a preexisting file.",
      "parentUuid": "731b964f_4f4d9f32",
      "revId": "5c52a65838418f067e507d3f203fa9b1b527b845",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c811e50e_0d070a36",
        "filename": "src/Vulkan/libVulkan.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2067,
      "author": {
        "id": 5065
      },
      "writtenOn": "2019-02-25T18:56:34Z",
      "side": 1,
      "message": "On Linux there are both xlib and xcb so the application should have the choice of which to use. I suggest having a helper function in SurfaceKHR.cpp/h that looks at \"sType\" and decide which implementation to use. This would also move the platform-specific logic out of this file and into SurfaceKHR.cpp",
      "revId": "5c52a65838418f067e507d3f203fa9b1b527b845",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd6cda1e_dbcd2f3b",
        "filename": "src/Vulkan/libVulkan.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2067,
      "author": {
        "id": 7146
      },
      "writtenOn": "2019-02-25T21:18:14Z",
      "side": 1,
      "message": "The application is responsible for picking which library to use as well as which kind of surface to use. Hence why there is a vkCreateXlibSurfaceKHR (as implemented) as well as vkCreateXcbSurfaceKHR (future CL)",
      "parentUuid": "c811e50e_0d070a36",
      "revId": "5c52a65838418f067e507d3f203fa9b1b527b845",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4fb829d9_b3f2f8d0",
        "filename": "src/Vulkan/libVulkan.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2067,
      "author": {
        "id": 5065
      },
      "writtenOn": "2019-02-26T08:42:29Z",
      "side": 1,
      "message": "Thanks for the explanation, sgtm",
      "parentUuid": "fd6cda1e_dbcd2f3b",
      "revId": "5c52a65838418f067e507d3f203fa9b1b527b845",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "72ea0f8a_1df0c3da",
        "filename": "src/WSI/VkSurfaceKHR.cpp",
        "patchSetId": 5
      },
      "lineNbr": 32,
      "author": {
        "id": 5065
      },
      "writtenOn": "2019-02-25T18:56:34Z",
      "side": 1,
      "message": "nit: this could be a bit more generous and include transfer_dst",
      "revId": "5c52a65838418f067e507d3f203fa9b1b527b845",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10eae0bf_cac74e67",
        "filename": "src/WSI/VkSurfaceKHR.cpp",
        "patchSetId": 5
      },
      "lineNbr": 32,
      "author": {
        "id": 7146
      },
      "writtenOn": "2019-02-25T21:18:14Z",
      "side": 1,
      "message": "I will add this. Note that this is a minimal implementation and might not have everything to make a usable surface. Feel free to add to it in the future.",
      "parentUuid": "72ea0f8a_1df0c3da",
      "revId": "5c52a65838418f067e507d3f203fa9b1b527b845",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    }
  ]
}