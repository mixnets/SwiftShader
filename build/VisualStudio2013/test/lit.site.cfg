import sys

## Autogenerated by LLVM/Clang configuration.
# Do not edit!
config.host_triple = "i686-pc-win32"
config.target_triple = "i686-pc-win32"
config.llvm_src_root = "C:/Users/nicolascapens/Development/SwiftShader/src/LLVM"
config.llvm_obj_root = "C:/Users/nicolascapens/Development/SwiftShader/build/VisualStudio2013"
config.llvm_tools_dir = "C:/Users/nicolascapens/Development/SwiftShader/build/VisualStudio2013/bin/%(build_mode)s"
config.llvm_shlib_dir = "C:/Users/nicolascapens/Development/SwiftShader/build/VisualStudio2013/lib/$(Configuration)"
config.llvm_shlib_ext = ".dll"
config.lit_tools_dir = ""
config.python_executable = "C:/python_27_amd64/files/python.exe"
config.ocamlopt_executable = ""
config.enable_shared = 0
config.enable_assertions = 0
config.targets_to_build = " AArch64 ARM CppBackend Hexagon Mips MSP430 NVPTX PowerPC R600 Sparc SystemZ X86 XCore"
config.llvm_bindings = ""
config.host_os = "Windows"
config.host_arch = "AMD64"
config.llvm_use_intel_jitevents = "OFF"
config.llvm_use_sanitizer = ""
config.have_zlib = ""

# Support substitution of the tools_dir with user parameters. This is
# used when we can't determine the tool dir at configuration time.
try:
    config.llvm_tools_dir = config.llvm_tools_dir % lit_config.params
except KeyError:
    e = sys.exc_info()[1]
    key, = e.args
    lit_config.fatal("unable to find %r parameter, use '--param=%s=VALUE'" % (key,key))

# Let the main config do the real work.
lit_config.load_config(config, "C:/Users/nicolascapens/Development/SwiftShader/src/LLVM/test/lit.cfg")
