<?xml version="1.0" encoding="Windows-1252"?>
<Project DefaultTargets="Build" ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|Win32">
      <Configuration>MinSizeRel</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|Win32">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGUID>{A629BCDD-F42B-4CB0-890E-6B60B4DC2A8F}</ProjectGUID>
    <Keyword>Win32Proj</Keyword>
    <Platform>Win32</Platform>
    <ProjectName>LLVMX86CodeGen</ProjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
    <PropertyGroup>
      <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
      <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">\SwiftShader\build\VisualStudio2013\lib\Debug\</OutDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">LLVMX86CodeGen.dir\Debug\</IntDir>
      <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">LLVMX86CodeGen</TargetName>
      <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">.lib</TargetExt>
      <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">\SwiftShader\build\VisualStudio2013\lib\Release\</OutDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">LLVMX86CodeGen.dir\Release\</IntDir>
      <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">LLVMX86CodeGen</TargetName>
      <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">.lib</TargetExt>
      <OutDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">\SwiftShader\build\VisualStudio2013\lib\MinSizeRel\</OutDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">LLVMX86CodeGen.dir\MinSizeRel\</IntDir>
      <TargetName Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">LLVMX86CodeGen</TargetName>
      <TargetExt Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">.lib</TargetExt>
      <OutDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">\SwiftShader\build\VisualStudio2013\lib\RelWithDebInfo\</OutDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">LLVMX86CodeGen.dir\RelWithDebInfo\</IntDir>
      <TargetName Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">LLVMX86CodeGen</TargetName>
      <TargetExt Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">.lib</TargetExt>
    </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <AdditionalOptions> /EHs-c- -w14062 %(AdditionalOptions)</AdditionalOptions>
      <AdditionalIncludeDirectories>\SwiftShader\build\VisualStudio2013\lib\Target\X86;\SwiftShader\src\LLVM\lib\Target\X86;\SwiftShader\build\VisualStudio2013\include;\SwiftShader\src\LLVM\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>Debug/</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <CompileAs>CompileAsCpp</CompileAs>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <DisableSpecificWarnings>4146;4180;4244;4267;4345;4351;4355;4503;4624;4800;4291</DisableSpecificWarnings>
      <ExceptionHandling>
      </ExceptionHandling>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <RuntimeTypeInfo>false</RuntimeTypeInfo>
      <TreatSpecificWarningsAsErrors>4238</TreatSpecificWarningsAsErrors>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;_DEBUG;_CRT_SECURE_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;_CRT_NONSTDC_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;_SCL_SECURE_NO_DEPRECATE;_SCL_SECURE_NO_WARNINGS;__STDC_CONSTANT_MACROS;__STDC_FORMAT_MACROS;__STDC_LIMIT_MACROS;_HAS_EXCEPTIONS=0;CMAKE_INTDIR="Debug";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;_DEBUG;_CRT_SECURE_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;_CRT_NONSTDC_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;_SCL_SECURE_NO_DEPRECATE;_SCL_SECURE_NO_WARNINGS;__STDC_CONSTANT_MACROS;__STDC_FORMAT_MACROS;__STDC_LIMIT_MACROS;_HAS_EXCEPTIONS=0;CMAKE_INTDIR=\"Debug\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>\SwiftShader\build\VisualStudio2013\lib\Target\X86;\SwiftShader\src\LLVM\lib\Target\X86;\SwiftShader\build\VisualStudio2013\include;\SwiftShader\src\LLVM\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>\SwiftShader\build\VisualStudio2013\lib\Target\X86;\SwiftShader\src\LLVM\lib\Target\X86;\SwiftShader\build\VisualStudio2013\include;\SwiftShader\src\LLVM\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <AdditionalOptions> /EHs-c- -w14062 %(AdditionalOptions)</AdditionalOptions>
      <AdditionalIncludeDirectories>\SwiftShader\build\VisualStudio2013\lib\Target\X86;\SwiftShader\src\LLVM\lib\Target\X86;\SwiftShader\build\VisualStudio2013\include;\SwiftShader\src\LLVM\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>Release/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <DisableSpecificWarnings>4146;4180;4244;4267;4345;4351;4355;4503;4624;4800;4291</DisableSpecificWarnings>
      <ExceptionHandling>
      </ExceptionHandling>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <RuntimeTypeInfo>false</RuntimeTypeInfo>
      <TreatSpecificWarningsAsErrors>4238</TreatSpecificWarningsAsErrors>
      <WarningLevel>Level3</WarningLevel>
      <DebugInformationFormat></DebugInformationFormat>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;_CRT_SECURE_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;_CRT_NONSTDC_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;_SCL_SECURE_NO_DEPRECATE;_SCL_SECURE_NO_WARNINGS;__STDC_CONSTANT_MACROS;__STDC_FORMAT_MACROS;__STDC_LIMIT_MACROS;_HAS_EXCEPTIONS=0;CMAKE_INTDIR="Release";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;_CRT_SECURE_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;_CRT_NONSTDC_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;_SCL_SECURE_NO_DEPRECATE;_SCL_SECURE_NO_WARNINGS;__STDC_CONSTANT_MACROS;__STDC_FORMAT_MACROS;__STDC_LIMIT_MACROS;_HAS_EXCEPTIONS=0;CMAKE_INTDIR=\"Release\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>\SwiftShader\build\VisualStudio2013\lib\Target\X86;\SwiftShader\src\LLVM\lib\Target\X86;\SwiftShader\build\VisualStudio2013\include;\SwiftShader\src\LLVM\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>\SwiftShader\build\VisualStudio2013\lib\Target\X86;\SwiftShader\src\LLVM\lib\Target\X86;\SwiftShader\build\VisualStudio2013\include;\SwiftShader\src\LLVM\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">
    <ClCompile>
      <AdditionalOptions> /EHs-c- -w14062 %(AdditionalOptions)</AdditionalOptions>
      <AdditionalIncludeDirectories>\SwiftShader\build\VisualStudio2013\lib\Target\X86;\SwiftShader\src\LLVM\lib\Target\X86;\SwiftShader\build\VisualStudio2013\include;\SwiftShader\src\LLVM\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>MinSizeRel/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <DisableSpecificWarnings>4146;4180;4244;4267;4345;4351;4355;4503;4624;4800;4291</DisableSpecificWarnings>
      <ExceptionHandling>
      </ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <Optimization>MinSpace</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <RuntimeTypeInfo>false</RuntimeTypeInfo>
      <TreatSpecificWarningsAsErrors>4238</TreatSpecificWarningsAsErrors>
      <WarningLevel>Level3</WarningLevel>
      <DebugInformationFormat></DebugInformationFormat>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;_CRT_SECURE_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;_CRT_NONSTDC_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;_SCL_SECURE_NO_DEPRECATE;_SCL_SECURE_NO_WARNINGS;__STDC_CONSTANT_MACROS;__STDC_FORMAT_MACROS;__STDC_LIMIT_MACROS;_HAS_EXCEPTIONS=0;CMAKE_INTDIR="MinSizeRel";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;_CRT_SECURE_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;_CRT_NONSTDC_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;_SCL_SECURE_NO_DEPRECATE;_SCL_SECURE_NO_WARNINGS;__STDC_CONSTANT_MACROS;__STDC_FORMAT_MACROS;__STDC_LIMIT_MACROS;_HAS_EXCEPTIONS=0;CMAKE_INTDIR=\"MinSizeRel\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>\SwiftShader\build\VisualStudio2013\lib\Target\X86;\SwiftShader\src\LLVM\lib\Target\X86;\SwiftShader\build\VisualStudio2013\include;\SwiftShader\src\LLVM\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>\SwiftShader\build\VisualStudio2013\lib\Target\X86;\SwiftShader\src\LLVM\lib\Target\X86;\SwiftShader\build\VisualStudio2013\include;\SwiftShader\src\LLVM\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">
    <ClCompile>
      <AdditionalOptions> /EHs-c- -w14062 %(AdditionalOptions)</AdditionalOptions>
      <AdditionalIncludeDirectories>\SwiftShader\build\VisualStudio2013\lib\Target\X86;\SwiftShader\src\LLVM\lib\Target\X86;\SwiftShader\build\VisualStudio2013\include;\SwiftShader\src\LLVM\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>RelWithDebInfo/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <DisableSpecificWarnings>4146;4180;4244;4267;4345;4351;4355;4503;4624;4800;4291</DisableSpecificWarnings>
      <ExceptionHandling>
      </ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <RuntimeTypeInfo>false</RuntimeTypeInfo>
      <TreatSpecificWarningsAsErrors>4238</TreatSpecificWarningsAsErrors>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;_CRT_SECURE_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;_CRT_NONSTDC_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;_SCL_SECURE_NO_DEPRECATE;_SCL_SECURE_NO_WARNINGS;__STDC_CONSTANT_MACROS;__STDC_FORMAT_MACROS;__STDC_LIMIT_MACROS;_HAS_EXCEPTIONS=0;CMAKE_INTDIR="RelWithDebInfo";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;_CRT_SECURE_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;_CRT_NONSTDC_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;_SCL_SECURE_NO_DEPRECATE;_SCL_SECURE_NO_WARNINGS;__STDC_CONSTANT_MACROS;__STDC_FORMAT_MACROS;__STDC_LIMIT_MACROS;_HAS_EXCEPTIONS=0;CMAKE_INTDIR=\"RelWithDebInfo\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>\SwiftShader\build\VisualStudio2013\lib\Target\X86;\SwiftShader\src\LLVM\lib\Target\X86;\SwiftShader\build\VisualStudio2013\include;\SwiftShader\src\LLVM\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>\SwiftShader\build\VisualStudio2013\lib\Target\X86;\SwiftShader\src\LLVM\lib\Target\X86;\SwiftShader\build\VisualStudio2013\include;\SwiftShader\src\LLVM\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="\SwiftShader\src\LLVM\lib\Target\X86\CMakeLists.txt">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Building Custom Rule /SwiftShader/src/LLVM/lib/Target/X86/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -H/SwiftShader/src/LLVM -B/SwiftShader/build/VisualStudio2013 --check-stamp-file \SwiftShader\build\VisualStudio2013\lib\Target\X86\CMakeFiles\generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">/SwiftShader/src/LLVM/lib/Target/X86/CMakeLists.txt;\SwiftShader\src\LLVM\lib\Target\X86\CMakeLists.txt;\SwiftShader\src\LLVM\lib\Target\X86\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Building Custom Rule /SwiftShader/src/LLVM/lib/Target/X86/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -H/SwiftShader/src/LLVM -B/SwiftShader/build/VisualStudio2013 --check-stamp-file \SwiftShader\build\VisualStudio2013\lib\Target\X86\CMakeFiles\generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">/SwiftShader/src/LLVM/lib/Target/X86/CMakeLists.txt;\SwiftShader\src\LLVM\lib\Target\X86\CMakeLists.txt;\SwiftShader\src\LLVM\lib\Target\X86\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Building Custom Rule /SwiftShader/src/LLVM/lib/Target/X86/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -H/SwiftShader/src/LLVM -B/SwiftShader/build/VisualStudio2013 --check-stamp-file \SwiftShader\build\VisualStudio2013\lib\Target\X86\CMakeFiles\generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">/SwiftShader/src/LLVM/lib/Target/X86/CMakeLists.txt;\SwiftShader\src\LLVM\lib\Target\X86\CMakeLists.txt;\SwiftShader\src\LLVM\lib\Target\X86\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Building Custom Rule /SwiftShader/src/LLVM/lib/Target/X86/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -H/SwiftShader/src/LLVM -B/SwiftShader/build/VisualStudio2013 --check-stamp-file \SwiftShader\build\VisualStudio2013\lib\Target\X86\CMakeFiles\generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">/SwiftShader/src/LLVM/lib/Target/X86/CMakeLists.txt;\SwiftShader\src\LLVM\lib\Target\X86\CMakeLists.txt;\SwiftShader\src\LLVM\lib\Target\X86\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="..\..\..\CMakeFiles\b99a5b2a5ae5c476e282fbdf0a13fa49\X86GenRegisterInfo.inc.tmp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Building X86GenRegisterInfo.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
..\..\..\bin\Debug\llvm-tblgen.exe -gen-register-info -I /SwiftShader/src/LLVM/lib/Target/X86 -I /SwiftShader/src/LLVM/lib/Target -I /SwiftShader/src/LLVM/include /SwiftShader/src/LLVM/lib/Target/X86/X86.td -o /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenRegisterInfo.inc.tmp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenRegisterInfo.inc.tmp.rule;\SwiftShader\build\VisualStudio2013\bin\Debug\llvm-tblgen.exe;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;\SwiftShader\src\LLVM\lib\Target\X86\X86CallingConv.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Instr3DNow.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrArithmetic.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrAVX512.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCMovSetCC.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCompiler.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrControl.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrExtension.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFMA.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFormats.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFPStack.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFragmentsSIMD.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrMMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrShiftRotate.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSSE.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSVM.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSystem.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrTSX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrVMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrXOP.td;\SwiftShader\src\LLVM\lib\Target\X86\X86RegisterInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedHaswell.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedSandyBridge.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Schedule.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleAtom.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleSLM.td;\SwiftShader\src\LLVM\include\llvm\CodeGen\ValueTypes.td;\SwiftShader\src\LLVM\include\llvm\IR\Intrinsics.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsAArch64.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsARM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsHexagon.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsMips.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsNVVM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsPowerPC.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsR600.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsX86.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsXCore.td;\SwiftShader\src\LLVM\include\llvm\Option\OptParser.td;\SwiftShader\src\LLVM\include\llvm\Target\Target.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetCallingConv.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetItinerary.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSchedule.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSelectionDAG.td;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenRegisterInfo.inc.tmp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Building X86GenRegisterInfo.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
..\..\..\bin\Release\llvm-tblgen.exe -gen-register-info -I /SwiftShader/src/LLVM/lib/Target/X86 -I /SwiftShader/src/LLVM/lib/Target -I /SwiftShader/src/LLVM/include /SwiftShader/src/LLVM/lib/Target/X86/X86.td -o /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenRegisterInfo.inc.tmp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenRegisterInfo.inc.tmp.rule;\SwiftShader\build\VisualStudio2013\bin\Release\llvm-tblgen.exe;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;\SwiftShader\src\LLVM\lib\Target\X86\X86CallingConv.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Instr3DNow.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrArithmetic.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrAVX512.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCMovSetCC.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCompiler.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrControl.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrExtension.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFMA.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFormats.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFPStack.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFragmentsSIMD.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrMMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrShiftRotate.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSSE.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSVM.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSystem.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrTSX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrVMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrXOP.td;\SwiftShader\src\LLVM\lib\Target\X86\X86RegisterInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedHaswell.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedSandyBridge.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Schedule.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleAtom.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleSLM.td;\SwiftShader\src\LLVM\include\llvm\CodeGen\ValueTypes.td;\SwiftShader\src\LLVM\include\llvm\IR\Intrinsics.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsAArch64.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsARM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsHexagon.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsMips.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsNVVM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsPowerPC.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsR600.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsX86.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsXCore.td;\SwiftShader\src\LLVM\include\llvm\Option\OptParser.td;\SwiftShader\src\LLVM\include\llvm\Target\Target.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetCallingConv.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetItinerary.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSchedule.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSelectionDAG.td;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenRegisterInfo.inc.tmp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Building X86GenRegisterInfo.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
..\..\..\bin\MinSizeRel\llvm-tblgen.exe -gen-register-info -I /SwiftShader/src/LLVM/lib/Target/X86 -I /SwiftShader/src/LLVM/lib/Target -I /SwiftShader/src/LLVM/include /SwiftShader/src/LLVM/lib/Target/X86/X86.td -o /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenRegisterInfo.inc.tmp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenRegisterInfo.inc.tmp.rule;\SwiftShader\build\VisualStudio2013\bin\MinSizeRel\llvm-tblgen.exe;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;\SwiftShader\src\LLVM\lib\Target\X86\X86CallingConv.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Instr3DNow.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrArithmetic.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrAVX512.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCMovSetCC.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCompiler.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrControl.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrExtension.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFMA.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFormats.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFPStack.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFragmentsSIMD.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrMMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrShiftRotate.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSSE.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSVM.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSystem.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrTSX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrVMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrXOP.td;\SwiftShader\src\LLVM\lib\Target\X86\X86RegisterInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedHaswell.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedSandyBridge.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Schedule.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleAtom.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleSLM.td;\SwiftShader\src\LLVM\include\llvm\CodeGen\ValueTypes.td;\SwiftShader\src\LLVM\include\llvm\IR\Intrinsics.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsAArch64.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsARM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsHexagon.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsMips.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsNVVM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsPowerPC.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsR600.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsX86.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsXCore.td;\SwiftShader\src\LLVM\include\llvm\Option\OptParser.td;\SwiftShader\src\LLVM\include\llvm\Target\Target.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetCallingConv.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetItinerary.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSchedule.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSelectionDAG.td;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenRegisterInfo.inc.tmp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Building X86GenRegisterInfo.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
..\..\..\bin\RelWithDebInfo\llvm-tblgen.exe -gen-register-info -I /SwiftShader/src/LLVM/lib/Target/X86 -I /SwiftShader/src/LLVM/lib/Target -I /SwiftShader/src/LLVM/include /SwiftShader/src/LLVM/lib/Target/X86/X86.td -o /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenRegisterInfo.inc.tmp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenRegisterInfo.inc.tmp.rule;\SwiftShader\build\VisualStudio2013\bin\RelWithDebInfo\llvm-tblgen.exe;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;\SwiftShader\src\LLVM\lib\Target\X86\X86CallingConv.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Instr3DNow.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrArithmetic.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrAVX512.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCMovSetCC.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCompiler.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrControl.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrExtension.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFMA.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFormats.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFPStack.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFragmentsSIMD.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrMMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrShiftRotate.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSSE.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSVM.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSystem.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrTSX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrVMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrXOP.td;\SwiftShader\src\LLVM\lib\Target\X86\X86RegisterInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedHaswell.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedSandyBridge.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Schedule.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleAtom.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleSLM.td;\SwiftShader\src\LLVM\include\llvm\CodeGen\ValueTypes.td;\SwiftShader\src\LLVM\include\llvm\IR\Intrinsics.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsAArch64.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsARM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsHexagon.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsMips.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsNVVM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsPowerPC.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsR600.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsX86.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsXCore.td;\SwiftShader\src\LLVM\include\llvm\Option\OptParser.td;\SwiftShader\src\LLVM\include\llvm\Target\Target.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetCallingConv.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetItinerary.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSchedule.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSelectionDAG.td;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenRegisterInfo.inc.tmp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="..\..\..\CMakeFiles\b99a5b2a5ae5c476e282fbdf0a13fa49\X86GenRegisterInfo.inc.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_if_different /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenRegisterInfo.inc.tmp /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenRegisterInfo.inc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenRegisterInfo.inc.rule;\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenRegisterInfo.inc.tmp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenRegisterInfo.inc</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_if_different /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenRegisterInfo.inc.tmp /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenRegisterInfo.inc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenRegisterInfo.inc.rule;\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenRegisterInfo.inc.tmp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenRegisterInfo.inc</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_if_different /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenRegisterInfo.inc.tmp /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenRegisterInfo.inc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenRegisterInfo.inc.rule;\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenRegisterInfo.inc.tmp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenRegisterInfo.inc</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_if_different /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenRegisterInfo.inc.tmp /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenRegisterInfo.inc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenRegisterInfo.inc.rule;\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenRegisterInfo.inc.tmp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenRegisterInfo.inc</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="..\..\..\CMakeFiles\b99a5b2a5ae5c476e282fbdf0a13fa49\X86GenDisassemblerTables.inc.tmp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Building X86GenDisassemblerTables.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
..\..\..\bin\Debug\llvm-tblgen.exe -gen-disassembler -I /SwiftShader/src/LLVM/lib/Target/X86 -I /SwiftShader/src/LLVM/lib/Target -I /SwiftShader/src/LLVM/include /SwiftShader/src/LLVM/lib/Target/X86/X86.td -o /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenDisassemblerTables.inc.tmp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenDisassemblerTables.inc.tmp.rule;\SwiftShader\build\VisualStudio2013\bin\Debug\llvm-tblgen.exe;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;\SwiftShader\src\LLVM\lib\Target\X86\X86CallingConv.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Instr3DNow.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrArithmetic.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrAVX512.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCMovSetCC.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCompiler.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrControl.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrExtension.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFMA.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFormats.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFPStack.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFragmentsSIMD.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrMMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrShiftRotate.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSSE.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSVM.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSystem.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrTSX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrVMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrXOP.td;\SwiftShader\src\LLVM\lib\Target\X86\X86RegisterInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedHaswell.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedSandyBridge.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Schedule.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleAtom.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleSLM.td;\SwiftShader\src\LLVM\include\llvm\CodeGen\ValueTypes.td;\SwiftShader\src\LLVM\include\llvm\IR\Intrinsics.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsAArch64.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsARM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsHexagon.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsMips.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsNVVM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsPowerPC.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsR600.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsX86.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsXCore.td;\SwiftShader\src\LLVM\include\llvm\Option\OptParser.td;\SwiftShader\src\LLVM\include\llvm\Target\Target.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetCallingConv.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetItinerary.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSchedule.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSelectionDAG.td;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenDisassemblerTables.inc.tmp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Building X86GenDisassemblerTables.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
..\..\..\bin\Release\llvm-tblgen.exe -gen-disassembler -I /SwiftShader/src/LLVM/lib/Target/X86 -I /SwiftShader/src/LLVM/lib/Target -I /SwiftShader/src/LLVM/include /SwiftShader/src/LLVM/lib/Target/X86/X86.td -o /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenDisassemblerTables.inc.tmp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenDisassemblerTables.inc.tmp.rule;\SwiftShader\build\VisualStudio2013\bin\Release\llvm-tblgen.exe;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;\SwiftShader\src\LLVM\lib\Target\X86\X86CallingConv.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Instr3DNow.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrArithmetic.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrAVX512.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCMovSetCC.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCompiler.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrControl.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrExtension.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFMA.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFormats.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFPStack.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFragmentsSIMD.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrMMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrShiftRotate.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSSE.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSVM.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSystem.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrTSX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrVMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrXOP.td;\SwiftShader\src\LLVM\lib\Target\X86\X86RegisterInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedHaswell.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedSandyBridge.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Schedule.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleAtom.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleSLM.td;\SwiftShader\src\LLVM\include\llvm\CodeGen\ValueTypes.td;\SwiftShader\src\LLVM\include\llvm\IR\Intrinsics.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsAArch64.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsARM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsHexagon.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsMips.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsNVVM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsPowerPC.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsR600.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsX86.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsXCore.td;\SwiftShader\src\LLVM\include\llvm\Option\OptParser.td;\SwiftShader\src\LLVM\include\llvm\Target\Target.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetCallingConv.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetItinerary.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSchedule.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSelectionDAG.td;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenDisassemblerTables.inc.tmp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Building X86GenDisassemblerTables.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
..\..\..\bin\MinSizeRel\llvm-tblgen.exe -gen-disassembler -I /SwiftShader/src/LLVM/lib/Target/X86 -I /SwiftShader/src/LLVM/lib/Target -I /SwiftShader/src/LLVM/include /SwiftShader/src/LLVM/lib/Target/X86/X86.td -o /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenDisassemblerTables.inc.tmp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenDisassemblerTables.inc.tmp.rule;\SwiftShader\build\VisualStudio2013\bin\MinSizeRel\llvm-tblgen.exe;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;\SwiftShader\src\LLVM\lib\Target\X86\X86CallingConv.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Instr3DNow.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrArithmetic.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrAVX512.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCMovSetCC.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCompiler.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrControl.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrExtension.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFMA.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFormats.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFPStack.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFragmentsSIMD.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrMMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrShiftRotate.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSSE.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSVM.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSystem.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrTSX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrVMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrXOP.td;\SwiftShader\src\LLVM\lib\Target\X86\X86RegisterInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedHaswell.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedSandyBridge.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Schedule.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleAtom.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleSLM.td;\SwiftShader\src\LLVM\include\llvm\CodeGen\ValueTypes.td;\SwiftShader\src\LLVM\include\llvm\IR\Intrinsics.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsAArch64.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsARM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsHexagon.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsMips.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsNVVM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsPowerPC.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsR600.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsX86.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsXCore.td;\SwiftShader\src\LLVM\include\llvm\Option\OptParser.td;\SwiftShader\src\LLVM\include\llvm\Target\Target.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetCallingConv.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetItinerary.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSchedule.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSelectionDAG.td;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenDisassemblerTables.inc.tmp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Building X86GenDisassemblerTables.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
..\..\..\bin\RelWithDebInfo\llvm-tblgen.exe -gen-disassembler -I /SwiftShader/src/LLVM/lib/Target/X86 -I /SwiftShader/src/LLVM/lib/Target -I /SwiftShader/src/LLVM/include /SwiftShader/src/LLVM/lib/Target/X86/X86.td -o /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenDisassemblerTables.inc.tmp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenDisassemblerTables.inc.tmp.rule;\SwiftShader\build\VisualStudio2013\bin\RelWithDebInfo\llvm-tblgen.exe;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;\SwiftShader\src\LLVM\lib\Target\X86\X86CallingConv.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Instr3DNow.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrArithmetic.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrAVX512.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCMovSetCC.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCompiler.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrControl.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrExtension.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFMA.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFormats.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFPStack.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFragmentsSIMD.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrMMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrShiftRotate.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSSE.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSVM.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSystem.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrTSX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrVMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrXOP.td;\SwiftShader\src\LLVM\lib\Target\X86\X86RegisterInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedHaswell.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedSandyBridge.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Schedule.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleAtom.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleSLM.td;\SwiftShader\src\LLVM\include\llvm\CodeGen\ValueTypes.td;\SwiftShader\src\LLVM\include\llvm\IR\Intrinsics.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsAArch64.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsARM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsHexagon.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsMips.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsNVVM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsPowerPC.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsR600.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsX86.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsXCore.td;\SwiftShader\src\LLVM\include\llvm\Option\OptParser.td;\SwiftShader\src\LLVM\include\llvm\Target\Target.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetCallingConv.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetItinerary.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSchedule.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSelectionDAG.td;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenDisassemblerTables.inc.tmp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="..\..\..\CMakeFiles\b99a5b2a5ae5c476e282fbdf0a13fa49\X86GenDisassemblerTables.inc.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_if_different /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenDisassemblerTables.inc.tmp /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenDisassemblerTables.inc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenDisassemblerTables.inc.rule;\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenDisassemblerTables.inc.tmp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenDisassemblerTables.inc</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_if_different /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenDisassemblerTables.inc.tmp /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenDisassemblerTables.inc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenDisassemblerTables.inc.rule;\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenDisassemblerTables.inc.tmp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenDisassemblerTables.inc</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_if_different /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenDisassemblerTables.inc.tmp /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenDisassemblerTables.inc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenDisassemblerTables.inc.rule;\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenDisassemblerTables.inc.tmp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenDisassemblerTables.inc</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_if_different /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenDisassemblerTables.inc.tmp /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenDisassemblerTables.inc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenDisassemblerTables.inc.rule;\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenDisassemblerTables.inc.tmp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenDisassemblerTables.inc</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="..\..\..\CMakeFiles\b99a5b2a5ae5c476e282fbdf0a13fa49\X86GenInstrInfo.inc.tmp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Building X86GenInstrInfo.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
..\..\..\bin\Debug\llvm-tblgen.exe -gen-instr-info -I /SwiftShader/src/LLVM/lib/Target/X86 -I /SwiftShader/src/LLVM/lib/Target -I /SwiftShader/src/LLVM/include /SwiftShader/src/LLVM/lib/Target/X86/X86.td -o /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenInstrInfo.inc.tmp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenInstrInfo.inc.tmp.rule;\SwiftShader\build\VisualStudio2013\bin\Debug\llvm-tblgen.exe;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;\SwiftShader\src\LLVM\lib\Target\X86\X86CallingConv.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Instr3DNow.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrArithmetic.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrAVX512.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCMovSetCC.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCompiler.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrControl.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrExtension.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFMA.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFormats.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFPStack.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFragmentsSIMD.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrMMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrShiftRotate.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSSE.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSVM.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSystem.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrTSX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrVMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrXOP.td;\SwiftShader\src\LLVM\lib\Target\X86\X86RegisterInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedHaswell.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedSandyBridge.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Schedule.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleAtom.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleSLM.td;\SwiftShader\src\LLVM\include\llvm\CodeGen\ValueTypes.td;\SwiftShader\src\LLVM\include\llvm\IR\Intrinsics.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsAArch64.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsARM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsHexagon.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsMips.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsNVVM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsPowerPC.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsR600.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsX86.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsXCore.td;\SwiftShader\src\LLVM\include\llvm\Option\OptParser.td;\SwiftShader\src\LLVM\include\llvm\Target\Target.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetCallingConv.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetItinerary.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSchedule.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSelectionDAG.td;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenInstrInfo.inc.tmp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Building X86GenInstrInfo.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
..\..\..\bin\Release\llvm-tblgen.exe -gen-instr-info -I /SwiftShader/src/LLVM/lib/Target/X86 -I /SwiftShader/src/LLVM/lib/Target -I /SwiftShader/src/LLVM/include /SwiftShader/src/LLVM/lib/Target/X86/X86.td -o /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenInstrInfo.inc.tmp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenInstrInfo.inc.tmp.rule;\SwiftShader\build\VisualStudio2013\bin\Release\llvm-tblgen.exe;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;\SwiftShader\src\LLVM\lib\Target\X86\X86CallingConv.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Instr3DNow.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrArithmetic.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrAVX512.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCMovSetCC.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCompiler.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrControl.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrExtension.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFMA.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFormats.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFPStack.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFragmentsSIMD.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrMMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrShiftRotate.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSSE.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSVM.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSystem.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrTSX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrVMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrXOP.td;\SwiftShader\src\LLVM\lib\Target\X86\X86RegisterInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedHaswell.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedSandyBridge.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Schedule.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleAtom.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleSLM.td;\SwiftShader\src\LLVM\include\llvm\CodeGen\ValueTypes.td;\SwiftShader\src\LLVM\include\llvm\IR\Intrinsics.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsAArch64.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsARM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsHexagon.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsMips.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsNVVM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsPowerPC.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsR600.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsX86.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsXCore.td;\SwiftShader\src\LLVM\include\llvm\Option\OptParser.td;\SwiftShader\src\LLVM\include\llvm\Target\Target.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetCallingConv.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetItinerary.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSchedule.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSelectionDAG.td;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenInstrInfo.inc.tmp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Building X86GenInstrInfo.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
..\..\..\bin\MinSizeRel\llvm-tblgen.exe -gen-instr-info -I /SwiftShader/src/LLVM/lib/Target/X86 -I /SwiftShader/src/LLVM/lib/Target -I /SwiftShader/src/LLVM/include /SwiftShader/src/LLVM/lib/Target/X86/X86.td -o /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenInstrInfo.inc.tmp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenInstrInfo.inc.tmp.rule;\SwiftShader\build\VisualStudio2013\bin\MinSizeRel\llvm-tblgen.exe;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;\SwiftShader\src\LLVM\lib\Target\X86\X86CallingConv.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Instr3DNow.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrArithmetic.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrAVX512.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCMovSetCC.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCompiler.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrControl.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrExtension.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFMA.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFormats.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFPStack.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFragmentsSIMD.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrMMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrShiftRotate.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSSE.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSVM.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSystem.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrTSX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrVMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrXOP.td;\SwiftShader\src\LLVM\lib\Target\X86\X86RegisterInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedHaswell.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedSandyBridge.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Schedule.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleAtom.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleSLM.td;\SwiftShader\src\LLVM\include\llvm\CodeGen\ValueTypes.td;\SwiftShader\src\LLVM\include\llvm\IR\Intrinsics.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsAArch64.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsARM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsHexagon.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsMips.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsNVVM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsPowerPC.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsR600.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsX86.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsXCore.td;\SwiftShader\src\LLVM\include\llvm\Option\OptParser.td;\SwiftShader\src\LLVM\include\llvm\Target\Target.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetCallingConv.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetItinerary.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSchedule.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSelectionDAG.td;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenInstrInfo.inc.tmp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Building X86GenInstrInfo.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
..\..\..\bin\RelWithDebInfo\llvm-tblgen.exe -gen-instr-info -I /SwiftShader/src/LLVM/lib/Target/X86 -I /SwiftShader/src/LLVM/lib/Target -I /SwiftShader/src/LLVM/include /SwiftShader/src/LLVM/lib/Target/X86/X86.td -o /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenInstrInfo.inc.tmp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenInstrInfo.inc.tmp.rule;\SwiftShader\build\VisualStudio2013\bin\RelWithDebInfo\llvm-tblgen.exe;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;\SwiftShader\src\LLVM\lib\Target\X86\X86CallingConv.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Instr3DNow.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrArithmetic.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrAVX512.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCMovSetCC.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCompiler.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrControl.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrExtension.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFMA.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFormats.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFPStack.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFragmentsSIMD.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrMMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrShiftRotate.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSSE.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSVM.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSystem.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrTSX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrVMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrXOP.td;\SwiftShader\src\LLVM\lib\Target\X86\X86RegisterInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedHaswell.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedSandyBridge.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Schedule.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleAtom.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleSLM.td;\SwiftShader\src\LLVM\include\llvm\CodeGen\ValueTypes.td;\SwiftShader\src\LLVM\include\llvm\IR\Intrinsics.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsAArch64.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsARM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsHexagon.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsMips.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsNVVM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsPowerPC.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsR600.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsX86.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsXCore.td;\SwiftShader\src\LLVM\include\llvm\Option\OptParser.td;\SwiftShader\src\LLVM\include\llvm\Target\Target.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetCallingConv.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetItinerary.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSchedule.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSelectionDAG.td;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenInstrInfo.inc.tmp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="..\..\..\CMakeFiles\b99a5b2a5ae5c476e282fbdf0a13fa49\X86GenInstrInfo.inc.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_if_different /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenInstrInfo.inc.tmp /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenInstrInfo.inc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenInstrInfo.inc.rule;\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenInstrInfo.inc.tmp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenInstrInfo.inc</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_if_different /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenInstrInfo.inc.tmp /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenInstrInfo.inc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenInstrInfo.inc.rule;\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenInstrInfo.inc.tmp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenInstrInfo.inc</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_if_different /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenInstrInfo.inc.tmp /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenInstrInfo.inc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenInstrInfo.inc.rule;\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenInstrInfo.inc.tmp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenInstrInfo.inc</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_if_different /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenInstrInfo.inc.tmp /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenInstrInfo.inc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenInstrInfo.inc.rule;\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenInstrInfo.inc.tmp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenInstrInfo.inc</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="..\..\..\CMakeFiles\b99a5b2a5ae5c476e282fbdf0a13fa49\X86GenAsmWriter.inc.tmp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Building X86GenAsmWriter.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
..\..\..\bin\Debug\llvm-tblgen.exe -gen-asm-writer -I /SwiftShader/src/LLVM/lib/Target/X86 -I /SwiftShader/src/LLVM/lib/Target -I /SwiftShader/src/LLVM/include /SwiftShader/src/LLVM/lib/Target/X86/X86.td -o /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenAsmWriter.inc.tmp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenAsmWriter.inc.tmp.rule;\SwiftShader\build\VisualStudio2013\bin\Debug\llvm-tblgen.exe;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;\SwiftShader\src\LLVM\lib\Target\X86\X86CallingConv.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Instr3DNow.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrArithmetic.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrAVX512.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCMovSetCC.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCompiler.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrControl.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrExtension.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFMA.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFormats.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFPStack.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFragmentsSIMD.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrMMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrShiftRotate.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSSE.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSVM.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSystem.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrTSX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrVMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrXOP.td;\SwiftShader\src\LLVM\lib\Target\X86\X86RegisterInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedHaswell.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedSandyBridge.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Schedule.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleAtom.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleSLM.td;\SwiftShader\src\LLVM\include\llvm\CodeGen\ValueTypes.td;\SwiftShader\src\LLVM\include\llvm\IR\Intrinsics.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsAArch64.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsARM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsHexagon.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsMips.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsNVVM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsPowerPC.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsR600.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsX86.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsXCore.td;\SwiftShader\src\LLVM\include\llvm\Option\OptParser.td;\SwiftShader\src\LLVM\include\llvm\Target\Target.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetCallingConv.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetItinerary.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSchedule.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSelectionDAG.td;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenAsmWriter.inc.tmp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Building X86GenAsmWriter.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
..\..\..\bin\Release\llvm-tblgen.exe -gen-asm-writer -I /SwiftShader/src/LLVM/lib/Target/X86 -I /SwiftShader/src/LLVM/lib/Target -I /SwiftShader/src/LLVM/include /SwiftShader/src/LLVM/lib/Target/X86/X86.td -o /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenAsmWriter.inc.tmp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenAsmWriter.inc.tmp.rule;\SwiftShader\build\VisualStudio2013\bin\Release\llvm-tblgen.exe;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;\SwiftShader\src\LLVM\lib\Target\X86\X86CallingConv.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Instr3DNow.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrArithmetic.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrAVX512.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCMovSetCC.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCompiler.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrControl.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrExtension.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFMA.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFormats.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFPStack.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFragmentsSIMD.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrMMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrShiftRotate.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSSE.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSVM.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSystem.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrTSX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrVMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrXOP.td;\SwiftShader\src\LLVM\lib\Target\X86\X86RegisterInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedHaswell.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedSandyBridge.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Schedule.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleAtom.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleSLM.td;\SwiftShader\src\LLVM\include\llvm\CodeGen\ValueTypes.td;\SwiftShader\src\LLVM\include\llvm\IR\Intrinsics.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsAArch64.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsARM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsHexagon.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsMips.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsNVVM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsPowerPC.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsR600.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsX86.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsXCore.td;\SwiftShader\src\LLVM\include\llvm\Option\OptParser.td;\SwiftShader\src\LLVM\include\llvm\Target\Target.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetCallingConv.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetItinerary.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSchedule.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSelectionDAG.td;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenAsmWriter.inc.tmp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Building X86GenAsmWriter.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
..\..\..\bin\MinSizeRel\llvm-tblgen.exe -gen-asm-writer -I /SwiftShader/src/LLVM/lib/Target/X86 -I /SwiftShader/src/LLVM/lib/Target -I /SwiftShader/src/LLVM/include /SwiftShader/src/LLVM/lib/Target/X86/X86.td -o /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenAsmWriter.inc.tmp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenAsmWriter.inc.tmp.rule;\SwiftShader\build\VisualStudio2013\bin\MinSizeRel\llvm-tblgen.exe;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;\SwiftShader\src\LLVM\lib\Target\X86\X86CallingConv.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Instr3DNow.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrArithmetic.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrAVX512.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCMovSetCC.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCompiler.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrControl.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrExtension.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFMA.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFormats.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFPStack.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFragmentsSIMD.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrMMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrShiftRotate.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSSE.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSVM.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSystem.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrTSX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrVMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrXOP.td;\SwiftShader\src\LLVM\lib\Target\X86\X86RegisterInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedHaswell.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedSandyBridge.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Schedule.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleAtom.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleSLM.td;\SwiftShader\src\LLVM\include\llvm\CodeGen\ValueTypes.td;\SwiftShader\src\LLVM\include\llvm\IR\Intrinsics.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsAArch64.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsARM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsHexagon.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsMips.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsNVVM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsPowerPC.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsR600.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsX86.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsXCore.td;\SwiftShader\src\LLVM\include\llvm\Option\OptParser.td;\SwiftShader\src\LLVM\include\llvm\Target\Target.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetCallingConv.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetItinerary.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSchedule.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSelectionDAG.td;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenAsmWriter.inc.tmp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Building X86GenAsmWriter.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
..\..\..\bin\RelWithDebInfo\llvm-tblgen.exe -gen-asm-writer -I /SwiftShader/src/LLVM/lib/Target/X86 -I /SwiftShader/src/LLVM/lib/Target -I /SwiftShader/src/LLVM/include /SwiftShader/src/LLVM/lib/Target/X86/X86.td -o /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenAsmWriter.inc.tmp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenAsmWriter.inc.tmp.rule;\SwiftShader\build\VisualStudio2013\bin\RelWithDebInfo\llvm-tblgen.exe;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;\SwiftShader\src\LLVM\lib\Target\X86\X86CallingConv.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Instr3DNow.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrArithmetic.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrAVX512.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCMovSetCC.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCompiler.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrControl.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrExtension.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFMA.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFormats.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFPStack.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFragmentsSIMD.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrMMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrShiftRotate.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSSE.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSVM.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSystem.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrTSX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrVMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrXOP.td;\SwiftShader\src\LLVM\lib\Target\X86\X86RegisterInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedHaswell.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedSandyBridge.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Schedule.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleAtom.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleSLM.td;\SwiftShader\src\LLVM\include\llvm\CodeGen\ValueTypes.td;\SwiftShader\src\LLVM\include\llvm\IR\Intrinsics.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsAArch64.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsARM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsHexagon.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsMips.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsNVVM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsPowerPC.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsR600.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsX86.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsXCore.td;\SwiftShader\src\LLVM\include\llvm\Option\OptParser.td;\SwiftShader\src\LLVM\include\llvm\Target\Target.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetCallingConv.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetItinerary.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSchedule.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSelectionDAG.td;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenAsmWriter.inc.tmp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="..\..\..\CMakeFiles\b99a5b2a5ae5c476e282fbdf0a13fa49\X86GenAsmWriter.inc.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_if_different /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenAsmWriter.inc.tmp /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenAsmWriter.inc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenAsmWriter.inc.rule;\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenAsmWriter.inc.tmp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenAsmWriter.inc</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_if_different /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenAsmWriter.inc.tmp /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenAsmWriter.inc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenAsmWriter.inc.rule;\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenAsmWriter.inc.tmp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenAsmWriter.inc</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_if_different /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenAsmWriter.inc.tmp /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenAsmWriter.inc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenAsmWriter.inc.rule;\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenAsmWriter.inc.tmp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenAsmWriter.inc</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_if_different /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenAsmWriter.inc.tmp /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenAsmWriter.inc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenAsmWriter.inc.rule;\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenAsmWriter.inc.tmp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenAsmWriter.inc</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="..\..\..\CMakeFiles\b99a5b2a5ae5c476e282fbdf0a13fa49\X86GenAsmWriter1.inc.tmp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Building X86GenAsmWriter1.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
..\..\..\bin\Debug\llvm-tblgen.exe -gen-asm-writer -asmwriternum=1 -I /SwiftShader/src/LLVM/lib/Target/X86 -I /SwiftShader/src/LLVM/lib/Target -I /SwiftShader/src/LLVM/include /SwiftShader/src/LLVM/lib/Target/X86/X86.td -o /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenAsmWriter1.inc.tmp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenAsmWriter1.inc.tmp.rule;\SwiftShader\build\VisualStudio2013\bin\Debug\llvm-tblgen.exe;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;\SwiftShader\src\LLVM\lib\Target\X86\X86CallingConv.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Instr3DNow.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrArithmetic.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrAVX512.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCMovSetCC.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCompiler.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrControl.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrExtension.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFMA.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFormats.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFPStack.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFragmentsSIMD.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrMMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrShiftRotate.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSSE.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSVM.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSystem.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrTSX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrVMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrXOP.td;\SwiftShader\src\LLVM\lib\Target\X86\X86RegisterInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedHaswell.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedSandyBridge.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Schedule.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleAtom.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleSLM.td;\SwiftShader\src\LLVM\include\llvm\CodeGen\ValueTypes.td;\SwiftShader\src\LLVM\include\llvm\IR\Intrinsics.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsAArch64.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsARM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsHexagon.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsMips.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsNVVM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsPowerPC.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsR600.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsX86.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsXCore.td;\SwiftShader\src\LLVM\include\llvm\Option\OptParser.td;\SwiftShader\src\LLVM\include\llvm\Target\Target.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetCallingConv.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetItinerary.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSchedule.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSelectionDAG.td;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenAsmWriter1.inc.tmp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Building X86GenAsmWriter1.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
..\..\..\bin\Release\llvm-tblgen.exe -gen-asm-writer -asmwriternum=1 -I /SwiftShader/src/LLVM/lib/Target/X86 -I /SwiftShader/src/LLVM/lib/Target -I /SwiftShader/src/LLVM/include /SwiftShader/src/LLVM/lib/Target/X86/X86.td -o /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenAsmWriter1.inc.tmp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenAsmWriter1.inc.tmp.rule;\SwiftShader\build\VisualStudio2013\bin\Release\llvm-tblgen.exe;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;\SwiftShader\src\LLVM\lib\Target\X86\X86CallingConv.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Instr3DNow.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrArithmetic.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrAVX512.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCMovSetCC.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCompiler.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrControl.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrExtension.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFMA.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFormats.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFPStack.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFragmentsSIMD.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrMMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrShiftRotate.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSSE.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSVM.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSystem.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrTSX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrVMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrXOP.td;\SwiftShader\src\LLVM\lib\Target\X86\X86RegisterInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedHaswell.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedSandyBridge.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Schedule.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleAtom.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleSLM.td;\SwiftShader\src\LLVM\include\llvm\CodeGen\ValueTypes.td;\SwiftShader\src\LLVM\include\llvm\IR\Intrinsics.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsAArch64.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsARM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsHexagon.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsMips.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsNVVM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsPowerPC.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsR600.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsX86.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsXCore.td;\SwiftShader\src\LLVM\include\llvm\Option\OptParser.td;\SwiftShader\src\LLVM\include\llvm\Target\Target.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetCallingConv.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetItinerary.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSchedule.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSelectionDAG.td;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenAsmWriter1.inc.tmp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Building X86GenAsmWriter1.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
..\..\..\bin\MinSizeRel\llvm-tblgen.exe -gen-asm-writer -asmwriternum=1 -I /SwiftShader/src/LLVM/lib/Target/X86 -I /SwiftShader/src/LLVM/lib/Target -I /SwiftShader/src/LLVM/include /SwiftShader/src/LLVM/lib/Target/X86/X86.td -o /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenAsmWriter1.inc.tmp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenAsmWriter1.inc.tmp.rule;\SwiftShader\build\VisualStudio2013\bin\MinSizeRel\llvm-tblgen.exe;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;\SwiftShader\src\LLVM\lib\Target\X86\X86CallingConv.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Instr3DNow.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrArithmetic.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrAVX512.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCMovSetCC.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCompiler.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrControl.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrExtension.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFMA.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFormats.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFPStack.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFragmentsSIMD.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrMMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrShiftRotate.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSSE.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSVM.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSystem.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrTSX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrVMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrXOP.td;\SwiftShader\src\LLVM\lib\Target\X86\X86RegisterInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedHaswell.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedSandyBridge.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Schedule.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleAtom.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleSLM.td;\SwiftShader\src\LLVM\include\llvm\CodeGen\ValueTypes.td;\SwiftShader\src\LLVM\include\llvm\IR\Intrinsics.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsAArch64.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsARM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsHexagon.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsMips.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsNVVM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsPowerPC.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsR600.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsX86.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsXCore.td;\SwiftShader\src\LLVM\include\llvm\Option\OptParser.td;\SwiftShader\src\LLVM\include\llvm\Target\Target.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetCallingConv.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetItinerary.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSchedule.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSelectionDAG.td;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenAsmWriter1.inc.tmp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Building X86GenAsmWriter1.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
..\..\..\bin\RelWithDebInfo\llvm-tblgen.exe -gen-asm-writer -asmwriternum=1 -I /SwiftShader/src/LLVM/lib/Target/X86 -I /SwiftShader/src/LLVM/lib/Target -I /SwiftShader/src/LLVM/include /SwiftShader/src/LLVM/lib/Target/X86/X86.td -o /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenAsmWriter1.inc.tmp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenAsmWriter1.inc.tmp.rule;\SwiftShader\build\VisualStudio2013\bin\RelWithDebInfo\llvm-tblgen.exe;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;\SwiftShader\src\LLVM\lib\Target\X86\X86CallingConv.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Instr3DNow.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrArithmetic.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrAVX512.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCMovSetCC.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCompiler.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrControl.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrExtension.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFMA.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFormats.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFPStack.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFragmentsSIMD.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrMMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrShiftRotate.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSSE.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSVM.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSystem.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrTSX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrVMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrXOP.td;\SwiftShader\src\LLVM\lib\Target\X86\X86RegisterInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedHaswell.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedSandyBridge.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Schedule.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleAtom.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleSLM.td;\SwiftShader\src\LLVM\include\llvm\CodeGen\ValueTypes.td;\SwiftShader\src\LLVM\include\llvm\IR\Intrinsics.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsAArch64.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsARM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsHexagon.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsMips.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsNVVM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsPowerPC.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsR600.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsX86.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsXCore.td;\SwiftShader\src\LLVM\include\llvm\Option\OptParser.td;\SwiftShader\src\LLVM\include\llvm\Target\Target.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetCallingConv.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetItinerary.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSchedule.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSelectionDAG.td;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenAsmWriter1.inc.tmp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="..\..\..\CMakeFiles\b99a5b2a5ae5c476e282fbdf0a13fa49\X86GenAsmWriter1.inc.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_if_different /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenAsmWriter1.inc.tmp /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenAsmWriter1.inc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenAsmWriter1.inc.rule;\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenAsmWriter1.inc.tmp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenAsmWriter1.inc</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_if_different /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenAsmWriter1.inc.tmp /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenAsmWriter1.inc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenAsmWriter1.inc.rule;\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenAsmWriter1.inc.tmp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenAsmWriter1.inc</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_if_different /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenAsmWriter1.inc.tmp /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenAsmWriter1.inc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenAsmWriter1.inc.rule;\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenAsmWriter1.inc.tmp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenAsmWriter1.inc</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_if_different /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenAsmWriter1.inc.tmp /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenAsmWriter1.inc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenAsmWriter1.inc.rule;\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenAsmWriter1.inc.tmp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenAsmWriter1.inc</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="..\..\..\CMakeFiles\b99a5b2a5ae5c476e282fbdf0a13fa49\X86GenAsmMatcher.inc.tmp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Building X86GenAsmMatcher.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
..\..\..\bin\Debug\llvm-tblgen.exe -gen-asm-matcher -I /SwiftShader/src/LLVM/lib/Target/X86 -I /SwiftShader/src/LLVM/lib/Target -I /SwiftShader/src/LLVM/include /SwiftShader/src/LLVM/lib/Target/X86/X86.td -o /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenAsmMatcher.inc.tmp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenAsmMatcher.inc.tmp.rule;\SwiftShader\build\VisualStudio2013\bin\Debug\llvm-tblgen.exe;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;\SwiftShader\src\LLVM\lib\Target\X86\X86CallingConv.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Instr3DNow.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrArithmetic.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrAVX512.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCMovSetCC.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCompiler.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrControl.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrExtension.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFMA.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFormats.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFPStack.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFragmentsSIMD.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrMMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrShiftRotate.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSSE.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSVM.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSystem.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrTSX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrVMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrXOP.td;\SwiftShader\src\LLVM\lib\Target\X86\X86RegisterInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedHaswell.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedSandyBridge.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Schedule.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleAtom.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleSLM.td;\SwiftShader\src\LLVM\include\llvm\CodeGen\ValueTypes.td;\SwiftShader\src\LLVM\include\llvm\IR\Intrinsics.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsAArch64.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsARM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsHexagon.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsMips.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsNVVM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsPowerPC.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsR600.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsX86.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsXCore.td;\SwiftShader\src\LLVM\include\llvm\Option\OptParser.td;\SwiftShader\src\LLVM\include\llvm\Target\Target.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetCallingConv.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetItinerary.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSchedule.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSelectionDAG.td;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenAsmMatcher.inc.tmp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Building X86GenAsmMatcher.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
..\..\..\bin\Release\llvm-tblgen.exe -gen-asm-matcher -I /SwiftShader/src/LLVM/lib/Target/X86 -I /SwiftShader/src/LLVM/lib/Target -I /SwiftShader/src/LLVM/include /SwiftShader/src/LLVM/lib/Target/X86/X86.td -o /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenAsmMatcher.inc.tmp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenAsmMatcher.inc.tmp.rule;\SwiftShader\build\VisualStudio2013\bin\Release\llvm-tblgen.exe;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;\SwiftShader\src\LLVM\lib\Target\X86\X86CallingConv.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Instr3DNow.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrArithmetic.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrAVX512.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCMovSetCC.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCompiler.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrControl.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrExtension.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFMA.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFormats.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFPStack.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFragmentsSIMD.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrMMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrShiftRotate.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSSE.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSVM.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSystem.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrTSX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrVMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrXOP.td;\SwiftShader\src\LLVM\lib\Target\X86\X86RegisterInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedHaswell.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedSandyBridge.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Schedule.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleAtom.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleSLM.td;\SwiftShader\src\LLVM\include\llvm\CodeGen\ValueTypes.td;\SwiftShader\src\LLVM\include\llvm\IR\Intrinsics.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsAArch64.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsARM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsHexagon.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsMips.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsNVVM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsPowerPC.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsR600.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsX86.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsXCore.td;\SwiftShader\src\LLVM\include\llvm\Option\OptParser.td;\SwiftShader\src\LLVM\include\llvm\Target\Target.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetCallingConv.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetItinerary.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSchedule.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSelectionDAG.td;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenAsmMatcher.inc.tmp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Building X86GenAsmMatcher.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
..\..\..\bin\MinSizeRel\llvm-tblgen.exe -gen-asm-matcher -I /SwiftShader/src/LLVM/lib/Target/X86 -I /SwiftShader/src/LLVM/lib/Target -I /SwiftShader/src/LLVM/include /SwiftShader/src/LLVM/lib/Target/X86/X86.td -o /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenAsmMatcher.inc.tmp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenAsmMatcher.inc.tmp.rule;\SwiftShader\build\VisualStudio2013\bin\MinSizeRel\llvm-tblgen.exe;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;\SwiftShader\src\LLVM\lib\Target\X86\X86CallingConv.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Instr3DNow.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrArithmetic.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrAVX512.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCMovSetCC.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCompiler.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrControl.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrExtension.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFMA.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFormats.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFPStack.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFragmentsSIMD.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrMMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrShiftRotate.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSSE.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSVM.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSystem.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrTSX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrVMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrXOP.td;\SwiftShader\src\LLVM\lib\Target\X86\X86RegisterInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedHaswell.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedSandyBridge.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Schedule.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleAtom.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleSLM.td;\SwiftShader\src\LLVM\include\llvm\CodeGen\ValueTypes.td;\SwiftShader\src\LLVM\include\llvm\IR\Intrinsics.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsAArch64.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsARM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsHexagon.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsMips.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsNVVM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsPowerPC.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsR600.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsX86.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsXCore.td;\SwiftShader\src\LLVM\include\llvm\Option\OptParser.td;\SwiftShader\src\LLVM\include\llvm\Target\Target.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetCallingConv.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetItinerary.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSchedule.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSelectionDAG.td;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenAsmMatcher.inc.tmp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Building X86GenAsmMatcher.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
..\..\..\bin\RelWithDebInfo\llvm-tblgen.exe -gen-asm-matcher -I /SwiftShader/src/LLVM/lib/Target/X86 -I /SwiftShader/src/LLVM/lib/Target -I /SwiftShader/src/LLVM/include /SwiftShader/src/LLVM/lib/Target/X86/X86.td -o /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenAsmMatcher.inc.tmp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenAsmMatcher.inc.tmp.rule;\SwiftShader\build\VisualStudio2013\bin\RelWithDebInfo\llvm-tblgen.exe;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;\SwiftShader\src\LLVM\lib\Target\X86\X86CallingConv.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Instr3DNow.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrArithmetic.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrAVX512.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCMovSetCC.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCompiler.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrControl.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrExtension.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFMA.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFormats.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFPStack.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFragmentsSIMD.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrMMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrShiftRotate.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSSE.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSVM.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSystem.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrTSX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrVMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrXOP.td;\SwiftShader\src\LLVM\lib\Target\X86\X86RegisterInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedHaswell.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedSandyBridge.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Schedule.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleAtom.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleSLM.td;\SwiftShader\src\LLVM\include\llvm\CodeGen\ValueTypes.td;\SwiftShader\src\LLVM\include\llvm\IR\Intrinsics.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsAArch64.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsARM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsHexagon.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsMips.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsNVVM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsPowerPC.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsR600.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsX86.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsXCore.td;\SwiftShader\src\LLVM\include\llvm\Option\OptParser.td;\SwiftShader\src\LLVM\include\llvm\Target\Target.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetCallingConv.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetItinerary.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSchedule.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSelectionDAG.td;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenAsmMatcher.inc.tmp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="..\..\..\CMakeFiles\b99a5b2a5ae5c476e282fbdf0a13fa49\X86GenAsmMatcher.inc.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_if_different /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenAsmMatcher.inc.tmp /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenAsmMatcher.inc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenAsmMatcher.inc.rule;\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenAsmMatcher.inc.tmp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenAsmMatcher.inc</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_if_different /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenAsmMatcher.inc.tmp /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenAsmMatcher.inc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenAsmMatcher.inc.rule;\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenAsmMatcher.inc.tmp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenAsmMatcher.inc</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_if_different /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenAsmMatcher.inc.tmp /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenAsmMatcher.inc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenAsmMatcher.inc.rule;\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenAsmMatcher.inc.tmp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenAsmMatcher.inc</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_if_different /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenAsmMatcher.inc.tmp /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenAsmMatcher.inc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenAsmMatcher.inc.rule;\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenAsmMatcher.inc.tmp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenAsmMatcher.inc</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="..\..\..\CMakeFiles\b99a5b2a5ae5c476e282fbdf0a13fa49\X86GenDAGISel.inc.tmp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Building X86GenDAGISel.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
..\..\..\bin\Debug\llvm-tblgen.exe -gen-dag-isel -I /SwiftShader/src/LLVM/lib/Target/X86 -I /SwiftShader/src/LLVM/lib/Target -I /SwiftShader/src/LLVM/include /SwiftShader/src/LLVM/lib/Target/X86/X86.td -o /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenDAGISel.inc.tmp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenDAGISel.inc.tmp.rule;\SwiftShader\build\VisualStudio2013\bin\Debug\llvm-tblgen.exe;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;\SwiftShader\src\LLVM\lib\Target\X86\X86CallingConv.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Instr3DNow.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrArithmetic.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrAVX512.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCMovSetCC.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCompiler.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrControl.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrExtension.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFMA.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFormats.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFPStack.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFragmentsSIMD.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrMMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrShiftRotate.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSSE.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSVM.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSystem.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrTSX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrVMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrXOP.td;\SwiftShader\src\LLVM\lib\Target\X86\X86RegisterInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedHaswell.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedSandyBridge.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Schedule.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleAtom.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleSLM.td;\SwiftShader\src\LLVM\include\llvm\CodeGen\ValueTypes.td;\SwiftShader\src\LLVM\include\llvm\IR\Intrinsics.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsAArch64.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsARM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsHexagon.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsMips.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsNVVM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsPowerPC.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsR600.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsX86.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsXCore.td;\SwiftShader\src\LLVM\include\llvm\Option\OptParser.td;\SwiftShader\src\LLVM\include\llvm\Target\Target.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetCallingConv.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetItinerary.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSchedule.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSelectionDAG.td;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenDAGISel.inc.tmp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Building X86GenDAGISel.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
..\..\..\bin\Release\llvm-tblgen.exe -gen-dag-isel -I /SwiftShader/src/LLVM/lib/Target/X86 -I /SwiftShader/src/LLVM/lib/Target -I /SwiftShader/src/LLVM/include /SwiftShader/src/LLVM/lib/Target/X86/X86.td -o /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenDAGISel.inc.tmp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenDAGISel.inc.tmp.rule;\SwiftShader\build\VisualStudio2013\bin\Release\llvm-tblgen.exe;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;\SwiftShader\src\LLVM\lib\Target\X86\X86CallingConv.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Instr3DNow.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrArithmetic.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrAVX512.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCMovSetCC.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCompiler.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrControl.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrExtension.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFMA.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFormats.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFPStack.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFragmentsSIMD.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrMMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrShiftRotate.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSSE.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSVM.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSystem.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrTSX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrVMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrXOP.td;\SwiftShader\src\LLVM\lib\Target\X86\X86RegisterInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedHaswell.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedSandyBridge.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Schedule.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleAtom.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleSLM.td;\SwiftShader\src\LLVM\include\llvm\CodeGen\ValueTypes.td;\SwiftShader\src\LLVM\include\llvm\IR\Intrinsics.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsAArch64.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsARM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsHexagon.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsMips.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsNVVM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsPowerPC.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsR600.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsX86.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsXCore.td;\SwiftShader\src\LLVM\include\llvm\Option\OptParser.td;\SwiftShader\src\LLVM\include\llvm\Target\Target.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetCallingConv.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetItinerary.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSchedule.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSelectionDAG.td;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenDAGISel.inc.tmp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Building X86GenDAGISel.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
..\..\..\bin\MinSizeRel\llvm-tblgen.exe -gen-dag-isel -I /SwiftShader/src/LLVM/lib/Target/X86 -I /SwiftShader/src/LLVM/lib/Target -I /SwiftShader/src/LLVM/include /SwiftShader/src/LLVM/lib/Target/X86/X86.td -o /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenDAGISel.inc.tmp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenDAGISel.inc.tmp.rule;\SwiftShader\build\VisualStudio2013\bin\MinSizeRel\llvm-tblgen.exe;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;\SwiftShader\src\LLVM\lib\Target\X86\X86CallingConv.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Instr3DNow.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrArithmetic.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrAVX512.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCMovSetCC.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCompiler.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrControl.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrExtension.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFMA.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFormats.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFPStack.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFragmentsSIMD.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrMMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrShiftRotate.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSSE.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSVM.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSystem.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrTSX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrVMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrXOP.td;\SwiftShader\src\LLVM\lib\Target\X86\X86RegisterInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedHaswell.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedSandyBridge.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Schedule.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleAtom.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleSLM.td;\SwiftShader\src\LLVM\include\llvm\CodeGen\ValueTypes.td;\SwiftShader\src\LLVM\include\llvm\IR\Intrinsics.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsAArch64.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsARM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsHexagon.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsMips.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsNVVM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsPowerPC.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsR600.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsX86.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsXCore.td;\SwiftShader\src\LLVM\include\llvm\Option\OptParser.td;\SwiftShader\src\LLVM\include\llvm\Target\Target.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetCallingConv.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetItinerary.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSchedule.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSelectionDAG.td;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenDAGISel.inc.tmp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Building X86GenDAGISel.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
..\..\..\bin\RelWithDebInfo\llvm-tblgen.exe -gen-dag-isel -I /SwiftShader/src/LLVM/lib/Target/X86 -I /SwiftShader/src/LLVM/lib/Target -I /SwiftShader/src/LLVM/include /SwiftShader/src/LLVM/lib/Target/X86/X86.td -o /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenDAGISel.inc.tmp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenDAGISel.inc.tmp.rule;\SwiftShader\build\VisualStudio2013\bin\RelWithDebInfo\llvm-tblgen.exe;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;\SwiftShader\src\LLVM\lib\Target\X86\X86CallingConv.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Instr3DNow.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrArithmetic.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrAVX512.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCMovSetCC.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCompiler.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrControl.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrExtension.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFMA.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFormats.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFPStack.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFragmentsSIMD.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrMMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrShiftRotate.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSSE.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSVM.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSystem.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrTSX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrVMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrXOP.td;\SwiftShader\src\LLVM\lib\Target\X86\X86RegisterInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedHaswell.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedSandyBridge.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Schedule.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleAtom.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleSLM.td;\SwiftShader\src\LLVM\include\llvm\CodeGen\ValueTypes.td;\SwiftShader\src\LLVM\include\llvm\IR\Intrinsics.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsAArch64.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsARM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsHexagon.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsMips.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsNVVM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsPowerPC.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsR600.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsX86.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsXCore.td;\SwiftShader\src\LLVM\include\llvm\Option\OptParser.td;\SwiftShader\src\LLVM\include\llvm\Target\Target.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetCallingConv.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetItinerary.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSchedule.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSelectionDAG.td;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenDAGISel.inc.tmp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="..\..\..\CMakeFiles\b99a5b2a5ae5c476e282fbdf0a13fa49\X86GenDAGISel.inc.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_if_different /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenDAGISel.inc.tmp /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenDAGISel.inc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenDAGISel.inc.rule;\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenDAGISel.inc.tmp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenDAGISel.inc</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_if_different /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenDAGISel.inc.tmp /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenDAGISel.inc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenDAGISel.inc.rule;\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenDAGISel.inc.tmp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenDAGISel.inc</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_if_different /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenDAGISel.inc.tmp /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenDAGISel.inc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenDAGISel.inc.rule;\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenDAGISel.inc.tmp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenDAGISel.inc</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_if_different /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenDAGISel.inc.tmp /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenDAGISel.inc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenDAGISel.inc.rule;\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenDAGISel.inc.tmp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenDAGISel.inc</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="..\..\..\CMakeFiles\b99a5b2a5ae5c476e282fbdf0a13fa49\X86GenFastISel.inc.tmp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Building X86GenFastISel.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
..\..\..\bin\Debug\llvm-tblgen.exe -gen-fast-isel -I /SwiftShader/src/LLVM/lib/Target/X86 -I /SwiftShader/src/LLVM/lib/Target -I /SwiftShader/src/LLVM/include /SwiftShader/src/LLVM/lib/Target/X86/X86.td -o /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenFastISel.inc.tmp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenFastISel.inc.tmp.rule;\SwiftShader\build\VisualStudio2013\bin\Debug\llvm-tblgen.exe;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;\SwiftShader\src\LLVM\lib\Target\X86\X86CallingConv.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Instr3DNow.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrArithmetic.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrAVX512.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCMovSetCC.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCompiler.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrControl.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrExtension.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFMA.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFormats.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFPStack.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFragmentsSIMD.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrMMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrShiftRotate.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSSE.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSVM.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSystem.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrTSX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrVMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrXOP.td;\SwiftShader\src\LLVM\lib\Target\X86\X86RegisterInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedHaswell.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedSandyBridge.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Schedule.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleAtom.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleSLM.td;\SwiftShader\src\LLVM\include\llvm\CodeGen\ValueTypes.td;\SwiftShader\src\LLVM\include\llvm\IR\Intrinsics.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsAArch64.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsARM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsHexagon.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsMips.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsNVVM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsPowerPC.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsR600.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsX86.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsXCore.td;\SwiftShader\src\LLVM\include\llvm\Option\OptParser.td;\SwiftShader\src\LLVM\include\llvm\Target\Target.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetCallingConv.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetItinerary.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSchedule.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSelectionDAG.td;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenFastISel.inc.tmp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Building X86GenFastISel.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
..\..\..\bin\Release\llvm-tblgen.exe -gen-fast-isel -I /SwiftShader/src/LLVM/lib/Target/X86 -I /SwiftShader/src/LLVM/lib/Target -I /SwiftShader/src/LLVM/include /SwiftShader/src/LLVM/lib/Target/X86/X86.td -o /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenFastISel.inc.tmp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenFastISel.inc.tmp.rule;\SwiftShader\build\VisualStudio2013\bin\Release\llvm-tblgen.exe;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;\SwiftShader\src\LLVM\lib\Target\X86\X86CallingConv.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Instr3DNow.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrArithmetic.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrAVX512.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCMovSetCC.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCompiler.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrControl.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrExtension.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFMA.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFormats.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFPStack.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFragmentsSIMD.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrMMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrShiftRotate.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSSE.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSVM.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSystem.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrTSX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrVMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrXOP.td;\SwiftShader\src\LLVM\lib\Target\X86\X86RegisterInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedHaswell.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedSandyBridge.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Schedule.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleAtom.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleSLM.td;\SwiftShader\src\LLVM\include\llvm\CodeGen\ValueTypes.td;\SwiftShader\src\LLVM\include\llvm\IR\Intrinsics.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsAArch64.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsARM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsHexagon.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsMips.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsNVVM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsPowerPC.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsR600.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsX86.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsXCore.td;\SwiftShader\src\LLVM\include\llvm\Option\OptParser.td;\SwiftShader\src\LLVM\include\llvm\Target\Target.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetCallingConv.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetItinerary.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSchedule.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSelectionDAG.td;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenFastISel.inc.tmp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Building X86GenFastISel.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
..\..\..\bin\MinSizeRel\llvm-tblgen.exe -gen-fast-isel -I /SwiftShader/src/LLVM/lib/Target/X86 -I /SwiftShader/src/LLVM/lib/Target -I /SwiftShader/src/LLVM/include /SwiftShader/src/LLVM/lib/Target/X86/X86.td -o /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenFastISel.inc.tmp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenFastISel.inc.tmp.rule;\SwiftShader\build\VisualStudio2013\bin\MinSizeRel\llvm-tblgen.exe;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;\SwiftShader\src\LLVM\lib\Target\X86\X86CallingConv.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Instr3DNow.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrArithmetic.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrAVX512.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCMovSetCC.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCompiler.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrControl.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrExtension.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFMA.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFormats.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFPStack.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFragmentsSIMD.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrMMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrShiftRotate.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSSE.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSVM.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSystem.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrTSX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrVMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrXOP.td;\SwiftShader\src\LLVM\lib\Target\X86\X86RegisterInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedHaswell.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedSandyBridge.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Schedule.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleAtom.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleSLM.td;\SwiftShader\src\LLVM\include\llvm\CodeGen\ValueTypes.td;\SwiftShader\src\LLVM\include\llvm\IR\Intrinsics.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsAArch64.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsARM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsHexagon.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsMips.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsNVVM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsPowerPC.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsR600.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsX86.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsXCore.td;\SwiftShader\src\LLVM\include\llvm\Option\OptParser.td;\SwiftShader\src\LLVM\include\llvm\Target\Target.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetCallingConv.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetItinerary.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSchedule.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSelectionDAG.td;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenFastISel.inc.tmp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Building X86GenFastISel.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
..\..\..\bin\RelWithDebInfo\llvm-tblgen.exe -gen-fast-isel -I /SwiftShader/src/LLVM/lib/Target/X86 -I /SwiftShader/src/LLVM/lib/Target -I /SwiftShader/src/LLVM/include /SwiftShader/src/LLVM/lib/Target/X86/X86.td -o /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenFastISel.inc.tmp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenFastISel.inc.tmp.rule;\SwiftShader\build\VisualStudio2013\bin\RelWithDebInfo\llvm-tblgen.exe;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;\SwiftShader\src\LLVM\lib\Target\X86\X86CallingConv.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Instr3DNow.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrArithmetic.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrAVX512.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCMovSetCC.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCompiler.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrControl.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrExtension.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFMA.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFormats.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFPStack.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFragmentsSIMD.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrMMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrShiftRotate.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSSE.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSVM.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSystem.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrTSX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrVMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrXOP.td;\SwiftShader\src\LLVM\lib\Target\X86\X86RegisterInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedHaswell.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedSandyBridge.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Schedule.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleAtom.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleSLM.td;\SwiftShader\src\LLVM\include\llvm\CodeGen\ValueTypes.td;\SwiftShader\src\LLVM\include\llvm\IR\Intrinsics.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsAArch64.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsARM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsHexagon.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsMips.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsNVVM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsPowerPC.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsR600.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsX86.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsXCore.td;\SwiftShader\src\LLVM\include\llvm\Option\OptParser.td;\SwiftShader\src\LLVM\include\llvm\Target\Target.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetCallingConv.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetItinerary.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSchedule.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSelectionDAG.td;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenFastISel.inc.tmp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="..\..\..\CMakeFiles\b99a5b2a5ae5c476e282fbdf0a13fa49\X86GenFastISel.inc.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_if_different /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenFastISel.inc.tmp /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenFastISel.inc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenFastISel.inc.rule;\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenFastISel.inc.tmp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenFastISel.inc</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_if_different /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenFastISel.inc.tmp /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenFastISel.inc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenFastISel.inc.rule;\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenFastISel.inc.tmp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenFastISel.inc</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_if_different /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenFastISel.inc.tmp /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenFastISel.inc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenFastISel.inc.rule;\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenFastISel.inc.tmp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenFastISel.inc</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_if_different /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenFastISel.inc.tmp /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenFastISel.inc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenFastISel.inc.rule;\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenFastISel.inc.tmp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenFastISel.inc</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="..\..\..\CMakeFiles\b99a5b2a5ae5c476e282fbdf0a13fa49\X86GenCallingConv.inc.tmp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Building X86GenCallingConv.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
..\..\..\bin\Debug\llvm-tblgen.exe -gen-callingconv -I /SwiftShader/src/LLVM/lib/Target/X86 -I /SwiftShader/src/LLVM/lib/Target -I /SwiftShader/src/LLVM/include /SwiftShader/src/LLVM/lib/Target/X86/X86.td -o /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenCallingConv.inc.tmp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenCallingConv.inc.tmp.rule;\SwiftShader\build\VisualStudio2013\bin\Debug\llvm-tblgen.exe;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;\SwiftShader\src\LLVM\lib\Target\X86\X86CallingConv.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Instr3DNow.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrArithmetic.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrAVX512.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCMovSetCC.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCompiler.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrControl.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrExtension.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFMA.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFormats.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFPStack.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFragmentsSIMD.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrMMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrShiftRotate.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSSE.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSVM.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSystem.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrTSX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrVMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrXOP.td;\SwiftShader\src\LLVM\lib\Target\X86\X86RegisterInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedHaswell.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedSandyBridge.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Schedule.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleAtom.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleSLM.td;\SwiftShader\src\LLVM\include\llvm\CodeGen\ValueTypes.td;\SwiftShader\src\LLVM\include\llvm\IR\Intrinsics.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsAArch64.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsARM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsHexagon.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsMips.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsNVVM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsPowerPC.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsR600.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsX86.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsXCore.td;\SwiftShader\src\LLVM\include\llvm\Option\OptParser.td;\SwiftShader\src\LLVM\include\llvm\Target\Target.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetCallingConv.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetItinerary.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSchedule.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSelectionDAG.td;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenCallingConv.inc.tmp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Building X86GenCallingConv.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
..\..\..\bin\Release\llvm-tblgen.exe -gen-callingconv -I /SwiftShader/src/LLVM/lib/Target/X86 -I /SwiftShader/src/LLVM/lib/Target -I /SwiftShader/src/LLVM/include /SwiftShader/src/LLVM/lib/Target/X86/X86.td -o /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenCallingConv.inc.tmp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenCallingConv.inc.tmp.rule;\SwiftShader\build\VisualStudio2013\bin\Release\llvm-tblgen.exe;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;\SwiftShader\src\LLVM\lib\Target\X86\X86CallingConv.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Instr3DNow.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrArithmetic.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrAVX512.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCMovSetCC.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCompiler.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrControl.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrExtension.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFMA.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFormats.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFPStack.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFragmentsSIMD.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrMMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrShiftRotate.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSSE.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSVM.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSystem.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrTSX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrVMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrXOP.td;\SwiftShader\src\LLVM\lib\Target\X86\X86RegisterInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedHaswell.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedSandyBridge.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Schedule.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleAtom.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleSLM.td;\SwiftShader\src\LLVM\include\llvm\CodeGen\ValueTypes.td;\SwiftShader\src\LLVM\include\llvm\IR\Intrinsics.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsAArch64.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsARM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsHexagon.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsMips.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsNVVM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsPowerPC.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsR600.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsX86.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsXCore.td;\SwiftShader\src\LLVM\include\llvm\Option\OptParser.td;\SwiftShader\src\LLVM\include\llvm\Target\Target.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetCallingConv.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetItinerary.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSchedule.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSelectionDAG.td;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenCallingConv.inc.tmp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Building X86GenCallingConv.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
..\..\..\bin\MinSizeRel\llvm-tblgen.exe -gen-callingconv -I /SwiftShader/src/LLVM/lib/Target/X86 -I /SwiftShader/src/LLVM/lib/Target -I /SwiftShader/src/LLVM/include /SwiftShader/src/LLVM/lib/Target/X86/X86.td -o /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenCallingConv.inc.tmp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenCallingConv.inc.tmp.rule;\SwiftShader\build\VisualStudio2013\bin\MinSizeRel\llvm-tblgen.exe;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;\SwiftShader\src\LLVM\lib\Target\X86\X86CallingConv.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Instr3DNow.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrArithmetic.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrAVX512.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCMovSetCC.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCompiler.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrControl.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrExtension.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFMA.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFormats.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFPStack.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFragmentsSIMD.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrMMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrShiftRotate.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSSE.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSVM.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSystem.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrTSX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrVMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrXOP.td;\SwiftShader\src\LLVM\lib\Target\X86\X86RegisterInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedHaswell.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedSandyBridge.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Schedule.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleAtom.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleSLM.td;\SwiftShader\src\LLVM\include\llvm\CodeGen\ValueTypes.td;\SwiftShader\src\LLVM\include\llvm\IR\Intrinsics.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsAArch64.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsARM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsHexagon.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsMips.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsNVVM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsPowerPC.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsR600.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsX86.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsXCore.td;\SwiftShader\src\LLVM\include\llvm\Option\OptParser.td;\SwiftShader\src\LLVM\include\llvm\Target\Target.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetCallingConv.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetItinerary.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSchedule.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSelectionDAG.td;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenCallingConv.inc.tmp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Building X86GenCallingConv.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
..\..\..\bin\RelWithDebInfo\llvm-tblgen.exe -gen-callingconv -I /SwiftShader/src/LLVM/lib/Target/X86 -I /SwiftShader/src/LLVM/lib/Target -I /SwiftShader/src/LLVM/include /SwiftShader/src/LLVM/lib/Target/X86/X86.td -o /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenCallingConv.inc.tmp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenCallingConv.inc.tmp.rule;\SwiftShader\build\VisualStudio2013\bin\RelWithDebInfo\llvm-tblgen.exe;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;\SwiftShader\src\LLVM\lib\Target\X86\X86CallingConv.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Instr3DNow.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrArithmetic.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrAVX512.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCMovSetCC.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCompiler.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrControl.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrExtension.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFMA.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFormats.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFPStack.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFragmentsSIMD.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrMMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrShiftRotate.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSSE.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSVM.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSystem.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrTSX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrVMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrXOP.td;\SwiftShader\src\LLVM\lib\Target\X86\X86RegisterInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedHaswell.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedSandyBridge.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Schedule.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleAtom.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleSLM.td;\SwiftShader\src\LLVM\include\llvm\CodeGen\ValueTypes.td;\SwiftShader\src\LLVM\include\llvm\IR\Intrinsics.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsAArch64.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsARM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsHexagon.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsMips.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsNVVM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsPowerPC.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsR600.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsX86.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsXCore.td;\SwiftShader\src\LLVM\include\llvm\Option\OptParser.td;\SwiftShader\src\LLVM\include\llvm\Target\Target.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetCallingConv.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetItinerary.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSchedule.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSelectionDAG.td;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenCallingConv.inc.tmp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="..\..\..\CMakeFiles\b99a5b2a5ae5c476e282fbdf0a13fa49\X86GenCallingConv.inc.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_if_different /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenCallingConv.inc.tmp /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenCallingConv.inc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenCallingConv.inc.rule;\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenCallingConv.inc.tmp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenCallingConv.inc</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_if_different /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenCallingConv.inc.tmp /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenCallingConv.inc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenCallingConv.inc.rule;\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenCallingConv.inc.tmp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenCallingConv.inc</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_if_different /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenCallingConv.inc.tmp /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenCallingConv.inc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenCallingConv.inc.rule;\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenCallingConv.inc.tmp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenCallingConv.inc</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_if_different /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenCallingConv.inc.tmp /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenCallingConv.inc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenCallingConv.inc.rule;\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenCallingConv.inc.tmp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenCallingConv.inc</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="..\..\..\CMakeFiles\b99a5b2a5ae5c476e282fbdf0a13fa49\X86GenSubtargetInfo.inc.tmp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Building X86GenSubtargetInfo.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
..\..\..\bin\Debug\llvm-tblgen.exe -gen-subtarget -I /SwiftShader/src/LLVM/lib/Target/X86 -I /SwiftShader/src/LLVM/lib/Target -I /SwiftShader/src/LLVM/include /SwiftShader/src/LLVM/lib/Target/X86/X86.td -o /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenSubtargetInfo.inc.tmp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenSubtargetInfo.inc.tmp.rule;\SwiftShader\build\VisualStudio2013\bin\Debug\llvm-tblgen.exe;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;\SwiftShader\src\LLVM\lib\Target\X86\X86CallingConv.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Instr3DNow.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrArithmetic.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrAVX512.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCMovSetCC.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCompiler.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrControl.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrExtension.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFMA.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFormats.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFPStack.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFragmentsSIMD.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrMMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrShiftRotate.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSSE.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSVM.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSystem.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrTSX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrVMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrXOP.td;\SwiftShader\src\LLVM\lib\Target\X86\X86RegisterInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedHaswell.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedSandyBridge.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Schedule.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleAtom.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleSLM.td;\SwiftShader\src\LLVM\include\llvm\CodeGen\ValueTypes.td;\SwiftShader\src\LLVM\include\llvm\IR\Intrinsics.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsAArch64.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsARM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsHexagon.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsMips.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsNVVM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsPowerPC.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsR600.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsX86.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsXCore.td;\SwiftShader\src\LLVM\include\llvm\Option\OptParser.td;\SwiftShader\src\LLVM\include\llvm\Target\Target.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetCallingConv.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetItinerary.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSchedule.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSelectionDAG.td;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenSubtargetInfo.inc.tmp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Building X86GenSubtargetInfo.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
..\..\..\bin\Release\llvm-tblgen.exe -gen-subtarget -I /SwiftShader/src/LLVM/lib/Target/X86 -I /SwiftShader/src/LLVM/lib/Target -I /SwiftShader/src/LLVM/include /SwiftShader/src/LLVM/lib/Target/X86/X86.td -o /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenSubtargetInfo.inc.tmp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenSubtargetInfo.inc.tmp.rule;\SwiftShader\build\VisualStudio2013\bin\Release\llvm-tblgen.exe;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;\SwiftShader\src\LLVM\lib\Target\X86\X86CallingConv.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Instr3DNow.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrArithmetic.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrAVX512.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCMovSetCC.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCompiler.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrControl.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrExtension.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFMA.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFormats.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFPStack.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFragmentsSIMD.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrMMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrShiftRotate.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSSE.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSVM.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSystem.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrTSX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrVMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrXOP.td;\SwiftShader\src\LLVM\lib\Target\X86\X86RegisterInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedHaswell.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedSandyBridge.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Schedule.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleAtom.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleSLM.td;\SwiftShader\src\LLVM\include\llvm\CodeGen\ValueTypes.td;\SwiftShader\src\LLVM\include\llvm\IR\Intrinsics.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsAArch64.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsARM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsHexagon.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsMips.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsNVVM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsPowerPC.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsR600.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsX86.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsXCore.td;\SwiftShader\src\LLVM\include\llvm\Option\OptParser.td;\SwiftShader\src\LLVM\include\llvm\Target\Target.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetCallingConv.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetItinerary.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSchedule.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSelectionDAG.td;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenSubtargetInfo.inc.tmp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Building X86GenSubtargetInfo.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
..\..\..\bin\MinSizeRel\llvm-tblgen.exe -gen-subtarget -I /SwiftShader/src/LLVM/lib/Target/X86 -I /SwiftShader/src/LLVM/lib/Target -I /SwiftShader/src/LLVM/include /SwiftShader/src/LLVM/lib/Target/X86/X86.td -o /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenSubtargetInfo.inc.tmp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenSubtargetInfo.inc.tmp.rule;\SwiftShader\build\VisualStudio2013\bin\MinSizeRel\llvm-tblgen.exe;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;\SwiftShader\src\LLVM\lib\Target\X86\X86CallingConv.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Instr3DNow.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrArithmetic.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrAVX512.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCMovSetCC.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCompiler.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrControl.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrExtension.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFMA.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFormats.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFPStack.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFragmentsSIMD.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrMMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrShiftRotate.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSSE.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSVM.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSystem.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrTSX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrVMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrXOP.td;\SwiftShader\src\LLVM\lib\Target\X86\X86RegisterInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedHaswell.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedSandyBridge.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Schedule.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleAtom.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleSLM.td;\SwiftShader\src\LLVM\include\llvm\CodeGen\ValueTypes.td;\SwiftShader\src\LLVM\include\llvm\IR\Intrinsics.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsAArch64.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsARM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsHexagon.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsMips.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsNVVM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsPowerPC.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsR600.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsX86.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsXCore.td;\SwiftShader\src\LLVM\include\llvm\Option\OptParser.td;\SwiftShader\src\LLVM\include\llvm\Target\Target.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetCallingConv.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetItinerary.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSchedule.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSelectionDAG.td;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenSubtargetInfo.inc.tmp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Building X86GenSubtargetInfo.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
..\..\..\bin\RelWithDebInfo\llvm-tblgen.exe -gen-subtarget -I /SwiftShader/src/LLVM/lib/Target/X86 -I /SwiftShader/src/LLVM/lib/Target -I /SwiftShader/src/LLVM/include /SwiftShader/src/LLVM/lib/Target/X86/X86.td -o /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenSubtargetInfo.inc.tmp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenSubtargetInfo.inc.tmp.rule;\SwiftShader\build\VisualStudio2013\bin\RelWithDebInfo\llvm-tblgen.exe;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;\SwiftShader\src\LLVM\lib\Target\X86\X86CallingConv.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Instr3DNow.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrArithmetic.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrAVX512.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCMovSetCC.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCompiler.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrControl.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrExtension.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFMA.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFormats.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFPStack.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFragmentsSIMD.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrMMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrShiftRotate.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSSE.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSVM.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSystem.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrTSX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrVMX.td;\SwiftShader\src\LLVM\lib\Target\X86\X86InstrXOP.td;\SwiftShader\src\LLVM\lib\Target\X86\X86RegisterInfo.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedHaswell.td;\SwiftShader\src\LLVM\lib\Target\X86\X86SchedSandyBridge.td;\SwiftShader\src\LLVM\lib\Target\X86\X86Schedule.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleAtom.td;\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleSLM.td;\SwiftShader\src\LLVM\include\llvm\CodeGen\ValueTypes.td;\SwiftShader\src\LLVM\include\llvm\IR\Intrinsics.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsAArch64.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsARM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsHexagon.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsMips.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsNVVM.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsPowerPC.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsR600.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsX86.td;\SwiftShader\src\LLVM\include\llvm\IR\IntrinsicsXCore.td;\SwiftShader\src\LLVM\include\llvm\Option\OptParser.td;\SwiftShader\src\LLVM\include\llvm\Target\Target.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetCallingConv.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetItinerary.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSchedule.td;\SwiftShader\src\LLVM\include\llvm\Target\TargetSelectionDAG.td;\SwiftShader\src\LLVM\lib\Target\X86\X86.td;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenSubtargetInfo.inc.tmp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="..\..\..\CMakeFiles\b99a5b2a5ae5c476e282fbdf0a13fa49\X86GenSubtargetInfo.inc.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_if_different /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenSubtargetInfo.inc.tmp /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenSubtargetInfo.inc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenSubtargetInfo.inc.rule;\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenSubtargetInfo.inc.tmp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenSubtargetInfo.inc</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_if_different /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenSubtargetInfo.inc.tmp /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenSubtargetInfo.inc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenSubtargetInfo.inc.rule;\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenSubtargetInfo.inc.tmp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenSubtargetInfo.inc</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_if_different /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenSubtargetInfo.inc.tmp /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenSubtargetInfo.inc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenSubtargetInfo.inc.rule;\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenSubtargetInfo.inc.tmp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenSubtargetInfo.inc</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_if_different /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenSubtargetInfo.inc.tmp /SwiftShader/build/VisualStudio2013/lib/Target/X86/X86GenSubtargetInfo.inc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">/SwiftShader/build/VisualStudio2013/CMakeFiles/b99a5b2a5ae5c476e282fbdf0a13fa49/X86GenSubtargetInfo.inc.rule;\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenSubtargetInfo.inc.tmp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">\SwiftShader\build\VisualStudio2013\lib\Target\X86\X86GenSubtargetInfo.inc</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="\SwiftShader\src\LLVM\lib\Target\X86\X86.td" />
    <ClInclude Include="\SwiftShader\src\LLVM\lib\Target\X86\X86CallingConv.td" />
    <ClInclude Include="\SwiftShader\src\LLVM\lib\Target\X86\X86Instr3DNow.td" />
    <ClInclude Include="\SwiftShader\src\LLVM\lib\Target\X86\X86InstrArithmetic.td" />
    <ClInclude Include="\SwiftShader\src\LLVM\lib\Target\X86\X86InstrAVX512.td" />
    <ClInclude Include="\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCMovSetCC.td" />
    <ClInclude Include="\SwiftShader\src\LLVM\lib\Target\X86\X86InstrCompiler.td" />
    <ClInclude Include="\SwiftShader\src\LLVM\lib\Target\X86\X86InstrControl.td" />
    <ClInclude Include="\SwiftShader\src\LLVM\lib\Target\X86\X86InstrExtension.td" />
    <ClInclude Include="\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFMA.td" />
    <ClInclude Include="\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFormats.td" />
    <ClInclude Include="\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFPStack.td" />
    <ClInclude Include="\SwiftShader\src\LLVM\lib\Target\X86\X86InstrFragmentsSIMD.td" />
    <ClInclude Include="\SwiftShader\src\LLVM\lib\Target\X86\X86InstrInfo.td" />
    <ClInclude Include="\SwiftShader\src\LLVM\lib\Target\X86\X86InstrMMX.td" />
    <ClInclude Include="\SwiftShader\src\LLVM\lib\Target\X86\X86InstrShiftRotate.td" />
    <ClInclude Include="\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSSE.td" />
    <ClInclude Include="\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSVM.td" />
    <ClInclude Include="\SwiftShader\src\LLVM\lib\Target\X86\X86InstrSystem.td" />
    <ClInclude Include="\SwiftShader\src\LLVM\lib\Target\X86\X86InstrTSX.td" />
    <ClInclude Include="\SwiftShader\src\LLVM\lib\Target\X86\X86InstrVMX.td" />
    <ClInclude Include="\SwiftShader\src\LLVM\lib\Target\X86\X86InstrXOP.td" />
    <ClInclude Include="\SwiftShader\src\LLVM\lib\Target\X86\X86RegisterInfo.td" />
    <ClInclude Include="\SwiftShader\src\LLVM\lib\Target\X86\X86SchedHaswell.td" />
    <ClInclude Include="\SwiftShader\src\LLVM\lib\Target\X86\X86SchedSandyBridge.td" />
    <ClInclude Include="\SwiftShader\src\LLVM\lib\Target\X86\X86Schedule.td" />
    <ClInclude Include="\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleAtom.td" />
    <ClInclude Include="\SwiftShader\src\LLVM\lib\Target\X86\X86ScheduleSLM.td" />
    <ClInclude Include="\SwiftShader\src\LLVM\lib\Target\X86\X86.h" />
    <ClInclude Include="\SwiftShader\src\LLVM\lib\Target\X86\X86AsmPrinter.h" />
    <ClInclude Include="\SwiftShader\src\LLVM\lib\Target\X86\X86CallingConv.h" />
    <ClInclude Include="\SwiftShader\src\LLVM\lib\Target\X86\X86COFFMachineModuleInfo.h" />
    <ClInclude Include="\SwiftShader\src\LLVM\lib\Target\X86\X86FrameLowering.h" />
    <ClInclude Include="\SwiftShader\src\LLVM\lib\Target\X86\X86InstrBuilder.h" />
    <ClInclude Include="\SwiftShader\src\LLVM\lib\Target\X86\X86InstrInfo.h" />
    <ClInclude Include="\SwiftShader\src\LLVM\lib\Target\X86\X86ISelLowering.h" />
    <ClInclude Include="\SwiftShader\src\LLVM\lib\Target\X86\X86JITInfo.h" />
    <ClInclude Include="\SwiftShader\src\LLVM\lib\Target\X86\X86MachineFunctionInfo.h" />
    <ClInclude Include="\SwiftShader\src\LLVM\lib\Target\X86\X86RegisterInfo.h" />
    <ClInclude Include="\SwiftShader\src\LLVM\lib\Target\X86\X86Relocations.h" />
    <ClInclude Include="\SwiftShader\src\LLVM\lib\Target\X86\X86SelectionDAGInfo.h" />
    <ClInclude Include="\SwiftShader\src\LLVM\lib\Target\X86\X86Subtarget.h" />
    <ClInclude Include="\SwiftShader\src\LLVM\lib\Target\X86\X86TargetMachine.h" />
    <ClInclude Include="\SwiftShader\src\LLVM\lib\Target\X86\X86TargetObjectFile.h" />
    <ClCompile Include="\SwiftShader\src\LLVM\lib\Target\X86\X86AsmPrinter.cpp"  />
    <ClCompile Include="\SwiftShader\src\LLVM\lib\Target\X86\X86COFFMachineModuleInfo.cpp"  />
    <ClCompile Include="\SwiftShader\src\LLVM\lib\Target\X86\X86CodeEmitter.cpp"  />
    <ClCompile Include="\SwiftShader\src\LLVM\lib\Target\X86\X86FastISel.cpp"  />
    <ClCompile Include="\SwiftShader\src\LLVM\lib\Target\X86\X86FloatingPoint.cpp"  />
    <ClCompile Include="\SwiftShader\src\LLVM\lib\Target\X86\X86FrameLowering.cpp"  />
    <ClCompile Include="\SwiftShader\src\LLVM\lib\Target\X86\X86ISelDAGToDAG.cpp"  />
    <ClCompile Include="\SwiftShader\src\LLVM\lib\Target\X86\X86ISelLowering.cpp"  />
    <ClCompile Include="\SwiftShader\src\LLVM\lib\Target\X86\X86InstrInfo.cpp"  />
    <ClCompile Include="\SwiftShader\src\LLVM\lib\Target\X86\X86JITInfo.cpp"  />
    <ClCompile Include="\SwiftShader\src\LLVM\lib\Target\X86\X86MCInstLower.cpp"  />
    <ClCompile Include="\SwiftShader\src\LLVM\lib\Target\X86\X86MachineFunctionInfo.cpp"  />
    <ClCompile Include="\SwiftShader\src\LLVM\lib\Target\X86\X86PadShortFunction.cpp"  />
    <ClCompile Include="\SwiftShader\src\LLVM\lib\Target\X86\X86RegisterInfo.cpp"  />
    <ClCompile Include="\SwiftShader\src\LLVM\lib\Target\X86\X86SelectionDAGInfo.cpp"  />
    <ClCompile Include="\SwiftShader\src\LLVM\lib\Target\X86\X86Subtarget.cpp"  />
    <ClCompile Include="\SwiftShader\src\LLVM\lib\Target\X86\X86TargetMachine.cpp"  />
    <ClCompile Include="\SwiftShader\src\LLVM\lib\Target\X86\X86TargetObjectFile.cpp"  />
    <ClCompile Include="\SwiftShader\src\LLVM\lib\Target\X86\X86TargetTransformInfo.cpp"  />
    <ClCompile Include="\SwiftShader\src\LLVM\lib\Target\X86\X86VZeroUpper.cpp"  />
    <ClCompile Include="\SwiftShader\src\LLVM\lib\Target\X86\X86FixupLEAs.cpp"  />
    <None Include="X86GenRegisterInfo.inc" />
    <None Include="X86GenDisassemblerTables.inc" />
    <None Include="X86GenInstrInfo.inc" />
    <None Include="X86GenAsmWriter.inc" />
    <None Include="X86GenAsmWriter1.inc" />
    <None Include="X86GenAsmMatcher.inc" />
    <None Include="X86GenDAGISel.inc" />
    <None Include="X86GenFastISel.inc" />
    <None Include="X86GenCallingConv.inc" />
    <None Include="X86GenSubtargetInfo.inc" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="/SwiftShader/build/VisualStudio2013/lib/Analysis/LLVMAnalysis.vcxproj">
      <Project>4E344B53-DBF4-4B27-A744-AE40DE0E91B5</Project>
    </ProjectReference>
    <ProjectReference Include="/SwiftShader/build/VisualStudio2013/lib/CodeGen/AsmPrinter/LLVMAsmPrinter.vcxproj">
      <Project>A9AD8B40-2191-4AB2-BC84-E14AE136DC3D</Project>
    </ProjectReference>
    <ProjectReference Include="/SwiftShader/build/VisualStudio2013/lib/CodeGen/LLVMCodeGen.vcxproj">
      <Project>F49DF3A7-5D4B-4DEB-BEE8-3BCF8A389021</Project>
    </ProjectReference>
    <ProjectReference Include="/SwiftShader/build/VisualStudio2013/lib/IR/LLVMCore.vcxproj">
      <Project>A9B5C576-4F51-4A87-A0D2-C8C67DE78853</Project>
    </ProjectReference>
    <ProjectReference Include="/SwiftShader/build/VisualStudio2013/lib/Transforms/InstCombine/LLVMInstCombine.vcxproj">
      <Project>5D26EB97-2F40-4E58-900F-E20E08B6D259</Project>
    </ProjectReference>
    <ProjectReference Include="/SwiftShader/build/VisualStudio2013/lib/MC/LLVMMC.vcxproj">
      <Project>CA020824-8CA1-432C-9EAD-8C2D82FC7793</Project>
    </ProjectReference>
    <ProjectReference Include="/SwiftShader/build/VisualStudio2013/lib/MC/MCParser/LLVMMCParser.vcxproj">
      <Project>AF062598-DCBD-4510-9826-D6E717AFBC52</Project>
    </ProjectReference>
    <ProjectReference Include="/SwiftShader/build/VisualStudio2013/lib/Transforms/ObjCARC/LLVMObjCARCOpts.vcxproj">
      <Project>E56268E5-1661-4BAD-84ED-CEB90934BA65</Project>
    </ProjectReference>
    <ProjectReference Include="/SwiftShader/build/VisualStudio2013/lib/Object/LLVMObject.vcxproj">
      <Project>52F57DEE-0846-46E9-B5B5-6ACAFFAE03FB</Project>
    </ProjectReference>
    <ProjectReference Include="/SwiftShader/build/VisualStudio2013/lib/Transforms/Scalar/LLVMScalarOpts.vcxproj">
      <Project>C83FCA6D-30D5-4123-B9EB-B8E2425F7DB5</Project>
    </ProjectReference>
    <ProjectReference Include="/SwiftShader/build/VisualStudio2013/lib/CodeGen/SelectionDAG/LLVMSelectionDAG.vcxproj">
      <Project>34D062B7-9CFB-4068-A761-C4E0E9EA1DD2</Project>
    </ProjectReference>
    <ProjectReference Include="/SwiftShader/build/VisualStudio2013/lib/Support/LLVMSupport.vcxproj">
      <Project>2A9F594F-1F77-4E35-9CA1-3E290709AB1A</Project>
    </ProjectReference>
    <ProjectReference Include="/SwiftShader/build/VisualStudio2013/lib/Target/LLVMTarget.vcxproj">
      <Project>61FB783A-8AC0-4A62-99AE-0D82E62FB4EC</Project>
    </ProjectReference>
    <ProjectReference Include="/SwiftShader/build/VisualStudio2013/lib/Transforms/Utils/LLVMTransformUtils.vcxproj">
      <Project>F2F9C6D8-4FC3-4EE9-91EA-0BB777DE6E20</Project>
    </ProjectReference>
    <ProjectReference Include="/SwiftShader/build/VisualStudio2013/lib/Target/X86/InstPrinter/LLVMX86AsmPrinter.vcxproj">
      <Project>8AFEAD45-4E0C-45CE-A7DC-B69E87C8892C</Project>
    </ProjectReference>
    <ProjectReference Include="/SwiftShader/build/VisualStudio2013/lib/Target/X86/MCTargetDesc/LLVMX86Desc.vcxproj">
      <Project>C9CA9923-F8AA-4A8E-93BA-066688D558B2</Project>
    </ProjectReference>
    <ProjectReference Include="/SwiftShader/build/VisualStudio2013/lib/Target/X86/TargetInfo/LLVMX86Info.vcxproj">
      <Project>CABD158F-CF9E-403C-9BB5-2358A79742A6</Project>
    </ProjectReference>
    <ProjectReference Include="/SwiftShader/build/VisualStudio2013/lib/Target/X86/Utils/LLVMX86Utils.vcxproj">
      <Project>CC36009F-59DF-477D-9902-D75CAA5DD1DE</Project>
    </ProjectReference>
    <ProjectReference Include="/SwiftShader/build/VisualStudio2013/lib/Analysis/IPA/LLVMipa.vcxproj">
      <Project>D398DE47-5814-4F49-9160-5CF17A9193FD</Project>
    </ProjectReference>
    <ProjectReference Include="/SwiftShader/build/VisualStudio2013/lib/Target/X86/X86CommonTableGen.vcxproj">
      <Project>CF8517DD-4765-46A1-A149-8FA416D20F57</Project>
    </ProjectReference>
    <ProjectReference Include="/SwiftShader/build/VisualStudio2013/ZERO_CHECK.vcxproj">
      <Project>8CD95AE9-0887-446D-9DBF-1CA3BB33A760</Project>
    </ProjectReference>
    <ProjectReference Include="/SwiftShader/build/VisualStudio2013/include/llvm/IR/intrinsics_gen.vcxproj">
      <Project>62E3F817-3B11-40E9-ACA9-5E6D88886C18</Project>
    </ProjectReference>
    <ProjectReference Include="/SwiftShader/build/VisualStudio2013/utils/TableGen/llvm-tblgen.vcxproj">
      <Project>E90FC30E-6539-4BF6-AD4B-3F89664C8451</Project>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>