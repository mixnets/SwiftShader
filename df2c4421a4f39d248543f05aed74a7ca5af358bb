{
  "comments": [
    {
      "key": {
        "uuid": "fa05f680_ff53b590",
        "filename": "tests/regres/cmd/regres/main.go",
        "patchSetId": 1
      },
      "lineNbr": 210,
      "author": {
        "id": 7183
      },
      "writtenOn": "2020-03-23T23:50:35Z",
      "side": 1,
      "message": "nit: If there\u0027s a small set of values that can be used here, I\u0027d probably create a new type for this:\n\n  type reactorBackend string\n\n  const (\n    llvm    reactorBackend \u003d \"LLVM\"\n    subzero reactorBackend \u003d \"Subzero\"\n  )",
      "range": {
        "startLine": 210,
        "startChar": 39,
        "endLine": 210,
        "endChar": 45
      },
      "revId": "df2c4421a4f39d248543f05aed74a7ca5af358bb",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8fe89cf7_33efb426",
        "filename": "tests/regres/cmd/regres/main.go",
        "patchSetId": 1
      },
      "lineNbr": 210,
      "author": {
        "id": 9669
      },
      "writtenOn": "2020-03-24T00:10:53Z",
      "side": 1,
      "message": "Done. Thanks! This is much nicer.",
      "parentUuid": "fa05f680_ff53b590",
      "range": {
        "startLine": 210,
        "startChar": 39,
        "endLine": 210,
        "endChar": 45
      },
      "revId": "df2c4421a4f39d248543f05aed74a7ca5af358bb",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6294097f_42926bbe",
        "filename": "tests/regres/cmd/regres/main.go",
        "patchSetId": 1
      },
      "lineNbr": 530,
      "author": {
        "id": 7183
      },
      "writtenOn": "2020-03-23T23:50:35Z",
      "side": 1,
      "message": "Given that you created the fluent setter, why not use it?\n\ntest :\u003d r.newTest(dailyHash).setReactorBackend(reactorBackend)",
      "range": {
        "startLine": 530,
        "startChar": 6,
        "endLine": 530,
        "endChar": 38
      },
      "revId": "df2c4421a4f39d248543f05aed74a7ca5af358bb",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6bca8e6_ee81767a",
        "filename": "tests/regres/cmd/regres/main.go",
        "patchSetId": 1
      },
      "lineNbr": 530,
      "author": {
        "id": 9669
      },
      "writtenOn": "2020-03-24T00:10:53Z",
      "side": 1,
      "message": "Done. Yep, made it fluent after I wrote this, and meant to do it :)",
      "parentUuid": "6294097f_42926bbe",
      "range": {
        "startLine": 530,
        "startChar": 6,
        "endLine": 530,
        "endChar": 38
      },
      "revId": "df2c4421a4f39d248543f05aed74a7ca5af358bb",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c5f534e_06eb19b7",
        "filename": "tests/regres/cmd/regres/main.go",
        "patchSetId": 1
      },
      "lineNbr": 879,
      "author": {
        "id": 7183
      },
      "writtenOn": "2020-03-23T23:50:35Z",
      "side": 1,
      "message": "There\u0027s no implicit casting in go, so if you did adopt my suggestion above, this would become string(t.reactorBackend)",
      "range": {
        "startLine": 879,
        "startChar": 23,
        "endLine": 879,
        "endChar": 39
      },
      "revId": "df2c4421a4f39d248543f05aed74a7ca5af358bb",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59c260eb_809c143e",
        "filename": "tests/regres/cmd/regres/main.go",
        "patchSetId": 1
      },
      "lineNbr": 879,
      "author": {
        "id": 9669
      },
      "writtenOn": "2020-03-24T00:10:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9c5f534e_06eb19b7",
      "range": {
        "startLine": 879,
        "startChar": 23,
        "endLine": 879,
        "endChar": 39
      },
      "revId": "df2c4421a4f39d248543f05aed74a7ca5af358bb",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    }
  ]
}