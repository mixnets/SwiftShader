{
  "comments": [
    {
      "key": {
        "uuid": "c4785ebf_43645362",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-08-12T12:27:40Z",
      "side": 1,
      "message": "While this is currently true for SwiftShader, we\u0027ll want to be a little careful about this and not exceed expectations of a more typical implementation. We currently \u0027swap\u0027 our swapchain by blitting, and when we start using video memory directly we may no longer be able to read from it.\n\nI wonder if these capability flags should be affected by some creation flags...",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 59
      },
      "revId": "3db0f720f0ea6ff28ef1c25e558ce52a60d93a0c",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83d30c70_13d002a3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 7183
      },
      "writtenOn": "2019-08-12T14:02:38Z",
      "side": 1,
      "message": "\u003e While this is currently true for SwiftShader, we\u0027ll want to be a little careful about this and not exceed expectations of a more typical implementation\n\nThis is a new to me.\nWhat\u0027s a typical implementation? If you want to apply artificial constraints, I\u0027d argue that the user should be able to enable them, but they shouldn\u0027t be defaults.\n\n\u003e We currently \u0027swap\u0027 our swapchain by blitting, and when we start using video memory directly we may no longer be able to read from it.\n\nSure. But we don\u0027t do that yet.",
      "parentUuid": "c4785ebf_43645362",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 59
      },
      "revId": "3db0f720f0ea6ff28ef1c25e558ce52a60d93a0c",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5003c555_72fec083",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 6982
      },
      "writtenOn": "2019-08-14T22:51:48Z",
      "side": 1,
      "message": "You have to be able to blend into it, so you have to be able to read.",
      "parentUuid": "83d30c70_13d002a3",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 59
      },
      "revId": "3db0f720f0ea6ff28ef1c25e558ce52a60d93a0c",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4dcfdef0_3339c0c5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 7183
      },
      "writtenOn": "2019-08-15T14:55:10Z",
      "side": 1,
      "message": "\u003e You have to be able to blend into it, so you have to be able to read.\n\nThat\u0027s a pretty compelling argument.",
      "parentUuid": "5003c555_72fec083",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 59
      },
      "revId": "3db0f720f0ea6ff28ef1c25e558ce52a60d93a0c",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "678a75f6_bbe21240",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-08-15T17:52:58Z",
      "side": 1,
      "message": "Sorry about the paranoia. This does LGTM to me, I just wanted to check if there might be pitfalls. I\u0027ve opened b/139479506 for any follow-up discussion and related changes.\n\n\u003e What\u0027s a typical implementation?\n\nOther vendors\u0027 implementations. Quoting the spec: \"VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT must be included in the set but implementations may support additional usages.\" I\u0027m a little surprised VK_IMAGE_USAGE_TRANSFER_SRC_BIT or even VK_IMAGE_USAGE_TRANSFER_DST_BIT isn\u0027t mandatory, and wonder what\u0027s the reason behind that. Anyway, Mesa sets VK_IMAGE_USAGE_TRANSFER_DST_BIT in all of its WSI implementations.\n\nAnother spec quote: \"The capabilities of a swapchain targeting a surface are the intersection of the capabilities of the WSI platform, the native window or display, and the physical device.\" I can imagine some DRM overlay being write-only, for example. Also, blitting support requires the format to be filterable, which is not the case for unnormalized integer. That\u0027s not a valid surface format for any implementation I\u0027m aware of, but still, it appears someone wanted these bits to be optional for a reason.\n\n\u003e You have to be able to blend into it, so you have to be able to read.\n\nI\u0027m not sure that\u0027s strictly the case. Note that there are separate VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT and VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT feature flags, and the VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT usage flag only requires and image which supports the former feature flag, as far as I\u0027m aware.\n\nAnyway, that distinction probably only applies to unnormalized integer formats, which we\u0027re not dealing with here.",
      "parentUuid": "4dcfdef0_3339c0c5",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 59
      },
      "revId": "3db0f720f0ea6ff28ef1c25e558ce52a60d93a0c",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd21ea22_9bc78639",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-08-15T17:52:58Z",
      "side": 1,
      "message": "Let\u0027s leave this Pastel-specific bug closed.",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 11,
        "endChar": 16
      },
      "revId": "3db0f720f0ea6ff28ef1c25e558ce52a60d93a0c",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd2c4553_6414a6d3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-08-15T17:52:58Z",
      "side": 1,
      "message": "Let\u0027s keep that bug Win32 specific.\n\nPlease use b/139479506 instead.",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 12,
        "endChar": 16
      },
      "revId": "3db0f720f0ea6ff28ef1c25e558ce52a60d93a0c",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    }
  ]
}