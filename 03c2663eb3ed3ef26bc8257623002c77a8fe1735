{
  "comments": [
    {
      "key": {
        "uuid": "fd2d38f1_aff23702",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-06-26T13:43:34Z",
      "side": 1,
      "message": "Is this documented as a bug in LLVM that we can track? Or are we always supposed to bitcast to integer?",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 21
      },
      "revId": "03c2663eb3ed3ef26bc8257623002c77a8fe1735",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79a70cce_9b592147",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 7183
      },
      "writtenOn": "2019-06-26T14:22:01Z",
      "side": 1,
      "message": "Is this documented as a bug in LLVM that we can track?\n\nNot that I\u0027ve found.\n\nThe LLVM claim that floats are legal is here: https://llvm.org/docs/LangRef.html#id210.\n\nUnfortunately it\u0027s not uncommon for LLVM to break on code paths not exercised by clang, and as I highlighted in b/136037244, clang is always bitcasting to/from integer types.\nI would put my money on this being an ARM backend bug. Perhaps there\u0027s a pass to clean this up, but I didn\u0027t see one used when looking into how clang does things.",
      "parentUuid": "fd2d38f1_aff23702",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 21
      },
      "revId": "03c2663eb3ed3ef26bc8257623002c77a8fe1735",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d18f7a5_9ec3f203",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 7183
      },
      "writtenOn": "2019-06-26T14:40:47Z",
      "side": 1,
      "message": "Related: https://github.com/android-ndk/ndk/issues/338#issuecomment-288185992",
      "parentUuid": "79a70cce_9b592147",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 21
      },
      "revId": "03c2663eb3ed3ef26bc8257623002c77a8fe1735",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f4e45ff4_e69932b8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-06-26T14:48:45Z",
      "side": 1,
      "message": "Interesting. Are we not targeting ARMv7 ?",
      "parentUuid": "0d18f7a5_9ec3f203",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 21
      },
      "revId": "03c2663eb3ed3ef26bc8257623002c77a8fe1735",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2da290a6_822e5593",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-06-26T14:51:55Z",
      "side": 1,
      "message": "Looks like we\u0027re setting MArch to \"arm\". Should definitely try \"armv7a\"",
      "parentUuid": "f4e45ff4_e69932b8",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 21
      },
      "revId": "03c2663eb3ed3ef26bc8257623002c77a8fe1735",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d7377889_3ea4b104",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 7183
      },
      "writtenOn": "2019-06-26T14:51:59Z",
      "side": 1,
      "message": "Yes I believe so (although I don\u0027t have a ARM device/toolchain to check with). It\u0027s the same arch, and as the bug points out, I\u0027m able to reproduce the issue seen with \u0027llc -march arm\u0027 - so I think we\u0027re looking at the same thing.\n\nMaybe, possibly, however unlikely, related to hard float / soft float?",
      "parentUuid": "f4e45ff4_e69932b8",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 21
      },
      "revId": "03c2663eb3ed3ef26bc8257623002c77a8fe1735",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53a11907_209c37e9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 7183
      },
      "writtenOn": "2019-06-26T14:55:40Z",
      "side": 1,
      "message": "Yeah, you might be on to something:\n\n\u003e llc -mtriple arm-linux-gnueabihf ./src/tmp/bang.ir\nSoftenFloatResult #0: t4: f32,ch \u003d AtomicLoad\u003c(dereferenceable load acquire 4 from %ir.2)\u003e t0, FrameIndex:i32\u003c0\u003e\n\nDo not know how to soften the result of this operator!\nUNREACHABLE executed at ../lib/CodeGen/SelectionDAG/LegalizeFloatTypes.cpp:59!\n\n\u003e llc -mtriple armv7-linux-gnueabihf ./src/tmp/bang.ir\n\n\u003cno crash\u003e",
      "parentUuid": "d7377889_3ea4b104",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 21
      },
      "revId": "03c2663eb3ed3ef26bc8257623002c77a8fe1735",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e2d89c0_3e90bde3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 7183
      },
      "writtenOn": "2019-06-26T14:58:46Z",
      "side": 1,
      "message": "However, in llc\u0027s world, \u0027-march\u0027 is \u0027arm\u0027. The \u0027v7\u0027 bit I think is a mattr?\nWill investigate.",
      "parentUuid": "53a11907_209c37e9",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 21
      },
      "revId": "03c2663eb3ed3ef26bc8257623002c77a8fe1735",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    }
  ]
}