{
  "comments": [
    {
      "key": {
        "uuid": "a0e39d8f_ce0a1f5d",
        "filename": "src/Common/Debug.hpp",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 5005
      },
      "writtenOn": "2018-03-26T16:54:35Z",
      "side": 1,
      "message": "Could you clarify this host build a bit? Should we really have a situation where __ANDROID__ is defined but Android logging is not available?",
      "range": {
        "startLine": 18,
        "startChar": 37,
        "endLine": 18,
        "endChar": 55
      },
      "revId": "79609d1fc6f529c77ebd409d0082f2b62c2ad7b2",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01a49105_8f29b86e",
        "filename": "src/Common/Debug.hpp",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 6882
      },
      "writtenOn": "2018-03-26T17:05:08Z",
      "side": 1,
      "message": "__ANDROID__ is being used in SwiftShader to enable the Android port\u0027s features, otherwise X11 support is assumed for the Linux platform. We\u0027re trying to move SwiftShader from running inside a qemu guest to running on the host, as part of qemu. We want the Android port\u0027s features, but we might not want the logger, and we definitely don\u0027t want the cutils API (property_get, etc.).\n\nI can look into moving to liblog on the host instead, if that would be preferable, but we\u0027ll still need a way to disable unwanted parts of the Android port (when using them on the host).",
      "parentUuid": "a0e39d8f_ce0a1f5d",
      "range": {
        "startLine": 18,
        "startChar": 37,
        "endLine": 18,
        "endChar": 55
      },
      "revId": "79609d1fc6f529c77ebd409d0082f2b62c2ad7b2",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e0756d5_c271651b",
        "filename": "src/Main/FrameBufferAndroid.cpp",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 5005
      },
      "writtenOn": "2018-03-26T16:54:35Z",
      "side": 1,
      "message": "Minor note: TRACE\u0027s main usage is to log calls to OpenGL entry functions. It\u0027s disabled by default and has a low logging priority so even when enabled it doesn\u0027t show up unless requested. So using it to log these failures is not ideal. That said, our debug macros need a large revamp (b/73656151) so this is fine for now.",
      "range": {
        "startLine": 90,
        "startChar": 3,
        "endLine": 90,
        "endChar": 8
      },
      "revId": "79609d1fc6f529c77ebd409d0082f2b62c2ad7b2",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dea39967_a92f4fc3",
        "filename": "src/Main/FrameBufferAndroid.cpp",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 6882
      },
      "writtenOn": "2018-03-26T17:05:08Z",
      "side": 1,
      "message": "Yes. I didn\u0027t want to use TRACE and preferred to use ERR. But I discovered that ERR is not consistently defined by the common debug code and the opengl debug code, so I left it alone for now.",
      "parentUuid": "1e0756d5_c271651b",
      "range": {
        "startLine": 90,
        "startChar": 3,
        "endLine": 90,
        "endChar": 8
      },
      "revId": "79609d1fc6f529c77ebd409d0082f2b62c2ad7b2",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4",
      "unresolved": false
    }
  ]
}