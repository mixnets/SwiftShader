{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6e25aa12_087c6920",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5050
      },
      "writtenOn": "2022-10-05T20:37:45Z",
      "side": 1,
      "message": "Hi Ben, please review this CL thoroughly. I wasn\u0027t able to quickly setup something to properly verify that this behaves properly, so I need someone with some go knowledge to tell me if this is correct or not.",
      "revId": "516208c4689977352a21de14abb24a29fe63c671",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "67ceb497_95faefdf",
        "filename": "tests/regres/cmd/regres/main.go",
        "patchSetId": 1
      },
      "lineNbr": 822,
      "author": {
        "id": 7183
      },
      "writtenOn": "2022-10-06T12:56:31Z",
      "side": 1,
      "message": "Ã¼bernit: The docs say that `WalkDir` is a bit more efficient, but who cares.",
      "range": {
        "startLine": 822,
        "startChar": 16,
        "endLine": 822,
        "endChar": 20
      },
      "revId": "516208c4689977352a21de14abb24a29fe63c671",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "db47a233_78fba944",
        "filename": "tests/regres/cmd/regres/main.go",
        "patchSetId": 1
      },
      "lineNbr": 822,
      "author": {
        "id": 5050
      },
      "writtenOn": "2022-10-07T18:05:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "67ceb497_95faefdf",
      "range": {
        "startLine": 822,
        "startChar": 16,
        "endLine": 822,
        "endChar": 20
      },
      "revId": "516208c4689977352a21de14abb24a29fe63c671",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "545b9fe4_99f8639f",
        "filename": "tests/regres/cmd/regres/main.go",
        "patchSetId": 1
      },
      "lineNbr": 828,
      "author": {
        "id": 7183
      },
      "writtenOn": "2022-10-06T12:56:31Z",
      "side": 1,
      "message": "`f.Name()` only returns the file name. Given that you are globbing into subdirectories, I think you need to use `pathString`:\n\n```\n        deqpTestlistVkDefaultDir :\u003d path.Join(deqpTestlistDir, \"vk-default\")\n        swsTestlistVkDefaultDir :\u003d path.Join(swsTestlistDir, \"vk-default\")\n\terr \u003d filepath.Walk(deqpTestlistVkDefaultDir,\n\t\tfunc(deqpFile string, f os.FileInfo, err error) error {\n\t\t\tif f.IsDir() || err !\u003d nil {\n\t\t\t\treturn err\n\t\t\t}\n\n\t\t\trelPath, err :\u003d filepath.Rel(deqpTestlistVkDefaultDir, deqpFile)\n\t\t\tif err !\u003d nil {\n\t\t\t\treturn err\n\t\t\t}\n\n\t\t\tswsFile :\u003d path.Join(swsTestlistVkDefaultDir, relPath)\n\t\t\tif err :\u003d copyFileIfDifferent(swsFile, deqpFile); err !\u003d nil {\n\t\t\t\treturn cause.Wrap(err, \"Failed to copy \u0027%s\u0027 to \u0027%s\u0027\", deqpFile, swsFile)\n\t\t\t}\n\t\t\tout \u003d append(out, swsFile)\n\t\t\treturn nil\n\t\t})\n```",
      "range": {
        "startLine": 828,
        "startChar": 55,
        "endLine": 828,
        "endChar": 63
      },
      "revId": "516208c4689977352a21de14abb24a29fe63c671",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5f423579_24bdfd42",
        "filename": "tests/regres/cmd/regres/main.go",
        "patchSetId": 1
      },
      "lineNbr": 828,
      "author": {
        "id": 5050
      },
      "writtenOn": "2022-10-07T18:05:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "545b9fe4_99f8639f",
      "range": {
        "startLine": 828,
        "startChar": 55,
        "endLine": 828,
        "endChar": 63
      },
      "revId": "516208c4689977352a21de14abb24a29fe63c671",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db0910ae_fb1acfc5",
        "filename": "tests/regres/cmd/regres/main.go",
        "patchSetId": 1
      },
      "lineNbr": 842,
      "author": {
        "id": 5005
      },
      "writtenOn": "2022-10-06T01:10:33Z",
      "side": 1,
      "message": "You could just wipe the whole directory first, then copy the new files without having to check for differences.",
      "range": {
        "startLine": 842,
        "startChar": 4,
        "endLine": 842,
        "endChar": 18
      },
      "revId": "516208c4689977352a21de14abb24a29fe63c671",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a6d36aad_4c55d86e",
        "filename": "tests/regres/cmd/regres/main.go",
        "patchSetId": 1
      },
      "lineNbr": 842,
      "author": {
        "id": 7183
      },
      "writtenOn": "2022-10-06T12:56:31Z",
      "side": 1,
      "message": "+1. The only difference I can see with deleting the whole directory and this implementation is that directories would also get deleted (although either way, the files get deleted).",
      "parentUuid": "db0910ae_fb1acfc5",
      "range": {
        "startLine": 842,
        "startChar": 4,
        "endLine": 842,
        "endChar": 18
      },
      "revId": "516208c4689977352a21de14abb24a29fe63c671",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "69074639_60d1c8eb",
        "filename": "tests/regres/cmd/regres/main.go",
        "patchSetId": 1
      },
      "lineNbr": 842,
      "author": {
        "id": 5050
      },
      "writtenOn": "2022-10-07T18:05:30Z",
      "side": 1,
      "message": "Done. Turns out I had trouble testing because one of my early experiments had left the directory structure in a weird state. One I cleaned it up, everything worked fine and I was able to test the change.",
      "parentUuid": "a6d36aad_4c55d86e",
      "range": {
        "startLine": 842,
        "startChar": 4,
        "endLine": 842,
        "endChar": 18
      },
      "revId": "516208c4689977352a21de14abb24a29fe63c671",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3a8cc5a1_ea6fb7d5",
        "filename": "tests/regres/cmd/regres/main.go",
        "patchSetId": 1
      },
      "lineNbr": 842,
      "author": {
        "id": 5050
      },
      "writtenOn": "2022-10-07T21:03:18Z",
      "side": 1,
      "message": "So, this gets pretty hairy if I delete the entire directory first, because that removes the ability to get the list of modified files, which then removes the ability to pass the list of modified files to git.Add(). While this might be doable, it requires a sizable refactor, and I\u0027d rather have this CL landed as is ASAP so that we don\u0027t have to manually update dEQP files anymore, at least, and I can look into refactoring this more thoroughly next week.",
      "parentUuid": "69074639_60d1c8eb",
      "range": {
        "startLine": 842,
        "startChar": 4,
        "endLine": 842,
        "endChar": 18
      },
      "revId": "516208c4689977352a21de14abb24a29fe63c671",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0f37bf04_469004cb",
        "filename": "tests/regres/cmd/regres/main.go",
        "patchSetId": 1
      },
      "lineNbr": 842,
      "author": {
        "id": 5005
      },
      "writtenOn": "2022-10-08T06:20:04Z",
      "side": 1,
      "message": "Fair enough, thanks for giving it a try. According to https://github.com/go-git/go-git/issues/223 there\u0027s an `AddWithOptions()` which should allow to essentially perform `git add --all` but it has a bug (although a workaround is mentioned too). Anyway, that can be looked into later.",
      "parentUuid": "3a8cc5a1_ea6fb7d5",
      "range": {
        "startLine": 842,
        "startChar": 4,
        "endLine": 842,
        "endChar": 18
      },
      "revId": "516208c4689977352a21de14abb24a29fe63c671",
      "serverId": "aea13c4a-0b89-3eca-aee9-e193b1b77aa4"
    }
  ]
}